import {
  _defineProperty,
  _extends,
  _inheritsLoose,
  _objectWithoutPropertiesLoose,
  _setPrototypeOf,
  _typeof,
  toPropertyKey
} from "./chunk-PZCIHBP7.js";
import {
  require_prop_types
} from "./chunk-VA2V73AK.js";
import {
  require_react_dom
} from "./chunk-X45TDZAR.js";
import {
  require_react
} from "./chunk-EQRZOR7U.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-LK32TJAX.js";

// node_modules/lodash.pick/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.pick/index.js"(exports, module) {
    var INFINITY = 1 / 0;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var symbolTag = "[object Symbol]";
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }
    function arrayMap(array, iteratee) {
      var index = -1, length = array ? array.length : 0, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset2 = array.length;
      while (++index < length) {
        array[offset2 + index] = values[index];
      }
      return array;
    }
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var objectToString = objectProto.toString;
    var Symbol2 = root.Symbol;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : void 0;
    var nativeMax = Math.max;
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1, length = array.length;
      predicate || (predicate = isFlattenable);
      result || (result = []);
      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }
    function basePick(object, props) {
      object = Object(object);
      return basePickBy(object, props, function(value, key) {
        return key in object;
      });
    }
    function basePickBy(object, props, predicate) {
      var index = -1, length = props.length, result = {};
      while (++index < length) {
        var key = props[index], value = object[key];
        if (predicate(value, key)) {
          result[key] = value;
        }
      }
      return result;
    }
    function baseRest(func, start) {
      start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
      return function() {
        var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = array;
        return apply(func, this, otherArgs);
      };
    }
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
    }
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    function isArguments(value) {
      return isArrayLikeObject(value) && hasOwnProperty2.call(value, "callee") && (!propertyIsEnumerable.call(value, "callee") || objectToString.call(value) == argsTag);
    }
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction3(value);
    }
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    function isFunction3(value) {
      var tag = isObject(value) ? objectToString.call(value) : "";
      return tag == funcTag || tag == genTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    var pick2 = baseRest(function(object, props) {
      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));
    });
    module.exports = pick2;
  }
});

// node_modules/lodash.isfunction/index.js
var require_lodash2 = __commonJS({
  "node_modules/lodash.isfunction/index.js"(exports, module) {
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var nullTag = "[object Null]";
    var proxyTag = "[object Proxy]";
    var undefinedTag = "[object Undefined]";
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var Symbol2 = root.Symbol;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    function getRawTag(value) {
      var isOwn = hasOwnProperty2.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e3) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    function isFunction3(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module.exports = isFunction3;
  }
});

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports, module) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty;
      function classNames2() {
        var classes = "";
        for (var i2 = 0; i2 < arguments.length; i2++) {
          var arg = arguments[i2];
          if (arg) {
            classes = appendClass(classes, parseValue(arg));
          }
        }
        return classes;
      }
      function parseValue(arg) {
        if (typeof arg === "string" || typeof arg === "number") {
          return arg;
        }
        if (typeof arg !== "object") {
          return "";
        }
        if (Array.isArray(arg)) {
          return classNames2.apply(null, arg);
        }
        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
          return arg.toString();
        }
        var classes = "";
        for (var key in arg) {
          if (hasOwn.call(arg, key) && arg[key]) {
            classes = appendClass(classes, key);
          }
        }
        return classes;
      }
      function appendClass(value, newClass) {
        if (!newClass) {
          return value;
        }
        if (value) {
          return value + " " + newClass;
        }
        return value + newClass;
      }
      if (typeof module !== "undefined" && module.exports) {
        classNames2.default = classNames2;
        module.exports = classNames2;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames2;
        });
      } else {
        window.classNames = classNames2;
      }
    })();
  }
});

// node_modules/object-keys/isArguments.js
var require_isArguments = __commonJS({
  "node_modules/object-keys/isArguments.js"(exports, module) {
    "use strict";
    var toStr = Object.prototype.toString;
    module.exports = function isArguments(value) {
      var str = toStr.call(value);
      var isArgs = str === "[object Arguments]";
      if (!isArgs) {
        isArgs = str !== "[object Array]" && value !== null && typeof value === "object" && typeof value.length === "number" && value.length >= 0 && toStr.call(value.callee) === "[object Function]";
      }
      return isArgs;
    };
  }
});

// node_modules/object-keys/implementation.js
var require_implementation = __commonJS({
  "node_modules/object-keys/implementation.js"(exports, module) {
    "use strict";
    var keysShim;
    if (!Object.keys) {
      has = Object.prototype.hasOwnProperty;
      toStr = Object.prototype.toString;
      isArgs = require_isArguments();
      isEnumerable = Object.prototype.propertyIsEnumerable;
      hasDontEnumBug = !isEnumerable.call({ toString: null }, "toString");
      hasProtoEnumBug = isEnumerable.call(function() {
      }, "prototype");
      dontEnums = [
        "toString",
        "toLocaleString",
        "valueOf",
        "hasOwnProperty",
        "isPrototypeOf",
        "propertyIsEnumerable",
        "constructor"
      ];
      equalsConstructorPrototype = function(o) {
        var ctor = o.constructor;
        return ctor && ctor.prototype === o;
      };
      excludedKeys = {
        $applicationCache: true,
        $console: true,
        $external: true,
        $frame: true,
        $frameElement: true,
        $frames: true,
        $innerHeight: true,
        $innerWidth: true,
        $onmozfullscreenchange: true,
        $onmozfullscreenerror: true,
        $outerHeight: true,
        $outerWidth: true,
        $pageXOffset: true,
        $pageYOffset: true,
        $parent: true,
        $scrollLeft: true,
        $scrollTop: true,
        $scrollX: true,
        $scrollY: true,
        $self: true,
        $webkitIndexedDB: true,
        $webkitStorageInfo: true,
        $window: true
      };
      hasAutomationEqualityBug = function() {
        if (typeof window === "undefined") {
          return false;
        }
        for (var k2 in window) {
          try {
            if (!excludedKeys["$" + k2] && has.call(window, k2) && window[k2] !== null && typeof window[k2] === "object") {
              try {
                equalsConstructorPrototype(window[k2]);
              } catch (e3) {
                return true;
              }
            }
          } catch (e3) {
            return true;
          }
        }
        return false;
      }();
      equalsConstructorPrototypeIfNotBuggy = function(o) {
        if (typeof window === "undefined" || !hasAutomationEqualityBug) {
          return equalsConstructorPrototype(o);
        }
        try {
          return equalsConstructorPrototype(o);
        } catch (e3) {
          return false;
        }
      };
      keysShim = function keys(object) {
        var isObject = object !== null && typeof object === "object";
        var isFunction3 = toStr.call(object) === "[object Function]";
        var isArguments = isArgs(object);
        var isString = isObject && toStr.call(object) === "[object String]";
        var theKeys = [];
        if (!isObject && !isFunction3 && !isArguments) {
          throw new TypeError("Object.keys called on a non-object");
        }
        var skipProto = hasProtoEnumBug && isFunction3;
        if (isString && object.length > 0 && !has.call(object, 0)) {
          for (var i2 = 0; i2 < object.length; ++i2) {
            theKeys.push(String(i2));
          }
        }
        if (isArguments && object.length > 0) {
          for (var j = 0; j < object.length; ++j) {
            theKeys.push(String(j));
          }
        } else {
          for (var name in object) {
            if (!(skipProto && name === "prototype") && has.call(object, name)) {
              theKeys.push(String(name));
            }
          }
        }
        if (hasDontEnumBug) {
          var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);
          for (var k2 = 0; k2 < dontEnums.length; ++k2) {
            if (!(skipConstructor && dontEnums[k2] === "constructor") && has.call(object, dontEnums[k2])) {
              theKeys.push(dontEnums[k2]);
            }
          }
        }
        return theKeys;
      };
    }
    var has;
    var toStr;
    var isArgs;
    var isEnumerable;
    var hasDontEnumBug;
    var hasProtoEnumBug;
    var dontEnums;
    var equalsConstructorPrototype;
    var excludedKeys;
    var hasAutomationEqualityBug;
    var equalsConstructorPrototypeIfNotBuggy;
    module.exports = keysShim;
  }
});

// node_modules/object-keys/index.js
var require_object_keys = __commonJS({
  "node_modules/object-keys/index.js"(exports, module) {
    "use strict";
    var slice = Array.prototype.slice;
    var isArgs = require_isArguments();
    var origKeys = Object.keys;
    var keysShim = origKeys ? function keys(o) {
      return origKeys(o);
    } : require_implementation();
    var originalKeys = Object.keys;
    keysShim.shim = function shimObjectKeys() {
      if (Object.keys) {
        var keysWorksWithArguments = function() {
          var args = Object.keys(arguments);
          return args && args.length === arguments.length;
        }(1, 2);
        if (!keysWorksWithArguments) {
          Object.keys = function keys(object) {
            if (isArgs(object)) {
              return originalKeys(slice.call(object));
            }
            return originalKeys(object);
          };
        }
      } else {
        Object.keys = keysShim;
      }
      return Object.keys || keysShim;
    };
    module.exports = keysShim;
  }
});

// node_modules/has-symbols/shams.js
var require_shams = __commonJS({
  "node_modules/has-symbols/shams.js"(exports, module) {
    "use strict";
    module.exports = function hasSymbols() {
      if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
        return false;
      }
      if (typeof Symbol.iterator === "symbol") {
        return true;
      }
      var obj = {};
      var sym = Symbol("test");
      var symObj = Object(sym);
      if (typeof sym === "string") {
        return false;
      }
      if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
        return false;
      }
      if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
        return false;
      }
      var symVal = 42;
      obj[sym] = symVal;
      for (var _ in obj) {
        return false;
      }
      if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
        return false;
      }
      if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
        return false;
      }
      var syms = Object.getOwnPropertySymbols(obj);
      if (syms.length !== 1 || syms[0] !== sym) {
        return false;
      }
      if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
      }
      if (typeof Object.getOwnPropertyDescriptor === "function") {
        var descriptor = (
          /** @type {PropertyDescriptor} */
          Object.getOwnPropertyDescriptor(obj, sym)
        );
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/has-tostringtag/shams.js
var require_shams2 = __commonJS({
  "node_modules/has-tostringtag/shams.js"(exports, module) {
    "use strict";
    var hasSymbols = require_shams();
    module.exports = function hasToStringTagShams() {
      return hasSymbols() && !!Symbol.toStringTag;
    };
  }
});

// node_modules/es-object-atoms/index.js
var require_es_object_atoms = __commonJS({
  "node_modules/es-object-atoms/index.js"(exports, module) {
    "use strict";
    module.exports = Object;
  }
});

// node_modules/es-errors/index.js
var require_es_errors = __commonJS({
  "node_modules/es-errors/index.js"(exports, module) {
    "use strict";
    module.exports = Error;
  }
});

// node_modules/es-errors/eval.js
var require_eval = __commonJS({
  "node_modules/es-errors/eval.js"(exports, module) {
    "use strict";
    module.exports = EvalError;
  }
});

// node_modules/es-errors/range.js
var require_range = __commonJS({
  "node_modules/es-errors/range.js"(exports, module) {
    "use strict";
    module.exports = RangeError;
  }
});

// node_modules/es-errors/ref.js
var require_ref = __commonJS({
  "node_modules/es-errors/ref.js"(exports, module) {
    "use strict";
    module.exports = ReferenceError;
  }
});

// node_modules/es-errors/syntax.js
var require_syntax = __commonJS({
  "node_modules/es-errors/syntax.js"(exports, module) {
    "use strict";
    module.exports = SyntaxError;
  }
});

// node_modules/es-errors/type.js
var require_type = __commonJS({
  "node_modules/es-errors/type.js"(exports, module) {
    "use strict";
    module.exports = TypeError;
  }
});

// node_modules/es-errors/uri.js
var require_uri = __commonJS({
  "node_modules/es-errors/uri.js"(exports, module) {
    "use strict";
    module.exports = URIError;
  }
});

// node_modules/math-intrinsics/abs.js
var require_abs = __commonJS({
  "node_modules/math-intrinsics/abs.js"(exports, module) {
    "use strict";
    module.exports = Math.abs;
  }
});

// node_modules/math-intrinsics/floor.js
var require_floor = __commonJS({
  "node_modules/math-intrinsics/floor.js"(exports, module) {
    "use strict";
    module.exports = Math.floor;
  }
});

// node_modules/math-intrinsics/max.js
var require_max = __commonJS({
  "node_modules/math-intrinsics/max.js"(exports, module) {
    "use strict";
    module.exports = Math.max;
  }
});

// node_modules/math-intrinsics/min.js
var require_min = __commonJS({
  "node_modules/math-intrinsics/min.js"(exports, module) {
    "use strict";
    module.exports = Math.min;
  }
});

// node_modules/math-intrinsics/pow.js
var require_pow = __commonJS({
  "node_modules/math-intrinsics/pow.js"(exports, module) {
    "use strict";
    module.exports = Math.pow;
  }
});

// node_modules/math-intrinsics/round.js
var require_round = __commonJS({
  "node_modules/math-intrinsics/round.js"(exports, module) {
    "use strict";
    module.exports = Math.round;
  }
});

// node_modules/math-intrinsics/isNaN.js
var require_isNaN = __commonJS({
  "node_modules/math-intrinsics/isNaN.js"(exports, module) {
    "use strict";
    module.exports = Number.isNaN || function isNaN2(a3) {
      return a3 !== a3;
    };
  }
});

// node_modules/math-intrinsics/sign.js
var require_sign = __commonJS({
  "node_modules/math-intrinsics/sign.js"(exports, module) {
    "use strict";
    var $isNaN = require_isNaN();
    module.exports = function sign(number) {
      if ($isNaN(number) || number === 0) {
        return number;
      }
      return number < 0 ? -1 : 1;
    };
  }
});

// node_modules/gopd/gOPD.js
var require_gOPD = __commonJS({
  "node_modules/gopd/gOPD.js"(exports, module) {
    "use strict";
    module.exports = Object.getOwnPropertyDescriptor;
  }
});

// node_modules/gopd/index.js
var require_gopd = __commonJS({
  "node_modules/gopd/index.js"(exports, module) {
    "use strict";
    var $gOPD = require_gOPD();
    if ($gOPD) {
      try {
        $gOPD([], "length");
      } catch (e3) {
        $gOPD = null;
      }
    }
    module.exports = $gOPD;
  }
});

// node_modules/es-define-property/index.js
var require_es_define_property = __commonJS({
  "node_modules/es-define-property/index.js"(exports, module) {
    "use strict";
    var $defineProperty = Object.defineProperty || false;
    if ($defineProperty) {
      try {
        $defineProperty({}, "a", { value: 1 });
      } catch (e3) {
        $defineProperty = false;
      }
    }
    module.exports = $defineProperty;
  }
});

// node_modules/has-symbols/index.js
var require_has_symbols = __commonJS({
  "node_modules/has-symbols/index.js"(exports, module) {
    "use strict";
    var origSymbol = typeof Symbol !== "undefined" && Symbol;
    var hasSymbolSham = require_shams();
    module.exports = function hasNativeSymbols() {
      if (typeof origSymbol !== "function") {
        return false;
      }
      if (typeof Symbol !== "function") {
        return false;
      }
      if (typeof origSymbol("foo") !== "symbol") {
        return false;
      }
      if (typeof Symbol("bar") !== "symbol") {
        return false;
      }
      return hasSymbolSham();
    };
  }
});

// node_modules/get-proto/Reflect.getPrototypeOf.js
var require_Reflect_getPrototypeOf = __commonJS({
  "node_modules/get-proto/Reflect.getPrototypeOf.js"(exports, module) {
    "use strict";
    module.exports = typeof Reflect !== "undefined" && Reflect.getPrototypeOf || null;
  }
});

// node_modules/get-proto/Object.getPrototypeOf.js
var require_Object_getPrototypeOf = __commonJS({
  "node_modules/get-proto/Object.getPrototypeOf.js"(exports, module) {
    "use strict";
    var $Object = require_es_object_atoms();
    module.exports = $Object.getPrototypeOf || null;
  }
});

// node_modules/function-bind/implementation.js
var require_implementation2 = __commonJS({
  "node_modules/function-bind/implementation.js"(exports, module) {
    "use strict";
    var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
    var toStr = Object.prototype.toString;
    var max2 = Math.max;
    var funcType = "[object Function]";
    var concatty = function concatty2(a3, b2) {
      var arr = [];
      for (var i2 = 0; i2 < a3.length; i2 += 1) {
        arr[i2] = a3[i2];
      }
      for (var j = 0; j < b2.length; j += 1) {
        arr[j + a3.length] = b2[j];
      }
      return arr;
    };
    var slicy = function slicy2(arrLike, offset2) {
      var arr = [];
      for (var i2 = offset2 || 0, j = 0; i2 < arrLike.length; i2 += 1, j += 1) {
        arr[j] = arrLike[i2];
      }
      return arr;
    };
    var joiny = function(arr, joiner) {
      var str = "";
      for (var i2 = 0; i2 < arr.length; i2 += 1) {
        str += arr[i2];
        if (i2 + 1 < arr.length) {
          str += joiner;
        }
      }
      return str;
    };
    module.exports = function bind(that) {
      var target = this;
      if (typeof target !== "function" || toStr.apply(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
      }
      var args = slicy(arguments, 1);
      var bound;
      var binder = function() {
        if (this instanceof bound) {
          var result = target.apply(
            this,
            concatty(args, arguments)
          );
          if (Object(result) === result) {
            return result;
          }
          return this;
        }
        return target.apply(
          that,
          concatty(args, arguments)
        );
      };
      var boundLength = max2(0, target.length - args.length);
      var boundArgs = [];
      for (var i2 = 0; i2 < boundLength; i2++) {
        boundArgs[i2] = "$" + i2;
      }
      bound = Function("binder", "return function (" + joiny(boundArgs, ",") + "){ return binder.apply(this,arguments); }")(binder);
      if (target.prototype) {
        var Empty = function Empty2() {
        };
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
      }
      return bound;
    };
  }
});

// node_modules/function-bind/index.js
var require_function_bind = __commonJS({
  "node_modules/function-bind/index.js"(exports, module) {
    "use strict";
    var implementation = require_implementation2();
    module.exports = Function.prototype.bind || implementation;
  }
});

// node_modules/call-bind-apply-helpers/functionCall.js
var require_functionCall = __commonJS({
  "node_modules/call-bind-apply-helpers/functionCall.js"(exports, module) {
    "use strict";
    module.exports = Function.prototype.call;
  }
});

// node_modules/call-bind-apply-helpers/functionApply.js
var require_functionApply = __commonJS({
  "node_modules/call-bind-apply-helpers/functionApply.js"(exports, module) {
    "use strict";
    module.exports = Function.prototype.apply;
  }
});

// node_modules/call-bind-apply-helpers/reflectApply.js
var require_reflectApply = __commonJS({
  "node_modules/call-bind-apply-helpers/reflectApply.js"(exports, module) {
    "use strict";
    module.exports = typeof Reflect !== "undefined" && Reflect && Reflect.apply;
  }
});

// node_modules/call-bind-apply-helpers/actualApply.js
var require_actualApply = __commonJS({
  "node_modules/call-bind-apply-helpers/actualApply.js"(exports, module) {
    "use strict";
    var bind = require_function_bind();
    var $apply = require_functionApply();
    var $call = require_functionCall();
    var $reflectApply = require_reflectApply();
    module.exports = $reflectApply || bind.call($call, $apply);
  }
});

// node_modules/call-bind-apply-helpers/index.js
var require_call_bind_apply_helpers = __commonJS({
  "node_modules/call-bind-apply-helpers/index.js"(exports, module) {
    "use strict";
    var bind = require_function_bind();
    var $TypeError = require_type();
    var $call = require_functionCall();
    var $actualApply = require_actualApply();
    module.exports = function callBindBasic(args) {
      if (args.length < 1 || typeof args[0] !== "function") {
        throw new $TypeError("a function is required");
      }
      return $actualApply(bind, $call, args);
    };
  }
});

// node_modules/dunder-proto/get.js
var require_get = __commonJS({
  "node_modules/dunder-proto/get.js"(exports, module) {
    "use strict";
    var callBind = require_call_bind_apply_helpers();
    var gOPD = require_gopd();
    var hasProtoAccessor;
    try {
      hasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */
      [].__proto__ === Array.prototype;
    } catch (e3) {
      if (!e3 || typeof e3 !== "object" || !("code" in e3) || e3.code !== "ERR_PROTO_ACCESS") {
        throw e3;
      }
    }
    var desc = !!hasProtoAccessor && gOPD && gOPD(
      Object.prototype,
      /** @type {keyof typeof Object.prototype} */
      "__proto__"
    );
    var $Object = Object;
    var $getPrototypeOf = $Object.getPrototypeOf;
    module.exports = desc && typeof desc.get === "function" ? callBind([desc.get]) : typeof $getPrototypeOf === "function" ? (
      /** @type {import('./get')} */
      function getDunder(value) {
        return $getPrototypeOf(value == null ? value : $Object(value));
      }
    ) : false;
  }
});

// node_modules/get-proto/index.js
var require_get_proto = __commonJS({
  "node_modules/get-proto/index.js"(exports, module) {
    "use strict";
    var reflectGetProto = require_Reflect_getPrototypeOf();
    var originalGetProto = require_Object_getPrototypeOf();
    var getDunderProto = require_get();
    module.exports = reflectGetProto ? function getProto(O2) {
      return reflectGetProto(O2);
    } : originalGetProto ? function getProto(O2) {
      if (!O2 || typeof O2 !== "object" && typeof O2 !== "function") {
        throw new TypeError("getProto: not an object");
      }
      return originalGetProto(O2);
    } : getDunderProto ? function getProto(O2) {
      return getDunderProto(O2);
    } : null;
  }
});

// node_modules/hasown/index.js
var require_hasown = __commonJS({
  "node_modules/hasown/index.js"(exports, module) {
    "use strict";
    var call = Function.prototype.call;
    var $hasOwn = Object.prototype.hasOwnProperty;
    var bind = require_function_bind();
    module.exports = bind.call(call, $hasOwn);
  }
});

// node_modules/get-intrinsic/index.js
var require_get_intrinsic = __commonJS({
  "node_modules/get-intrinsic/index.js"(exports, module) {
    "use strict";
    var undefined2;
    var $Object = require_es_object_atoms();
    var $Error = require_es_errors();
    var $EvalError = require_eval();
    var $RangeError = require_range();
    var $ReferenceError = require_ref();
    var $SyntaxError = require_syntax();
    var $TypeError = require_type();
    var $URIError = require_uri();
    var abs = require_abs();
    var floor = require_floor();
    var max2 = require_max();
    var min2 = require_min();
    var pow = require_pow();
    var round = require_round();
    var sign = require_sign();
    var $Function = Function;
    var getEvalledConstructor = function(expressionSyntax) {
      try {
        return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
      } catch (e3) {
      }
    };
    var $gOPD = require_gopd();
    var $defineProperty = require_es_define_property();
    var throwTypeError = function() {
      throw new $TypeError();
    };
    var ThrowTypeError = $gOPD ? function() {
      try {
        arguments.callee;
        return throwTypeError;
      } catch (calleeThrows) {
        try {
          return $gOPD(arguments, "callee").get;
        } catch (gOPDthrows) {
          return throwTypeError;
        }
      }
    }() : throwTypeError;
    var hasSymbols = require_has_symbols()();
    var getProto = require_get_proto();
    var $ObjectGPO = require_Object_getPrototypeOf();
    var $ReflectGPO = require_Reflect_getPrototypeOf();
    var $apply = require_functionApply();
    var $call = require_functionCall();
    var needsEval = {};
    var TypedArray = typeof Uint8Array === "undefined" || !getProto ? undefined2 : getProto(Uint8Array);
    var INTRINSICS = {
      __proto__: null,
      "%AggregateError%": typeof AggregateError === "undefined" ? undefined2 : AggregateError,
      "%Array%": Array,
      "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined2 : ArrayBuffer,
      "%ArrayIteratorPrototype%": hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined2,
      "%AsyncFromSyncIteratorPrototype%": undefined2,
      "%AsyncFunction%": needsEval,
      "%AsyncGenerator%": needsEval,
      "%AsyncGeneratorFunction%": needsEval,
      "%AsyncIteratorPrototype%": needsEval,
      "%Atomics%": typeof Atomics === "undefined" ? undefined2 : Atomics,
      "%BigInt%": typeof BigInt === "undefined" ? undefined2 : BigInt,
      "%BigInt64Array%": typeof BigInt64Array === "undefined" ? undefined2 : BigInt64Array,
      "%BigUint64Array%": typeof BigUint64Array === "undefined" ? undefined2 : BigUint64Array,
      "%Boolean%": Boolean,
      "%DataView%": typeof DataView === "undefined" ? undefined2 : DataView,
      "%Date%": Date,
      "%decodeURI%": decodeURI,
      "%decodeURIComponent%": decodeURIComponent,
      "%encodeURI%": encodeURI,
      "%encodeURIComponent%": encodeURIComponent,
      "%Error%": $Error,
      "%eval%": eval,
      // eslint-disable-line no-eval
      "%EvalError%": $EvalError,
      "%Float16Array%": typeof Float16Array === "undefined" ? undefined2 : Float16Array,
      "%Float32Array%": typeof Float32Array === "undefined" ? undefined2 : Float32Array,
      "%Float64Array%": typeof Float64Array === "undefined" ? undefined2 : Float64Array,
      "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined2 : FinalizationRegistry,
      "%Function%": $Function,
      "%GeneratorFunction%": needsEval,
      "%Int8Array%": typeof Int8Array === "undefined" ? undefined2 : Int8Array,
      "%Int16Array%": typeof Int16Array === "undefined" ? undefined2 : Int16Array,
      "%Int32Array%": typeof Int32Array === "undefined" ? undefined2 : Int32Array,
      "%isFinite%": isFinite,
      "%isNaN%": isNaN,
      "%IteratorPrototype%": hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined2,
      "%JSON%": typeof JSON === "object" ? JSON : undefined2,
      "%Map%": typeof Map === "undefined" ? undefined2 : Map,
      "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Map())[Symbol.iterator]()),
      "%Math%": Math,
      "%Number%": Number,
      "%Object%": $Object,
      "%Object.getOwnPropertyDescriptor%": $gOPD,
      "%parseFloat%": parseFloat,
      "%parseInt%": parseInt,
      "%Promise%": typeof Promise === "undefined" ? undefined2 : Promise,
      "%Proxy%": typeof Proxy === "undefined" ? undefined2 : Proxy,
      "%RangeError%": $RangeError,
      "%ReferenceError%": $ReferenceError,
      "%Reflect%": typeof Reflect === "undefined" ? undefined2 : Reflect,
      "%RegExp%": RegExp,
      "%Set%": typeof Set === "undefined" ? undefined2 : Set,
      "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto((/* @__PURE__ */ new Set())[Symbol.iterator]()),
      "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined2 : SharedArrayBuffer,
      "%String%": String,
      "%StringIteratorPrototype%": hasSymbols && getProto ? getProto(""[Symbol.iterator]()) : undefined2,
      "%Symbol%": hasSymbols ? Symbol : undefined2,
      "%SyntaxError%": $SyntaxError,
      "%ThrowTypeError%": ThrowTypeError,
      "%TypedArray%": TypedArray,
      "%TypeError%": $TypeError,
      "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined2 : Uint8Array,
      "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined2 : Uint8ClampedArray,
      "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined2 : Uint16Array,
      "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined2 : Uint32Array,
      "%URIError%": $URIError,
      "%WeakMap%": typeof WeakMap === "undefined" ? undefined2 : WeakMap,
      "%WeakRef%": typeof WeakRef === "undefined" ? undefined2 : WeakRef,
      "%WeakSet%": typeof WeakSet === "undefined" ? undefined2 : WeakSet,
      "%Function.prototype.call%": $call,
      "%Function.prototype.apply%": $apply,
      "%Object.defineProperty%": $defineProperty,
      "%Object.getPrototypeOf%": $ObjectGPO,
      "%Math.abs%": abs,
      "%Math.floor%": floor,
      "%Math.max%": max2,
      "%Math.min%": min2,
      "%Math.pow%": pow,
      "%Math.round%": round,
      "%Math.sign%": sign,
      "%Reflect.getPrototypeOf%": $ReflectGPO
    };
    if (getProto) {
      try {
        null.error;
      } catch (e3) {
        errorProto = getProto(getProto(e3));
        INTRINSICS["%Error.prototype%"] = errorProto;
      }
    }
    var errorProto;
    var doEval = function doEval2(name) {
      var value;
      if (name === "%AsyncFunction%") {
        value = getEvalledConstructor("async function () {}");
      } else if (name === "%GeneratorFunction%") {
        value = getEvalledConstructor("function* () {}");
      } else if (name === "%AsyncGeneratorFunction%") {
        value = getEvalledConstructor("async function* () {}");
      } else if (name === "%AsyncGenerator%") {
        var fn = doEval2("%AsyncGeneratorFunction%");
        if (fn) {
          value = fn.prototype;
        }
      } else if (name === "%AsyncIteratorPrototype%") {
        var gen = doEval2("%AsyncGenerator%");
        if (gen && getProto) {
          value = getProto(gen.prototype);
        }
      }
      INTRINSICS[name] = value;
      return value;
    };
    var LEGACY_ALIASES = {
      __proto__: null,
      "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
      "%ArrayPrototype%": ["Array", "prototype"],
      "%ArrayProto_entries%": ["Array", "prototype", "entries"],
      "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
      "%ArrayProto_keys%": ["Array", "prototype", "keys"],
      "%ArrayProto_values%": ["Array", "prototype", "values"],
      "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
      "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
      "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
      "%BooleanPrototype%": ["Boolean", "prototype"],
      "%DataViewPrototype%": ["DataView", "prototype"],
      "%DatePrototype%": ["Date", "prototype"],
      "%ErrorPrototype%": ["Error", "prototype"],
      "%EvalErrorPrototype%": ["EvalError", "prototype"],
      "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
      "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
      "%FunctionPrototype%": ["Function", "prototype"],
      "%Generator%": ["GeneratorFunction", "prototype"],
      "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
      "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
      "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
      "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
      "%JSONParse%": ["JSON", "parse"],
      "%JSONStringify%": ["JSON", "stringify"],
      "%MapPrototype%": ["Map", "prototype"],
      "%NumberPrototype%": ["Number", "prototype"],
      "%ObjectPrototype%": ["Object", "prototype"],
      "%ObjProto_toString%": ["Object", "prototype", "toString"],
      "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
      "%PromisePrototype%": ["Promise", "prototype"],
      "%PromiseProto_then%": ["Promise", "prototype", "then"],
      "%Promise_all%": ["Promise", "all"],
      "%Promise_reject%": ["Promise", "reject"],
      "%Promise_resolve%": ["Promise", "resolve"],
      "%RangeErrorPrototype%": ["RangeError", "prototype"],
      "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
      "%RegExpPrototype%": ["RegExp", "prototype"],
      "%SetPrototype%": ["Set", "prototype"],
      "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
      "%StringPrototype%": ["String", "prototype"],
      "%SymbolPrototype%": ["Symbol", "prototype"],
      "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
      "%TypedArrayPrototype%": ["TypedArray", "prototype"],
      "%TypeErrorPrototype%": ["TypeError", "prototype"],
      "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
      "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
      "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
      "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
      "%URIErrorPrototype%": ["URIError", "prototype"],
      "%WeakMapPrototype%": ["WeakMap", "prototype"],
      "%WeakSetPrototype%": ["WeakSet", "prototype"]
    };
    var bind = require_function_bind();
    var hasOwn = require_hasown();
    var $concat = bind.call($call, Array.prototype.concat);
    var $spliceApply = bind.call($apply, Array.prototype.splice);
    var $replace = bind.call($call, String.prototype.replace);
    var $strSlice = bind.call($call, String.prototype.slice);
    var $exec = bind.call($call, RegExp.prototype.exec);
    var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = function stringToPath2(string) {
      var first = $strSlice(string, 0, 1);
      var last = $strSlice(string, -1);
      if (first === "%" && last !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
      } else if (last === "%" && first !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
      }
      var result = [];
      $replace(string, rePropName, function(match2, number, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number || match2;
      });
      return result;
    };
    var getBaseIntrinsic = function getBaseIntrinsic2(name, allowMissing) {
      var intrinsicName = name;
      var alias;
      if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = "%" + alias[0] + "%";
      }
      if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
          value = doEval(intrinsicName);
        }
        if (typeof value === "undefined" && !allowMissing) {
          throw new $TypeError("intrinsic " + name + " exists, but is not available. Please file an issue!");
        }
        return {
          alias,
          name: intrinsicName,
          value
        };
      }
      throw new $SyntaxError("intrinsic " + name + " does not exist!");
    };
    module.exports = function GetIntrinsic(name, allowMissing) {
      if (typeof name !== "string" || name.length === 0) {
        throw new $TypeError("intrinsic name must be a non-empty string");
      }
      if (arguments.length > 1 && typeof allowMissing !== "boolean") {
        throw new $TypeError('"allowMissing" argument must be a boolean');
      }
      if ($exec(/^%?[^%]*%?$/, name) === null) {
        throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      }
      var parts = stringToPath(name);
      var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
      var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
      var intrinsicRealName = intrinsic.name;
      var value = intrinsic.value;
      var skipFurtherCaching = false;
      var alias = intrinsic.alias;
      if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([0, 1], alias));
      }
      for (var i2 = 1, isOwn = true; i2 < parts.length; i2 += 1) {
        var part = parts[i2];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === "`" || (last === '"' || last === "'" || last === "`")) && first !== last) {
          throw new $SyntaxError("property names with quotes must have matching quotes");
        }
        if (part === "constructor" || !isOwn) {
          skipFurtherCaching = true;
        }
        intrinsicBaseName += "." + part;
        intrinsicRealName = "%" + intrinsicBaseName + "%";
        if (hasOwn(INTRINSICS, intrinsicRealName)) {
          value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
          if (!(part in value)) {
            if (!allowMissing) {
              throw new $TypeError("base intrinsic for " + name + " exists, but the property is not available.");
            }
            return void 0;
          }
          if ($gOPD && i2 + 1 >= parts.length) {
            var desc = $gOPD(value, part);
            isOwn = !!desc;
            if (isOwn && "get" in desc && !("originalValue" in desc.get)) {
              value = desc.get;
            } else {
              value = value[part];
            }
          } else {
            isOwn = hasOwn(value, part);
            value = value[part];
          }
          if (isOwn && !skipFurtherCaching) {
            INTRINSICS[intrinsicRealName] = value;
          }
        }
      }
      return value;
    };
  }
});

// node_modules/call-bound/index.js
var require_call_bound = __commonJS({
  "node_modules/call-bound/index.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBindBasic = require_call_bind_apply_helpers();
    var $indexOf = callBindBasic([GetIntrinsic("%String.prototype.indexOf%")]);
    module.exports = function callBoundIntrinsic(name, allowMissing) {
      var intrinsic = (
        /** @type {(this: unknown, ...args: unknown[]) => unknown} */
        GetIntrinsic(name, !!allowMissing)
      );
      if (typeof intrinsic === "function" && $indexOf(name, ".prototype.") > -1) {
        return callBindBasic(
          /** @type {const} */
          [intrinsic]
        );
      }
      return intrinsic;
    };
  }
});

// node_modules/is-arguments/index.js
var require_is_arguments = __commonJS({
  "node_modules/is-arguments/index.js"(exports, module) {
    "use strict";
    var hasToStringTag = require_shams2()();
    var callBound = require_call_bound();
    var $toString = callBound("Object.prototype.toString");
    var isStandardArguments = function isArguments(value) {
      if (hasToStringTag && value && typeof value === "object" && Symbol.toStringTag in value) {
        return false;
      }
      return $toString(value) === "[object Arguments]";
    };
    var isLegacyArguments = function isArguments(value) {
      if (isStandardArguments(value)) {
        return true;
      }
      return value !== null && typeof value === "object" && "length" in value && typeof value.length === "number" && value.length >= 0 && $toString(value) !== "[object Array]" && "callee" in value && $toString(value.callee) === "[object Function]";
    };
    var supportsStandardArguments = function() {
      return isStandardArguments(arguments);
    }();
    isStandardArguments.isLegacyArguments = isLegacyArguments;
    module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;
  }
});

// node_modules/define-data-property/index.js
var require_define_data_property = __commonJS({
  "node_modules/define-data-property/index.js"(exports, module) {
    "use strict";
    var $defineProperty = require_es_define_property();
    var $SyntaxError = require_syntax();
    var $TypeError = require_type();
    var gopd = require_gopd();
    module.exports = function defineDataProperty(obj, property, value) {
      if (!obj || typeof obj !== "object" && typeof obj !== "function") {
        throw new $TypeError("`obj` must be an object or a function`");
      }
      if (typeof property !== "string" && typeof property !== "symbol") {
        throw new $TypeError("`property` must be a string or a symbol`");
      }
      if (arguments.length > 3 && typeof arguments[3] !== "boolean" && arguments[3] !== null) {
        throw new $TypeError("`nonEnumerable`, if provided, must be a boolean or null");
      }
      if (arguments.length > 4 && typeof arguments[4] !== "boolean" && arguments[4] !== null) {
        throw new $TypeError("`nonWritable`, if provided, must be a boolean or null");
      }
      if (arguments.length > 5 && typeof arguments[5] !== "boolean" && arguments[5] !== null) {
        throw new $TypeError("`nonConfigurable`, if provided, must be a boolean or null");
      }
      if (arguments.length > 6 && typeof arguments[6] !== "boolean") {
        throw new $TypeError("`loose`, if provided, must be a boolean");
      }
      var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
      var nonWritable = arguments.length > 4 ? arguments[4] : null;
      var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
      var loose = arguments.length > 6 ? arguments[6] : false;
      var desc = !!gopd && gopd(obj, property);
      if ($defineProperty) {
        $defineProperty(obj, property, {
          configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
          enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
          value,
          writable: nonWritable === null && desc ? desc.writable : !nonWritable
        });
      } else if (loose || !nonEnumerable && !nonWritable && !nonConfigurable) {
        obj[property] = value;
      } else {
        throw new $SyntaxError("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
      }
    };
  }
});

// node_modules/has-property-descriptors/index.js
var require_has_property_descriptors = __commonJS({
  "node_modules/has-property-descriptors/index.js"(exports, module) {
    "use strict";
    var $defineProperty = require_es_define_property();
    var hasPropertyDescriptors = function hasPropertyDescriptors2() {
      return !!$defineProperty;
    };
    hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
      if (!$defineProperty) {
        return null;
      }
      try {
        return $defineProperty([], "length", { value: 1 }).length !== 1;
      } catch (e3) {
        return true;
      }
    };
    module.exports = hasPropertyDescriptors;
  }
});

// node_modules/define-properties/index.js
var require_define_properties = __commonJS({
  "node_modules/define-properties/index.js"(exports, module) {
    "use strict";
    var keys = require_object_keys();
    var hasSymbols = typeof Symbol === "function" && typeof Symbol("foo") === "symbol";
    var toStr = Object.prototype.toString;
    var concat = Array.prototype.concat;
    var defineDataProperty = require_define_data_property();
    var isFunction3 = function(fn) {
      return typeof fn === "function" && toStr.call(fn) === "[object Function]";
    };
    var supportsDescriptors = require_has_property_descriptors()();
    var defineProperty2 = function(object, name, value, predicate) {
      if (name in object) {
        if (predicate === true) {
          if (object[name] === value) {
            return;
          }
        } else if (!isFunction3(predicate) || !predicate()) {
          return;
        }
      }
      if (supportsDescriptors) {
        defineDataProperty(object, name, value, true);
      } else {
        defineDataProperty(object, name, value);
      }
    };
    var defineProperties = function(object, map) {
      var predicates = arguments.length > 2 ? arguments[2] : {};
      var props = keys(map);
      if (hasSymbols) {
        props = concat.call(props, Object.getOwnPropertySymbols(map));
      }
      for (var i2 = 0; i2 < props.length; i2 += 1) {
        defineProperty2(object, props[i2], map[props[i2]], predicates[props[i2]]);
      }
    };
    defineProperties.supportsDescriptors = !!supportsDescriptors;
    module.exports = defineProperties;
  }
});

// node_modules/set-function-length/index.js
var require_set_function_length = __commonJS({
  "node_modules/set-function-length/index.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var define2 = require_define_data_property();
    var hasDescriptors = require_has_property_descriptors()();
    var gOPD = require_gopd();
    var $TypeError = require_type();
    var $floor = GetIntrinsic("%Math.floor%");
    module.exports = function setFunctionLength(fn, length) {
      if (typeof fn !== "function") {
        throw new $TypeError("`fn` is not a function");
      }
      if (typeof length !== "number" || length < 0 || length > 4294967295 || $floor(length) !== length) {
        throw new $TypeError("`length` must be a positive 32-bit integer");
      }
      var loose = arguments.length > 2 && !!arguments[2];
      var functionLengthIsConfigurable = true;
      var functionLengthIsWritable = true;
      if ("length" in fn && gOPD) {
        var desc = gOPD(fn, "length");
        if (desc && !desc.configurable) {
          functionLengthIsConfigurable = false;
        }
        if (desc && !desc.writable) {
          functionLengthIsWritable = false;
        }
      }
      if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {
        if (hasDescriptors) {
          define2(
            /** @type {Parameters<define>[0]} */
            fn,
            "length",
            length,
            true,
            true
          );
        } else {
          define2(
            /** @type {Parameters<define>[0]} */
            fn,
            "length",
            length
          );
        }
      }
      return fn;
    };
  }
});

// node_modules/call-bind/index.js
var require_call_bind = __commonJS({
  "node_modules/call-bind/index.js"(exports, module) {
    "use strict";
    var bind = require_function_bind();
    var GetIntrinsic = require_get_intrinsic();
    var setFunctionLength = require_set_function_length();
    var $TypeError = require_type();
    var $apply = GetIntrinsic("%Function.prototype.apply%");
    var $call = GetIntrinsic("%Function.prototype.call%");
    var $reflectApply = GetIntrinsic("%Reflect.apply%", true) || bind.call($call, $apply);
    var $defineProperty = require_es_define_property();
    var $max = GetIntrinsic("%Math.max%");
    module.exports = function callBind(originalFunction) {
      if (typeof originalFunction !== "function") {
        throw new $TypeError("a function is required");
      }
      var func = $reflectApply(bind, $call, arguments);
      return setFunctionLength(
        func,
        1 + $max(0, originalFunction.length - (arguments.length - 1)),
        true
      );
    };
    var applyBind = function applyBind2() {
      return $reflectApply(bind, $apply, arguments);
    };
    if ($defineProperty) {
      $defineProperty(module.exports, "apply", { value: applyBind });
    } else {
      module.exports.apply = applyBind;
    }
  }
});

// node_modules/object-is/implementation.js
var require_implementation3 = __commonJS({
  "node_modules/object-is/implementation.js"(exports, module) {
    "use strict";
    var numberIsNaN = function(value) {
      return value !== value;
    };
    module.exports = function is(a3, b2) {
      if (a3 === 0 && b2 === 0) {
        return 1 / a3 === 1 / b2;
      }
      if (a3 === b2) {
        return true;
      }
      if (numberIsNaN(a3) && numberIsNaN(b2)) {
        return true;
      }
      return false;
    };
  }
});

// node_modules/object-is/polyfill.js
var require_polyfill = __commonJS({
  "node_modules/object-is/polyfill.js"(exports, module) {
    "use strict";
    var implementation = require_implementation3();
    module.exports = function getPolyfill() {
      return typeof Object.is === "function" ? Object.is : implementation;
    };
  }
});

// node_modules/object-is/shim.js
var require_shim = __commonJS({
  "node_modules/object-is/shim.js"(exports, module) {
    "use strict";
    var getPolyfill = require_polyfill();
    var define2 = require_define_properties();
    module.exports = function shimObjectIs() {
      var polyfill3 = getPolyfill();
      define2(Object, { is: polyfill3 }, {
        is: function testObjectIs() {
          return Object.is !== polyfill3;
        }
      });
      return polyfill3;
    };
  }
});

// node_modules/object-is/index.js
var require_object_is = __commonJS({
  "node_modules/object-is/index.js"(exports, module) {
    "use strict";
    var define2 = require_define_properties();
    var callBind = require_call_bind();
    var implementation = require_implementation3();
    var getPolyfill = require_polyfill();
    var shim = require_shim();
    var polyfill3 = callBind(getPolyfill(), Object);
    define2(polyfill3, {
      getPolyfill,
      implementation,
      shim
    });
    module.exports = polyfill3;
  }
});

// node_modules/call-bind/callBound.js
var require_callBound = __commonJS({
  "node_modules/call-bind/callBound.js"(exports, module) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBind = require_call_bind();
    var $indexOf = callBind(GetIntrinsic("String.prototype.indexOf"));
    module.exports = function callBoundIntrinsic(name, allowMissing) {
      var intrinsic = GetIntrinsic(name, !!allowMissing);
      if (typeof intrinsic === "function" && $indexOf(name, ".prototype.") > -1) {
        return callBind(intrinsic);
      }
      return intrinsic;
    };
  }
});

// node_modules/is-regex/index.js
var require_is_regex = __commonJS({
  "node_modules/is-regex/index.js"(exports, module) {
    "use strict";
    var callBound = require_callBound();
    var hasToStringTag = require_shams2()();
    var has;
    var $exec;
    var isRegexMarker;
    var badStringifier;
    if (hasToStringTag) {
      has = callBound("Object.prototype.hasOwnProperty");
      $exec = callBound("RegExp.prototype.exec");
      isRegexMarker = {};
      throwRegexMarker = function() {
        throw isRegexMarker;
      };
      badStringifier = {
        toString: throwRegexMarker,
        valueOf: throwRegexMarker
      };
      if (typeof Symbol.toPrimitive === "symbol") {
        badStringifier[Symbol.toPrimitive] = throwRegexMarker;
      }
    }
    var throwRegexMarker;
    var $toString = callBound("Object.prototype.toString");
    var gOPD = Object.getOwnPropertyDescriptor;
    var regexClass = "[object RegExp]";
    module.exports = hasToStringTag ? function isRegex(value) {
      if (!value || typeof value !== "object") {
        return false;
      }
      var descriptor = gOPD(value, "lastIndex");
      var hasLastIndexDataProperty = descriptor && has(descriptor, "value");
      if (!hasLastIndexDataProperty) {
        return false;
      }
      try {
        $exec(value, badStringifier);
      } catch (e3) {
        return e3 === isRegexMarker;
      }
    } : function isRegex(value) {
      if (!value || typeof value !== "object" && typeof value !== "function") {
        return false;
      }
      return $toString(value) === regexClass;
    };
  }
});

// node_modules/functions-have-names/index.js
var require_functions_have_names = __commonJS({
  "node_modules/functions-have-names/index.js"(exports, module) {
    "use strict";
    var functionsHaveNames = function functionsHaveNames2() {
      return typeof (function f() {
      }).name === "string";
    };
    var gOPD = Object.getOwnPropertyDescriptor;
    if (gOPD) {
      try {
        gOPD([], "length");
      } catch (e3) {
        gOPD = null;
      }
    }
    functionsHaveNames.functionsHaveConfigurableNames = function functionsHaveConfigurableNames() {
      if (!functionsHaveNames() || !gOPD) {
        return false;
      }
      var desc = gOPD(function() {
      }, "name");
      return !!desc && !!desc.configurable;
    };
    var $bind = Function.prototype.bind;
    functionsHaveNames.boundFunctionsHaveNames = function boundFunctionsHaveNames() {
      return functionsHaveNames() && typeof $bind === "function" && (function f() {
      }).bind().name !== "";
    };
    module.exports = functionsHaveNames;
  }
});

// node_modules/set-function-name/index.js
var require_set_function_name = __commonJS({
  "node_modules/set-function-name/index.js"(exports, module) {
    "use strict";
    var define2 = require_define_data_property();
    var hasDescriptors = require_has_property_descriptors()();
    var functionsHaveConfigurableNames = require_functions_have_names().functionsHaveConfigurableNames();
    var $TypeError = require_type();
    module.exports = function setFunctionName(fn, name) {
      if (typeof fn !== "function") {
        throw new $TypeError("`fn` is not a function");
      }
      var loose = arguments.length > 2 && !!arguments[2];
      if (!loose || functionsHaveConfigurableNames) {
        if (hasDescriptors) {
          define2(
            /** @type {Parameters<define>[0]} */
            fn,
            "name",
            name,
            true,
            true
          );
        } else {
          define2(
            /** @type {Parameters<define>[0]} */
            fn,
            "name",
            name
          );
        }
      }
      return fn;
    };
  }
});

// node_modules/regexp.prototype.flags/implementation.js
var require_implementation4 = __commonJS({
  "node_modules/regexp.prototype.flags/implementation.js"(exports, module) {
    "use strict";
    var setFunctionName = require_set_function_name();
    var $TypeError = require_type();
    var $Object = Object;
    module.exports = setFunctionName(function flags() {
      if (this == null || this !== $Object(this)) {
        throw new $TypeError("RegExp.prototype.flags getter called on non-object");
      }
      var result = "";
      if (this.hasIndices) {
        result += "d";
      }
      if (this.global) {
        result += "g";
      }
      if (this.ignoreCase) {
        result += "i";
      }
      if (this.multiline) {
        result += "m";
      }
      if (this.dotAll) {
        result += "s";
      }
      if (this.unicode) {
        result += "u";
      }
      if (this.unicodeSets) {
        result += "v";
      }
      if (this.sticky) {
        result += "y";
      }
      return result;
    }, "get flags", true);
  }
});

// node_modules/regexp.prototype.flags/polyfill.js
var require_polyfill2 = __commonJS({
  "node_modules/regexp.prototype.flags/polyfill.js"(exports, module) {
    "use strict";
    var implementation = require_implementation4();
    var supportsDescriptors = require_define_properties().supportsDescriptors;
    var $gOPD = Object.getOwnPropertyDescriptor;
    module.exports = function getPolyfill() {
      if (supportsDescriptors && /a/mig.flags === "gim") {
        var descriptor = $gOPD(RegExp.prototype, "flags");
        if (descriptor && typeof descriptor.get === "function" && "dotAll" in RegExp.prototype && "hasIndices" in RegExp.prototype) {
          var calls = "";
          var o = {};
          Object.defineProperty(o, "hasIndices", {
            get: function() {
              calls += "d";
            }
          });
          Object.defineProperty(o, "sticky", {
            get: function() {
              calls += "y";
            }
          });
          descriptor.get.call(o);
          if (calls === "dy") {
            return descriptor.get;
          }
        }
      }
      return implementation;
    };
  }
});

// node_modules/regexp.prototype.flags/shim.js
var require_shim2 = __commonJS({
  "node_modules/regexp.prototype.flags/shim.js"(exports, module) {
    "use strict";
    var supportsDescriptors = require_define_properties().supportsDescriptors;
    var getPolyfill = require_polyfill2();
    var gOPD = Object.getOwnPropertyDescriptor;
    var defineProperty2 = Object.defineProperty;
    var TypeErr = TypeError;
    var getProto = Object.getPrototypeOf;
    var regex = /a/;
    module.exports = function shimFlags() {
      if (!supportsDescriptors || !getProto) {
        throw new TypeErr("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");
      }
      var polyfill3 = getPolyfill();
      var proto = getProto(regex);
      var descriptor = gOPD(proto, "flags");
      if (!descriptor || descriptor.get !== polyfill3) {
        defineProperty2(proto, "flags", {
          configurable: true,
          enumerable: false,
          get: polyfill3
        });
      }
      return polyfill3;
    };
  }
});

// node_modules/regexp.prototype.flags/index.js
var require_regexp_prototype = __commonJS({
  "node_modules/regexp.prototype.flags/index.js"(exports, module) {
    "use strict";
    var define2 = require_define_properties();
    var callBind = require_call_bind();
    var implementation = require_implementation4();
    var getPolyfill = require_polyfill2();
    var shim = require_shim2();
    var flagsBound = callBind(getPolyfill());
    define2(flagsBound, {
      getPolyfill,
      implementation,
      shim
    });
    module.exports = flagsBound;
  }
});

// node_modules/is-date-object/index.js
var require_is_date_object = __commonJS({
  "node_modules/is-date-object/index.js"(exports, module) {
    "use strict";
    var getDay2 = Date.prototype.getDay;
    var tryDateObject = function tryDateGetDayCall(value) {
      try {
        getDay2.call(value);
        return true;
      } catch (e3) {
        return false;
      }
    };
    var toStr = Object.prototype.toString;
    var dateClass = "[object Date]";
    var hasToStringTag = require_shams2()();
    module.exports = function isDateObject(value) {
      if (typeof value !== "object" || value === null) {
        return false;
      }
      return hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;
    };
  }
});

// node_modules/deep-equal/index.js
var require_deep_equal = __commonJS({
  "node_modules/deep-equal/index.js"(exports, module) {
    var objectKeys = require_object_keys();
    var isArguments = require_is_arguments();
    var is = require_object_is();
    var isRegex = require_is_regex();
    var flags = require_regexp_prototype();
    var isDate2 = require_is_date_object();
    var getTime2 = Date.prototype.getTime;
    function deepEqual2(actual, expected, options) {
      var opts = options || {};
      if (opts.strict ? is(actual, expected) : actual === expected) {
        return true;
      }
      if (!actual || !expected || typeof actual !== "object" && typeof expected !== "object") {
        return opts.strict ? is(actual, expected) : actual == expected;
      }
      return objEquiv(actual, expected, opts);
    }
    function isUndefinedOrNull(value) {
      return value === null || value === void 0;
    }
    function isBuffer(x2) {
      if (!x2 || typeof x2 !== "object" || typeof x2.length !== "number") {
        return false;
      }
      if (typeof x2.copy !== "function" || typeof x2.slice !== "function") {
        return false;
      }
      if (x2.length > 0 && typeof x2[0] !== "number") {
        return false;
      }
      return true;
    }
    function objEquiv(a3, b2, opts) {
      var i2, key;
      if (typeof a3 !== typeof b2) {
        return false;
      }
      if (isUndefinedOrNull(a3) || isUndefinedOrNull(b2)) {
        return false;
      }
      if (a3.prototype !== b2.prototype) {
        return false;
      }
      if (isArguments(a3) !== isArguments(b2)) {
        return false;
      }
      var aIsRegex = isRegex(a3);
      var bIsRegex = isRegex(b2);
      if (aIsRegex !== bIsRegex) {
        return false;
      }
      if (aIsRegex || bIsRegex) {
        return a3.source === b2.source && flags(a3) === flags(b2);
      }
      if (isDate2(a3) && isDate2(b2)) {
        return getTime2.call(a3) === getTime2.call(b2);
      }
      var aIsBuffer = isBuffer(a3);
      var bIsBuffer = isBuffer(b2);
      if (aIsBuffer !== bIsBuffer) {
        return false;
      }
      if (aIsBuffer || bIsBuffer) {
        if (a3.length !== b2.length) {
          return false;
        }
        for (i2 = 0; i2 < a3.length; i2++) {
          if (a3[i2] !== b2[i2]) {
            return false;
          }
        }
        return true;
      }
      if (typeof a3 !== typeof b2) {
        return false;
      }
      try {
        var ka = objectKeys(a3);
        var kb = objectKeys(b2);
      } catch (e3) {
        return false;
      }
      if (ka.length !== kb.length) {
        return false;
      }
      ka.sort();
      kb.sort();
      for (i2 = ka.length - 1; i2 >= 0; i2--) {
        if (ka[i2] != kb[i2]) {
          return false;
        }
      }
      for (i2 = ka.length - 1; i2 >= 0; i2--) {
        key = ka[i2];
        if (!deepEqual2(a3[key], b2[key], opts)) {
          return false;
        }
      }
      return true;
    }
    module.exports = deepEqual2;
  }
});

// node_modules/gud/index.js
var require_gud = __commonJS({
  "node_modules/gud/index.js"(exports, module) {
    "use strict";
    var key = "__global_unique_id__";
    module.exports = function() {
      return global[key] = (global[key] || 0) + 1;
    };
  }
});

// node_modules/warning/warning.js
var require_warning = __commonJS({
  "node_modules/warning/warning.js"(exports, module) {
    "use strict";
    var __DEV__ = true;
    var warning2 = function() {
    };
    if (__DEV__) {
      printWarning4 = function printWarning5(format2, args) {
        var len = arguments.length;
        args = new Array(len > 1 ? len - 1 : 0);
        for (var key = 1; key < len; key++) {
          args[key - 1] = arguments[key];
        }
        var argIndex = 0;
        var message = "Warning: " + format2.replace(/%s/g, function() {
          return args[argIndex++];
        });
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x2) {
        }
      };
      warning2 = function(condition, format2, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format2 === void 0) {
          throw new Error(
            "`warning(condition, format, ...args)` requires a warning message argument"
          );
        }
        if (!condition) {
          printWarning4.apply(null, [format2].concat(args));
        }
      };
    }
    var printWarning4;
    module.exports = warning2;
  }
});

// node_modules/shards-react/node_modules/react-popper/node_modules/@hypnosphi/create-react-context/lib/implementation.js
var require_implementation5 = __commonJS({
  "node_modules/shards-react/node_modules/react-popper/node_modules/@hypnosphi/create-react-context/lib/implementation.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _gud = require_gud();
    var _gud2 = _interopRequireDefault(_gud);
    var _warning = require_warning();
    var _warning2 = _interopRequireDefault(_warning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck3(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn3(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits3(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var MAX_SIGNED_31_BIT_INT = 1073741823;
    function objectIs(x2, y3) {
      if (x2 === y3) {
        return x2 !== 0 || 1 / x2 === 1 / y3;
      } else {
        return x2 !== x2 && y3 !== y3;
      }
    }
    function createEventEmitter(value) {
      var handlers = [];
      return {
        on: function on(handler) {
          handlers.push(handler);
        },
        off: function off(handler) {
          handlers = handlers.filter(function(h3) {
            return h3 !== handler;
          });
        },
        get: function get() {
          return value;
        },
        set: function set(newValue, changedBits) {
          value = newValue;
          handlers.forEach(function(handler) {
            return handler(value, changedBits);
          });
        }
      };
    }
    function onlyChild(children) {
      return Array.isArray(children) ? children[0] : children;
    }
    function createReactContext(defaultValue, calculateChangedBits) {
      var _Provider$childContex, _Consumer$contextType;
      var contextProp = "__create-react-context-" + (0, _gud2.default)() + "__";
      var Provider = function(_Component) {
        _inherits3(Provider2, _Component);
        function Provider2() {
          var _temp, _this, _ret;
          _classCallCheck3(this, Provider2);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn3(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn3(_this, _ret);
        }
        Provider2.prototype.getChildContext = function getChildContext() {
          var _ref;
          return _ref = {}, _ref[contextProp] = this.emitter, _ref;
        };
        Provider2.prototype.componentWillReceiveProps = function componentWillReceiveProps3(nextProps) {
          if (this.props.value !== nextProps.value) {
            var oldValue = this.props.value;
            var newValue = nextProps.value;
            var changedBits = void 0;
            if (objectIs(oldValue, newValue)) {
              changedBits = 0;
            } else {
              changedBits = typeof calculateChangedBits === "function" ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
              if (true) {
                (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, "calculateChangedBits: Expected the return value to be a 31-bit integer. Instead received: %s", changedBits);
              }
              changedBits |= 0;
              if (changedBits !== 0) {
                this.emitter.set(nextProps.value, changedBits);
              }
            }
          }
        };
        Provider2.prototype.render = function render() {
          return this.props.children;
        };
        return Provider2;
      }(_react.Component);
      Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);
      var Consumer = function(_Component2) {
        _inherits3(Consumer2, _Component2);
        function Consumer2() {
          var _temp2, _this2, _ret2;
          _classCallCheck3(this, Consumer2);
          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn3(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {
            value: _this2.getValue()
          }, _this2.onUpdate = function(newValue, changedBits) {
            var observedBits = _this2.observedBits | 0;
            if ((observedBits & changedBits) !== 0) {
              _this2.setState({ value: _this2.getValue() });
            }
          }, _temp2), _possibleConstructorReturn3(_this2, _ret2);
        }
        Consumer2.prototype.componentWillReceiveProps = function componentWillReceiveProps3(nextProps) {
          var observedBits = nextProps.observedBits;
          this.observedBits = observedBits === void 0 || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
        };
        Consumer2.prototype.componentDidMount = function componentDidMount() {
          if (this.context[contextProp]) {
            this.context[contextProp].on(this.onUpdate);
          }
          var observedBits = this.props.observedBits;
          this.observedBits = observedBits === void 0 || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
        };
        Consumer2.prototype.componentWillUnmount = function componentWillUnmount() {
          if (this.context[contextProp]) {
            this.context[contextProp].off(this.onUpdate);
          }
        };
        Consumer2.prototype.getValue = function getValue() {
          if (this.context[contextProp]) {
            return this.context[contextProp].get();
          } else {
            return defaultValue;
          }
        };
        Consumer2.prototype.render = function render() {
          return onlyChild(this.props.children)(this.state.value);
        };
        return Consumer2;
      }(_react.Component);
      Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);
      return {
        Provider,
        Consumer
      };
    }
    exports.default = createReactContext;
    module.exports = exports["default"];
  }
});

// node_modules/shards-react/node_modules/react-popper/node_modules/@hypnosphi/create-react-context/lib/index.js
var require_lib = __commonJS({
  "node_modules/shards-react/node_modules/react-popper/node_modules/@hypnosphi/create-react-context/lib/index.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _implementation = require_implementation5();
    var _implementation2 = _interopRequireDefault(_implementation);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = _react2.default.createContext || _implementation2.default;
    module.exports = exports["default"];
  }
});

// node_modules/shortid/lib/random/random-from-seed.js
var require_random_from_seed = __commonJS({
  "node_modules/shortid/lib/random/random-from-seed.js"(exports, module) {
    "use strict";
    var seed = 1;
    function getNextValue() {
      seed = (seed * 9301 + 49297) % 233280;
      return seed / 233280;
    }
    function setSeed(_seed_) {
      seed = _seed_;
    }
    module.exports = {
      nextValue: getNextValue,
      seed: setSeed
    };
  }
});

// node_modules/shortid/lib/alphabet.js
var require_alphabet = __commonJS({
  "node_modules/shortid/lib/alphabet.js"(exports, module) {
    "use strict";
    var randomFromSeed = require_random_from_seed();
    var ORIGINAL = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-";
    var alphabet;
    var previousSeed;
    var shuffled;
    function reset() {
      shuffled = false;
    }
    function setCharacters(_alphabet_) {
      if (!_alphabet_) {
        if (alphabet !== ORIGINAL) {
          alphabet = ORIGINAL;
          reset();
        }
        return;
      }
      if (_alphabet_ === alphabet) {
        return;
      }
      if (_alphabet_.length !== ORIGINAL.length) {
        throw new Error("Custom alphabet for shortid must be " + ORIGINAL.length + " unique characters. You submitted " + _alphabet_.length + " characters: " + _alphabet_);
      }
      var unique = _alphabet_.split("").filter(function(item, ind, arr) {
        return ind !== arr.lastIndexOf(item);
      });
      if (unique.length) {
        throw new Error("Custom alphabet for shortid must be " + ORIGINAL.length + " unique characters. These characters were not unique: " + unique.join(", "));
      }
      alphabet = _alphabet_;
      reset();
    }
    function characters(_alphabet_) {
      setCharacters(_alphabet_);
      return alphabet;
    }
    function setSeed(seed) {
      randomFromSeed.seed(seed);
      if (previousSeed !== seed) {
        reset();
        previousSeed = seed;
      }
    }
    function shuffle() {
      if (!alphabet) {
        setCharacters(ORIGINAL);
      }
      var sourceArray = alphabet.split("");
      var targetArray = [];
      var r = randomFromSeed.nextValue();
      var characterIndex;
      while (sourceArray.length > 0) {
        r = randomFromSeed.nextValue();
        characterIndex = Math.floor(r * sourceArray.length);
        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);
      }
      return targetArray.join("");
    }
    function getShuffled() {
      if (shuffled) {
        return shuffled;
      }
      shuffled = shuffle();
      return shuffled;
    }
    function lookup(index) {
      var alphabetShuffled = getShuffled();
      return alphabetShuffled[index];
    }
    function get() {
      return alphabet || ORIGINAL;
    }
    module.exports = {
      get,
      characters,
      seed: setSeed,
      lookup,
      shuffled: getShuffled
    };
  }
});

// node_modules/shortid/lib/random/random-byte-browser.js
var require_random_byte_browser = __commonJS({
  "node_modules/shortid/lib/random/random-byte-browser.js"(exports, module) {
    "use strict";
    var crypto2 = typeof window === "object" && (window.crypto || window.msCrypto);
    var randomByte;
    if (!crypto2 || !crypto2.getRandomValues) {
      randomByte = function(size) {
        var bytes = [];
        for (var i2 = 0; i2 < size; i2++) {
          bytes.push(Math.floor(Math.random() * 256));
        }
        return bytes;
      };
    } else {
      randomByte = function(size) {
        return crypto2.getRandomValues(new Uint8Array(size));
      };
    }
    module.exports = randomByte;
  }
});

// node_modules/nanoid/url-alphabet/index.js
var urlAlphabet;
var init_url_alphabet = __esm({
  "node_modules/nanoid/url-alphabet/index.js"() {
    urlAlphabet = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
  }
});

// node_modules/nanoid/index.browser.js
var index_browser_exports = {};
__export(index_browser_exports, {
  customAlphabet: () => customAlphabet,
  customRandom: () => customRandom,
  nanoid: () => nanoid,
  random: () => random,
  urlAlphabet: () => urlAlphabet
});
var random, customRandom, customAlphabet, nanoid;
var init_index_browser = __esm({
  "node_modules/nanoid/index.browser.js"() {
    init_url_alphabet();
    random = (bytes) => crypto.getRandomValues(new Uint8Array(bytes));
    customRandom = (alphabet, defaultSize, getRandom) => {
      let mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;
      let step = -~(1.6 * mask * defaultSize / alphabet.length);
      return (size = defaultSize) => {
        let id = "";
        while (true) {
          let bytes = getRandom(step);
          let j = step | 0;
          while (j--) {
            id += alphabet[bytes[j] & mask] || "";
            if (id.length === size) return id;
          }
        }
      };
    };
    customAlphabet = (alphabet, size = 21) => customRandom(alphabet, size, random);
    nanoid = (size = 21) => crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {
      byte &= 63;
      if (byte < 36) {
        id += byte.toString(36);
      } else if (byte < 62) {
        id += (byte - 26).toString(36).toUpperCase();
      } else if (byte > 62) {
        id += "-";
      } else {
        id += "_";
      }
      return id;
    }, "");
  }
});

// node_modules/shortid/lib/generate.js
var require_generate = __commonJS({
  "node_modules/shortid/lib/generate.js"(exports, module) {
    "use strict";
    var alphabet = require_alphabet();
    var random2 = require_random_byte_browser();
    var customRandom2 = (init_index_browser(), __toCommonJS(index_browser_exports)).customRandom;
    function generate(number) {
      var loopCounter = 0;
      var done;
      var str = "";
      while (!done) {
        str = str + customRandom2(alphabet.get(), 1, random2)();
        done = number < Math.pow(16, loopCounter + 1);
        loopCounter++;
      }
      return str;
    }
    module.exports = generate;
  }
});

// node_modules/shortid/lib/build.js
var require_build = __commonJS({
  "node_modules/shortid/lib/build.js"(exports, module) {
    "use strict";
    var generate = require_generate();
    var alphabet = require_alphabet();
    var REDUCE_TIME = 1567752802062;
    var version = 7;
    var counter;
    var previousSeconds;
    function build(clusterWorkerId) {
      var str = "";
      var seconds = Math.floor((Date.now() - REDUCE_TIME) * 1e-3);
      if (seconds === previousSeconds) {
        counter++;
      } else {
        counter = 0;
        previousSeconds = seconds;
      }
      str = str + generate(version);
      str = str + generate(clusterWorkerId);
      if (counter > 0) {
        str = str + generate(counter);
      }
      str = str + generate(seconds);
      return str;
    }
    module.exports = build;
  }
});

// node_modules/shortid/lib/is-valid.js
var require_is_valid = __commonJS({
  "node_modules/shortid/lib/is-valid.js"(exports, module) {
    "use strict";
    var alphabet = require_alphabet();
    function isShortId(id) {
      if (!id || typeof id !== "string" || id.length < 6) {
        return false;
      }
      var nonAlphabetic = new RegExp("[^" + alphabet.get().replace(/[|\\{}()[\]^$+*?.-]/g, "\\$&") + "]");
      return !nonAlphabetic.test(id);
    }
    module.exports = isShortId;
  }
});

// node_modules/shortid/lib/util/cluster-worker-id-browser.js
var require_cluster_worker_id_browser = __commonJS({
  "node_modules/shortid/lib/util/cluster-worker-id-browser.js"(exports, module) {
    "use strict";
    module.exports = 0;
  }
});

// node_modules/shortid/lib/index.js
var require_lib2 = __commonJS({
  "node_modules/shortid/lib/index.js"(exports, module) {
    "use strict";
    var alphabet = require_alphabet();
    var build = require_build();
    var isValid2 = require_is_valid();
    var clusterWorkerId = require_cluster_worker_id_browser() || 0;
    function seed(seedValue) {
      alphabet.seed(seedValue);
      return module.exports;
    }
    function worker(workerId) {
      clusterWorkerId = workerId;
      return module.exports;
    }
    function characters(newCharacters) {
      if (newCharacters !== void 0) {
        alphabet.characters(newCharacters);
      }
      return alphabet.shuffled();
    }
    function generate() {
      return build(clusterWorkerId);
    }
    module.exports = generate;
    module.exports.generate = generate;
    module.exports.seed = seed;
    module.exports.worker = worker;
    module.exports.characters = characters;
    module.exports.isValid = isValid2;
  }
});

// node_modules/shortid/index.js
var require_shortid = __commonJS({
  "node_modules/shortid/index.js"(exports, module) {
    "use strict";
    module.exports = require_lib2();
  }
});

// node_modules/@babel/runtime/helpers/interopRequireDefault.js
var require_interopRequireDefault = __commonJS({
  "node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
    function _interopRequireDefault(e3) {
      return e3 && e3.__esModule ? e3 : {
        "default": e3
      };
    }
    module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/dom-helpers/class/hasClass.js
var require_hasClass = __commonJS({
  "node_modules/dom-helpers/class/hasClass.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = hasClass;
    function hasClass(element, className) {
      if (element.classList) return !!className && element.classList.contains(className);
      else return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
    }
    module.exports = exports["default"];
  }
});

// node_modules/dom-helpers/class/addClass.js
var require_addClass = __commonJS({
  "node_modules/dom-helpers/class/addClass.js"(exports, module) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.default = addClass;
    var _hasClass = _interopRequireDefault(require_hasClass());
    function addClass(element, className) {
      if (element.classList) element.classList.add(className);
      else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === "string") element.className = element.className + " " + className;
      else element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
    }
    module.exports = exports["default"];
  }
});

// node_modules/dom-helpers/class/removeClass.js
var require_removeClass = __commonJS({
  "node_modules/dom-helpers/class/removeClass.js"(exports, module) {
    "use strict";
    function replaceClassName(origClass, classToRemove) {
      return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
    }
    module.exports = function removeClass(element, className) {
      if (element.classList) element.classList.remove(className);
      else if (typeof element.className === "string") element.className = replaceClassName(element.className, className);
      else element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
    };
  }
});

// node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js
var react_lifecycles_compat_es_exports = {};
__export(react_lifecycles_compat_es_exports, {
  polyfill: () => polyfill
});
function componentWillMount() {
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== void 0) {
    this.setState(state);
  }
}
function componentWillReceiveProps(nextProps) {
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== void 0 ? state : null;
  }
  this.setState(updater.bind(this));
}
function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
      prevProps,
      prevState
    );
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}
function polyfill(Component5) {
  var prototype = Component5.prototype;
  if (!prototype || !prototype.isReactComponent) {
    throw new Error("Can only polyfill class components");
  }
  if (typeof Component5.getDerivedStateFromProps !== "function" && typeof prototype.getSnapshotBeforeUpdate !== "function") {
    return Component5;
  }
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === "function") {
    foundWillMountName = "componentWillMount";
  } else if (typeof prototype.UNSAFE_componentWillMount === "function") {
    foundWillMountName = "UNSAFE_componentWillMount";
  }
  if (typeof prototype.componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "componentWillReceiveProps";
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
  }
  if (typeof prototype.componentWillUpdate === "function") {
    foundWillUpdateName = "componentWillUpdate";
  } else if (typeof prototype.UNSAFE_componentWillUpdate === "function") {
    foundWillUpdateName = "UNSAFE_componentWillUpdate";
  }
  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
    var componentName = Component5.displayName || Component5.name;
    var newApiName = typeof Component5.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
    throw Error(
      "Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n" + componentName + " uses " + newApiName + " but also contains the following legacy lifecycles:" + (foundWillMountName !== null ? "\n  " + foundWillMountName : "") + (foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "") + (foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "") + "\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks"
    );
  }
  if (typeof Component5.getDerivedStateFromProps === "function") {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }
  if (typeof prototype.getSnapshotBeforeUpdate === "function") {
    if (typeof prototype.componentDidUpdate !== "function") {
      throw new Error(
        "Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype"
      );
    }
    prototype.componentWillUpdate = componentWillUpdate;
    var componentDidUpdate = prototype.componentDidUpdate;
    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;
      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }
  return Component5;
}
var init_react_lifecycles_compat_es = __esm({
  "node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js"() {
    componentWillMount.__suppressDeprecationWarning = true;
    componentWillReceiveProps.__suppressDeprecationWarning = true;
    componentWillUpdate.__suppressDeprecationWarning = true;
  }
});

// node_modules/shards-react/node_modules/react-transition-group/utils/PropTypes.js
var require_PropTypes = __commonJS({
  "node_modules/shards-react/node_modules/react-transition-group/utils/PropTypes.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.classNamesShape = exports.timeoutsShape = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var timeoutsShape = true ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
      enter: _propTypes.default.number,
      exit: _propTypes.default.number,
      appear: _propTypes.default.number
    }).isRequired]) : null;
    exports.timeoutsShape = timeoutsShape;
    var classNamesShape = true ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
      enter: _propTypes.default.string,
      exit: _propTypes.default.string,
      active: _propTypes.default.string
    }), _propTypes.default.shape({
      enter: _propTypes.default.string,
      enterDone: _propTypes.default.string,
      enterActive: _propTypes.default.string,
      exit: _propTypes.default.string,
      exitDone: _propTypes.default.string,
      exitActive: _propTypes.default.string
    })]) : null;
    exports.classNamesShape = classNamesShape;
  }
});

// node_modules/shards-react/node_modules/react-transition-group/Transition.js
var require_Transition = __commonJS({
  "node_modules/shards-react/node_modules/react-transition-group/Transition.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;
    var PropTypes2 = _interopRequireWildcard(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _reactDom = _interopRequireDefault(require_react_dom());
    var _reactLifecyclesCompat2 = (init_react_lifecycles_compat_es(), __toCommonJS(react_lifecycles_compat_es_exports));
    var _PropTypes = require_PropTypes();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _objectWithoutPropertiesLoose4(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i2;
      for (i2 = 0; i2 < sourceKeys.length; i2++) {
        key = sourceKeys[i2];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose3(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var UNMOUNTED = "unmounted";
    exports.UNMOUNTED = UNMOUNTED;
    var EXITED = "exited";
    exports.EXITED = EXITED;
    var ENTERING = "entering";
    exports.ENTERING = ENTERING;
    var ENTERED = "entered";
    exports.ENTERED = ENTERED;
    var EXITING = "exiting";
    exports.EXITING = EXITING;
    var Transition2 = function(_React$Component) {
      _inheritsLoose3(Transition3, _React$Component);
      function Transition3(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var parentGroup = context.transitionGroup;
        var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
        var initialStatus;
        _this.appearStatus = null;
        if (props.in) {
          if (appear) {
            initialStatus = EXITED;
            _this.appearStatus = ENTERING;
          } else {
            initialStatus = ENTERED;
          }
        } else {
          if (props.unmountOnExit || props.mountOnEnter) {
            initialStatus = UNMOUNTED;
          } else {
            initialStatus = EXITED;
          }
        }
        _this.state = {
          status: initialStatus
        };
        _this.nextCallback = null;
        return _this;
      }
      var _proto = Transition3.prototype;
      _proto.getChildContext = function getChildContext() {
        return {
          transitionGroup: null
          // allows for nested Transitions
        };
      };
      Transition3.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
        var nextIn = _ref.in;
        if (nextIn && prevState.status === UNMOUNTED) {
          return {
            status: EXITED
          };
        }
        return null;
      };
      _proto.componentDidMount = function componentDidMount() {
        this.updateStatus(true, this.appearStatus);
      };
      _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
        var nextStatus = null;
        if (prevProps !== this.props) {
          var status = this.state.status;
          if (this.props.in) {
            if (status !== ENTERING && status !== ENTERED) {
              nextStatus = ENTERING;
            }
          } else {
            if (status === ENTERING || status === ENTERED) {
              nextStatus = EXITING;
            }
          }
        }
        this.updateStatus(false, nextStatus);
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.cancelNextCallback();
      };
      _proto.getTimeouts = function getTimeouts() {
        var timeout = this.props.timeout;
        var exit, enter, appear;
        exit = enter = appear = timeout;
        if (timeout != null && typeof timeout !== "number") {
          exit = timeout.exit;
          enter = timeout.enter;
          appear = timeout.appear !== void 0 ? timeout.appear : enter;
        }
        return {
          exit,
          enter,
          appear
        };
      };
      _proto.updateStatus = function updateStatus(mounting, nextStatus) {
        if (mounting === void 0) {
          mounting = false;
        }
        if (nextStatus !== null) {
          this.cancelNextCallback();
          var node = _reactDom.default.findDOMNode(this);
          if (nextStatus === ENTERING) {
            this.performEnter(node, mounting);
          } else {
            this.performExit(node);
          }
        } else if (this.props.unmountOnExit && this.state.status === EXITED) {
          this.setState({
            status: UNMOUNTED
          });
        }
      };
      _proto.performEnter = function performEnter(node, mounting) {
        var _this2 = this;
        var enter = this.props.enter;
        var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
        var timeouts = this.getTimeouts();
        var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
        if (!mounting && !enter) {
          this.safeSetState({
            status: ENTERED
          }, function() {
            _this2.props.onEntered(node);
          });
          return;
        }
        this.props.onEnter(node, appearing);
        this.safeSetState({
          status: ENTERING
        }, function() {
          _this2.props.onEntering(node, appearing);
          _this2.onTransitionEnd(node, enterTimeout, function() {
            _this2.safeSetState({
              status: ENTERED
            }, function() {
              _this2.props.onEntered(node, appearing);
            });
          });
        });
      };
      _proto.performExit = function performExit(node) {
        var _this3 = this;
        var exit = this.props.exit;
        var timeouts = this.getTimeouts();
        if (!exit) {
          this.safeSetState({
            status: EXITED
          }, function() {
            _this3.props.onExited(node);
          });
          return;
        }
        this.props.onExit(node);
        this.safeSetState({
          status: EXITING
        }, function() {
          _this3.props.onExiting(node);
          _this3.onTransitionEnd(node, timeouts.exit, function() {
            _this3.safeSetState({
              status: EXITED
            }, function() {
              _this3.props.onExited(node);
            });
          });
        });
      };
      _proto.cancelNextCallback = function cancelNextCallback() {
        if (this.nextCallback !== null) {
          this.nextCallback.cancel();
          this.nextCallback = null;
        }
      };
      _proto.safeSetState = function safeSetState(nextState, callback) {
        callback = this.setNextCallback(callback);
        this.setState(nextState, callback);
      };
      _proto.setNextCallback = function setNextCallback(callback) {
        var _this4 = this;
        var active = true;
        this.nextCallback = function(event) {
          if (active) {
            active = false;
            _this4.nextCallback = null;
            callback(event);
          }
        };
        this.nextCallback.cancel = function() {
          active = false;
        };
        return this.nextCallback;
      };
      _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
        this.setNextCallback(handler);
        var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
        if (!node || doesNotHaveTimeoutOrListener) {
          setTimeout(this.nextCallback, 0);
          return;
        }
        if (this.props.addEndListener) {
          this.props.addEndListener(node, this.nextCallback);
        }
        if (timeout != null) {
          setTimeout(this.nextCallback, timeout);
        }
      };
      _proto.render = function render() {
        var status = this.state.status;
        if (status === UNMOUNTED) {
          return null;
        }
        var _this$props = this.props, children = _this$props.children, childProps = _objectWithoutPropertiesLoose4(_this$props, ["children"]);
        delete childProps.in;
        delete childProps.mountOnEnter;
        delete childProps.unmountOnExit;
        delete childProps.appear;
        delete childProps.enter;
        delete childProps.exit;
        delete childProps.timeout;
        delete childProps.addEndListener;
        delete childProps.onEnter;
        delete childProps.onEntering;
        delete childProps.onEntered;
        delete childProps.onExit;
        delete childProps.onExiting;
        delete childProps.onExited;
        if (typeof children === "function") {
          return children(status, childProps);
        }
        var child = _react.default.Children.only(children);
        return _react.default.cloneElement(child, childProps);
      };
      return Transition3;
    }(_react.default.Component);
    Transition2.contextTypes = {
      transitionGroup: PropTypes2.object
    };
    Transition2.childContextTypes = {
      transitionGroup: function transitionGroup() {
      }
    };
    Transition2.propTypes = true ? {
      /**
       * A `function` child can be used instead of a React element. This function is
       * called with the current transition status (`'entering'`, `'entered'`,
       * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context
       * specific props to a component.
       *
       * ```jsx
       * <Transition in={this.state.in} timeout={150}>
       *   {state => (
       *     <MyComponent className={`fade fade-${state}`} />
       *   )}
       * </Transition>
       * ```
       */
      children: PropTypes2.oneOfType([PropTypes2.func.isRequired, PropTypes2.element.isRequired]).isRequired,
      /**
       * Show the component; triggers the enter or exit states
       */
      in: PropTypes2.bool,
      /**
       * By default the child component is mounted immediately along with
       * the parent `Transition` component. If you want to "lazy mount" the component on the
       * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
       * mounted, even on "exited", unless you also specify `unmountOnExit`.
       */
      mountOnEnter: PropTypes2.bool,
      /**
       * By default the child component stays mounted after it reaches the `'exited'` state.
       * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
       */
      unmountOnExit: PropTypes2.bool,
      /**
       * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
       * If you want to transition on the first mount set `appear` to `true`, and the
       * component will transition in as soon as the `<Transition>` mounts.
       *
       * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
       */
      appear: PropTypes2.bool,
      /**
       * Enable or disable enter transitions.
       */
      enter: PropTypes2.bool,
      /**
       * Enable or disable exit transitions.
       */
      exit: PropTypes2.bool,
      /**
       * The duration of the transition, in milliseconds.
       * Required unless `addEndListener` is provided.
       *
       * You may specify a single timeout for all transitions:
       *
       * ```jsx
       * timeout={500}
       * ```
       *
       * or individually:
       *
       * ```jsx
       * timeout={{
       *  appear: 500,
       *  enter: 300,
       *  exit: 500,
       * }}
       * ```
       *
       * - `appear` defaults to the value of `enter`
       * - `enter` defaults to `0`
       * - `exit` defaults to `0`
       *
       * @type {number | { enter?: number, exit?: number, appear?: number }}
       */
      timeout: function timeout(props) {
        var pt2 = _PropTypes.timeoutsShape;
        if (!props.addEndListener) pt2 = pt2.isRequired;
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        return pt2.apply(void 0, [props].concat(args));
      },
      /**
       * Add a custom transition end trigger. Called with the transitioning
       * DOM node and a `done` callback. Allows for more fine grained transition end
       * logic. **Note:** Timeouts are still used as a fallback if provided.
       *
       * ```jsx
       * addEndListener={(node, done) => {
       *   // use the css transitionend event to mark the finish of a transition
       *   node.addEventListener('transitionend', done, false);
       * }}
       * ```
       */
      addEndListener: PropTypes2.func,
      /**
       * Callback fired before the "entering" status is applied. An extra parameter
       * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
       *
       * @type Function(node: HtmlElement, isAppearing: bool) -> void
       */
      onEnter: PropTypes2.func,
      /**
       * Callback fired after the "entering" status is applied. An extra parameter
       * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEntering: PropTypes2.func,
      /**
       * Callback fired after the "entered" status is applied. An extra parameter
       * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
       *
       * @type Function(node: HtmlElement, isAppearing: bool) -> void
       */
      onEntered: PropTypes2.func,
      /**
       * Callback fired before the "exiting" status is applied.
       *
       * @type Function(node: HtmlElement) -> void
       */
      onExit: PropTypes2.func,
      /**
       * Callback fired after the "exiting" status is applied.
       *
       * @type Function(node: HtmlElement) -> void
       */
      onExiting: PropTypes2.func,
      /**
       * Callback fired after the "exited" status is applied.
       *
       * @type Function(node: HtmlElement) -> void
       */
      onExited: PropTypes2.func
      // Name the function so it is clearer in the documentation
    } : {};
    function noop() {
    }
    Transition2.defaultProps = {
      in: false,
      mountOnEnter: false,
      unmountOnExit: false,
      appear: false,
      enter: true,
      exit: true,
      onEnter: noop,
      onEntering: noop,
      onEntered: noop,
      onExit: noop,
      onExiting: noop,
      onExited: noop
    };
    Transition2.UNMOUNTED = 0;
    Transition2.EXITED = 1;
    Transition2.ENTERING = 2;
    Transition2.ENTERED = 3;
    Transition2.EXITING = 4;
    var _default = (0, _reactLifecyclesCompat2.polyfill)(Transition2);
    exports.default = _default;
  }
});

// node_modules/shards-react/node_modules/react-transition-group/CSSTransition.js
var require_CSSTransition = __commonJS({
  "node_modules/shards-react/node_modules/react-transition-group/CSSTransition.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var PropTypes2 = _interopRequireWildcard(require_prop_types());
    var _addClass = _interopRequireDefault(require_addClass());
    var _removeClass = _interopRequireDefault(require_removeClass());
    var _react = _interopRequireDefault(require_react());
    var _Transition = _interopRequireDefault(require_Transition());
    var _PropTypes = require_PropTypes();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _extends4() {
      _extends4 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends4.apply(this, arguments);
    }
    function _inheritsLoose3(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var addClass = function addClass2(node, classes) {
      return node && classes && classes.split(" ").forEach(function(c2) {
        return (0, _addClass.default)(node, c2);
      });
    };
    var removeClass = function removeClass2(node, classes) {
      return node && classes && classes.split(" ").forEach(function(c2) {
        return (0, _removeClass.default)(node, c2);
      });
    };
    var CSSTransition = function(_React$Component) {
      _inheritsLoose3(CSSTransition2, _React$Component);
      function CSSTransition2() {
        var _this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
        _this.onEnter = function(node, appearing) {
          var _this$getClassNames = _this.getClassNames(appearing ? "appear" : "enter"), className = _this$getClassNames.className;
          _this.removeClasses(node, "exit");
          addClass(node, className);
          if (_this.props.onEnter) {
            _this.props.onEnter(node, appearing);
          }
        };
        _this.onEntering = function(node, appearing) {
          var _this$getClassNames2 = _this.getClassNames(appearing ? "appear" : "enter"), activeClassName = _this$getClassNames2.activeClassName;
          _this.reflowAndAddClass(node, activeClassName);
          if (_this.props.onEntering) {
            _this.props.onEntering(node, appearing);
          }
        };
        _this.onEntered = function(node, appearing) {
          var appearClassName = _this.getClassNames("appear").doneClassName;
          var enterClassName = _this.getClassNames("enter").doneClassName;
          var doneClassName = appearing ? appearClassName + " " + enterClassName : enterClassName;
          _this.removeClasses(node, appearing ? "appear" : "enter");
          addClass(node, doneClassName);
          if (_this.props.onEntered) {
            _this.props.onEntered(node, appearing);
          }
        };
        _this.onExit = function(node) {
          var _this$getClassNames3 = _this.getClassNames("exit"), className = _this$getClassNames3.className;
          _this.removeClasses(node, "appear");
          _this.removeClasses(node, "enter");
          addClass(node, className);
          if (_this.props.onExit) {
            _this.props.onExit(node);
          }
        };
        _this.onExiting = function(node) {
          var _this$getClassNames4 = _this.getClassNames("exit"), activeClassName = _this$getClassNames4.activeClassName;
          _this.reflowAndAddClass(node, activeClassName);
          if (_this.props.onExiting) {
            _this.props.onExiting(node);
          }
        };
        _this.onExited = function(node) {
          var _this$getClassNames5 = _this.getClassNames("exit"), doneClassName = _this$getClassNames5.doneClassName;
          _this.removeClasses(node, "exit");
          addClass(node, doneClassName);
          if (_this.props.onExited) {
            _this.props.onExited(node);
          }
        };
        _this.getClassNames = function(type) {
          var classNames2 = _this.props.classNames;
          var isStringClassNames = typeof classNames2 === "string";
          var prefix = isStringClassNames && classNames2 ? classNames2 + "-" : "";
          var className = isStringClassNames ? prefix + type : classNames2[type];
          var activeClassName = isStringClassNames ? className + "-active" : classNames2[type + "Active"];
          var doneClassName = isStringClassNames ? className + "-done" : classNames2[type + "Done"];
          return {
            className,
            activeClassName,
            doneClassName
          };
        };
        return _this;
      }
      var _proto = CSSTransition2.prototype;
      _proto.removeClasses = function removeClasses(node, type) {
        var _this$getClassNames6 = this.getClassNames(type), className = _this$getClassNames6.className, activeClassName = _this$getClassNames6.activeClassName, doneClassName = _this$getClassNames6.doneClassName;
        className && removeClass(node, className);
        activeClassName && removeClass(node, activeClassName);
        doneClassName && removeClass(node, doneClassName);
      };
      _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {
        if (className) {
          node && node.scrollTop;
          addClass(node, className);
        }
      };
      _proto.render = function render() {
        var props = _extends4({}, this.props);
        delete props.classNames;
        return _react.default.createElement(_Transition.default, _extends4({}, props, {
          onEnter: this.onEnter,
          onEntered: this.onEntered,
          onEntering: this.onEntering,
          onExit: this.onExit,
          onExiting: this.onExiting,
          onExited: this.onExited
        }));
      };
      return CSSTransition2;
    }(_react.default.Component);
    CSSTransition.defaultProps = {
      classNames: ""
    };
    CSSTransition.propTypes = true ? _extends4({}, _Transition.default.propTypes, {
      /**
       * The animation classNames applied to the component as it enters, exits or
       * has finished the transition. A single name can be provided and it will be
       * suffixed for each stage: e.g.
       *
       * `classNames="fade"` applies `fade-enter`, `fade-enter-active`,
       * `fade-enter-done`, `fade-exit`, `fade-exit-active`, `fade-exit-done`,
       * `fade-appear`, `fade-appear-active`, and `fade-appear-done`.
       *
       * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.
       * This allows you to define different behavior for when appearing is done and
       * when regular entering is done, using selectors like
       * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an
       * epic entrance animation when element first appears in the DOM using
       * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
       * simply use `fade-enter-done` for defining both cases.
       *
       * Each individual classNames can also be specified independently like:
       *
       * ```js
       * classNames={{
       *  appear: 'my-appear',
       *  appearActive: 'my-active-appear',
       *  appearDone: 'my-done-appear',
       *  enter: 'my-enter',
       *  enterActive: 'my-active-enter',
       *  enterDone: 'my-done-enter',
       *  exit: 'my-exit',
       *  exitActive: 'my-active-exit',
       *  exitDone: 'my-done-exit',
       * }}
       * ```
       *
       * If you want to set these classes using CSS Modules:
       *
       * ```js
       * import styles from './styles.css';
       * ```
       *
       * you might want to use camelCase in your CSS file, that way could simply
       * spread them instead of listing them one by one:
       *
       * ```js
       * classNames={{ ...styles }}
       * ```
       *
       * @type {string | {
       *  appear?: string,
       *  appearActive?: string,
       *  appearDone?: string,
       *  enter?: string,
       *  enterActive?: string,
       *  enterDone?: string,
       *  exit?: string,
       *  exitActive?: string,
       *  exitDone?: string,
       * }}
       */
      classNames: _PropTypes.classNamesShape,
      /**
       * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
       * applied.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEnter: PropTypes2.func,
      /**
       * A `<Transition>` callback fired immediately after the 'enter-active' or
       * 'appear-active' class is applied.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEntering: PropTypes2.func,
      /**
       * A `<Transition>` callback fired immediately after the 'enter' or
       * 'appear' classes are **removed** and the `done` class is added to the DOM node.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEntered: PropTypes2.func,
      /**
       * A `<Transition>` callback fired immediately after the 'exit' class is
       * applied.
       *
       * @type Function(node: HtmlElement)
       */
      onExit: PropTypes2.func,
      /**
       * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
       *
       * @type Function(node: HtmlElement)
       */
      onExiting: PropTypes2.func,
      /**
       * A `<Transition>` callback fired immediately after the 'exit' classes
       * are **removed** and the `exit-done` class is added to the DOM node.
       *
       * @type Function(node: HtmlElement)
       */
      onExited: PropTypes2.func
    }) : {};
    var _default = CSSTransition;
    exports.default = _default;
    module.exports = exports["default"];
  }
});

// node_modules/shards-react/node_modules/react-transition-group/utils/ChildMapping.js
var require_ChildMapping = __commonJS({
  "node_modules/shards-react/node_modules/react-transition-group/utils/ChildMapping.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getChildMapping = getChildMapping;
    exports.mergeChildMappings = mergeChildMappings;
    exports.getInitialChildMapping = getInitialChildMapping;
    exports.getNextChildMapping = getNextChildMapping;
    var _react = require_react();
    function getChildMapping(children, mapFn) {
      var mapper = function mapper2(child) {
        return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
      };
      var result = /* @__PURE__ */ Object.create(null);
      if (children) _react.Children.map(children, function(c2) {
        return c2;
      }).forEach(function(child) {
        result[child.key] = mapper(child);
      });
      return result;
    }
    function mergeChildMappings(prev, next) {
      prev = prev || {};
      next = next || {};
      function getValueForKey(key) {
        return key in next ? next[key] : prev[key];
      }
      var nextKeysPending = /* @__PURE__ */ Object.create(null);
      var pendingKeys = [];
      for (var prevKey in prev) {
        if (prevKey in next) {
          if (pendingKeys.length) {
            nextKeysPending[prevKey] = pendingKeys;
            pendingKeys = [];
          }
        } else {
          pendingKeys.push(prevKey);
        }
      }
      var i2;
      var childMapping = {};
      for (var nextKey in next) {
        if (nextKeysPending[nextKey]) {
          for (i2 = 0; i2 < nextKeysPending[nextKey].length; i2++) {
            var pendingNextKey = nextKeysPending[nextKey][i2];
            childMapping[nextKeysPending[nextKey][i2]] = getValueForKey(pendingNextKey);
          }
        }
        childMapping[nextKey] = getValueForKey(nextKey);
      }
      for (i2 = 0; i2 < pendingKeys.length; i2++) {
        childMapping[pendingKeys[i2]] = getValueForKey(pendingKeys[i2]);
      }
      return childMapping;
    }
    function getProp(child, prop, props) {
      return props[prop] != null ? props[prop] : child.props[prop];
    }
    function getInitialChildMapping(props, onExited) {
      return getChildMapping(props.children, function(child) {
        return (0, _react.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: true,
          appear: getProp(child, "appear", props),
          enter: getProp(child, "enter", props),
          exit: getProp(child, "exit", props)
        });
      });
    }
    function getNextChildMapping(nextProps, prevChildMapping, onExited) {
      var nextChildMapping = getChildMapping(nextProps.children);
      var children = mergeChildMappings(prevChildMapping, nextChildMapping);
      Object.keys(children).forEach(function(key) {
        var child = children[key];
        if (!(0, _react.isValidElement)(child)) return;
        var hasPrev = key in prevChildMapping;
        var hasNext = key in nextChildMapping;
        var prevChild = prevChildMapping[key];
        var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in;
        if (hasNext && (!hasPrev || isLeaving)) {
          children[key] = (0, _react.cloneElement)(child, {
            onExited: onExited.bind(null, child),
            in: true,
            exit: getProp(child, "exit", nextProps),
            enter: getProp(child, "enter", nextProps)
          });
        } else if (!hasNext && hasPrev && !isLeaving) {
          children[key] = (0, _react.cloneElement)(child, {
            in: false
          });
        } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
          children[key] = (0, _react.cloneElement)(child, {
            onExited: onExited.bind(null, child),
            in: prevChild.props.in,
            exit: getProp(child, "exit", nextProps),
            enter: getProp(child, "enter", nextProps)
          });
        }
      });
      return children;
    }
  }
});

// node_modules/shards-react/node_modules/react-transition-group/TransitionGroup.js
var require_TransitionGroup = __commonJS({
  "node_modules/shards-react/node_modules/react-transition-group/TransitionGroup.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _reactLifecyclesCompat2 = (init_react_lifecycles_compat_es(), __toCommonJS(react_lifecycles_compat_es_exports));
    var _ChildMapping = require_ChildMapping();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutPropertiesLoose4(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i2;
      for (i2 = 0; i2 < sourceKeys.length; i2++) {
        key = sourceKeys[i2];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _extends4() {
      _extends4 = Object.assign || function(target) {
        for (var i2 = 1; i2 < arguments.length; i2++) {
          var source = arguments[i2];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends4.apply(this, arguments);
    }
    function _inheritsLoose3(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    function _assertThisInitialized4(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    var values = Object.values || function(obj) {
      return Object.keys(obj).map(function(k2) {
        return obj[k2];
      });
    };
    var defaultProps = {
      component: "div",
      childFactory: function childFactory(child) {
        return child;
      }
      /**
       * The `<TransitionGroup>` component manages a set of transition components
       * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
       * components, `<TransitionGroup>` is a state machine for managing the mounting
       * and unmounting of components over time.
       *
       * Consider the example below. As items are removed or added to the TodoList the
       * `in` prop is toggled automatically by the `<TransitionGroup>`.
       *
       * Note that `<TransitionGroup>`  does not define any animation behavior!
       * Exactly _how_ a list item animates is up to the individual transition
       * component. This means you can mix and match animations across different list
       * items.
       */
    };
    var TransitionGroup = function(_React$Component) {
      _inheritsLoose3(TransitionGroup2, _React$Component);
      function TransitionGroup2(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var handleExited = _this.handleExited.bind(_assertThisInitialized4(_assertThisInitialized4(_this)));
        _this.state = {
          handleExited,
          firstRender: true
        };
        return _this;
      }
      var _proto = TransitionGroup2.prototype;
      _proto.getChildContext = function getChildContext() {
        return {
          transitionGroup: {
            isMounting: !this.appeared
          }
        };
      };
      _proto.componentDidMount = function componentDidMount() {
        this.appeared = true;
        this.mounted = true;
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.mounted = false;
      };
      TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
        var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
        return {
          children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
          firstRender: false
        };
      };
      _proto.handleExited = function handleExited(child, node) {
        var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
        if (child.key in currentChildMapping) return;
        if (child.props.onExited) {
          child.props.onExited(node);
        }
        if (this.mounted) {
          this.setState(function(state) {
            var children = _extends4({}, state.children);
            delete children[child.key];
            return {
              children
            };
          });
        }
      };
      _proto.render = function render() {
        var _this$props = this.props, Component5 = _this$props.component, childFactory = _this$props.childFactory, props = _objectWithoutPropertiesLoose4(_this$props, ["component", "childFactory"]);
        var children = values(this.state.children).map(childFactory);
        delete props.appear;
        delete props.enter;
        delete props.exit;
        if (Component5 === null) {
          return children;
        }
        return _react.default.createElement(Component5, props, children);
      };
      return TransitionGroup2;
    }(_react.default.Component);
    TransitionGroup.childContextTypes = {
      transitionGroup: _propTypes.default.object.isRequired
    };
    TransitionGroup.propTypes = true ? {
      /**
       * `<TransitionGroup>` renders a `<div>` by default. You can change this
       * behavior by providing a `component` prop.
       * If you use React v16+ and would like to avoid a wrapping `<div>` element
       * you can pass in `component={null}`. This is useful if the wrapping div
       * borks your css styles.
       */
      component: _propTypes.default.any,
      /**
       * A set of `<Transition>` components, that are toggled `in` and out as they
       * leave. the `<TransitionGroup>` will inject specific transition props, so
       * remember to spread them through if you are wrapping the `<Transition>` as
       * with our `<Fade>` example.
       *
       * While this component is meant for multiple `Transition` or `CSSTransition`
       * children, sometimes you may want to have a single transition child with
       * content that you want to be transitioned out and in when you change it
       * (e.g. routes, images etc.) In that case you can change the `key` prop of
       * the transition child as you change its content, this will cause
       * `TransitionGroup` to transition the child out and back in.
       */
      children: _propTypes.default.node,
      /**
       * A convenience prop that enables or disables appear animations
       * for all children. Note that specifying this will override any defaults set
       * on individual children Transitions.
       */
      appear: _propTypes.default.bool,
      /**
       * A convenience prop that enables or disables enter animations
       * for all children. Note that specifying this will override any defaults set
       * on individual children Transitions.
       */
      enter: _propTypes.default.bool,
      /**
       * A convenience prop that enables or disables exit animations
       * for all children. Note that specifying this will override any defaults set
       * on individual children Transitions.
       */
      exit: _propTypes.default.bool,
      /**
       * You may need to apply reactive updates to a child as it is exiting.
       * This is generally done by using `cloneElement` however in the case of an exiting
       * child the element has already been removed and not accessible to the consumer.
       *
       * If you do need to update a child as it leaves you can provide a `childFactory`
       * to wrap every child, even the ones that are leaving.
       *
       * @type Function(child: ReactElement) -> ReactElement
       */
      childFactory: _propTypes.default.func
    } : {};
    TransitionGroup.defaultProps = defaultProps;
    var _default = (0, _reactLifecyclesCompat2.polyfill)(TransitionGroup);
    exports.default = _default;
    module.exports = exports["default"];
  }
});

// node_modules/shards-react/node_modules/react-transition-group/ReplaceTransition.js
var require_ReplaceTransition = __commonJS({
  "node_modules/shards-react/node_modules/react-transition-group/ReplaceTransition.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _reactDom = require_react_dom();
    var _TransitionGroup = _interopRequireDefault(require_TransitionGroup());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutPropertiesLoose4(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i2;
      for (i2 = 0; i2 < sourceKeys.length; i2++) {
        key = sourceKeys[i2];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose3(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var ReplaceTransition = function(_React$Component) {
      _inheritsLoose3(ReplaceTransition2, _React$Component);
      function ReplaceTransition2() {
        var _this;
        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
          _args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
        _this.handleEnter = function() {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return _this.handleLifecycle("onEnter", 0, args);
        };
        _this.handleEntering = function() {
          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
          }
          return _this.handleLifecycle("onEntering", 0, args);
        };
        _this.handleEntered = function() {
          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            args[_key4] = arguments[_key4];
          }
          return _this.handleLifecycle("onEntered", 0, args);
        };
        _this.handleExit = function() {
          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
            args[_key5] = arguments[_key5];
          }
          return _this.handleLifecycle("onExit", 1, args);
        };
        _this.handleExiting = function() {
          for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
            args[_key6] = arguments[_key6];
          }
          return _this.handleLifecycle("onExiting", 1, args);
        };
        _this.handleExited = function() {
          for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
            args[_key7] = arguments[_key7];
          }
          return _this.handleLifecycle("onExited", 1, args);
        };
        return _this;
      }
      var _proto = ReplaceTransition2.prototype;
      _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
        var _child$props;
        var children = this.props.children;
        var child = _react.default.Children.toArray(children)[idx];
        if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
        if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));
      };
      _proto.render = function render() {
        var _this$props = this.props, children = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose4(_this$props, ["children", "in"]);
        var _React$Children$toArr = _react.default.Children.toArray(children), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
        delete props.onEnter;
        delete props.onEntering;
        delete props.onEntered;
        delete props.onExit;
        delete props.onExiting;
        delete props.onExited;
        return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
          key: "first",
          onEnter: this.handleEnter,
          onEntering: this.handleEntering,
          onEntered: this.handleEntered
        }) : _react.default.cloneElement(second, {
          key: "second",
          onEnter: this.handleExit,
          onEntering: this.handleExiting,
          onEntered: this.handleExited
        }));
      };
      return ReplaceTransition2;
    }(_react.default.Component);
    ReplaceTransition.propTypes = true ? {
      in: _propTypes.default.bool.isRequired,
      children: function children(props, propName) {
        if (_react.default.Children.count(props[propName]) !== 2) return new Error('"' + propName + '" must be exactly two transition components.');
        return null;
      }
    } : {};
    var _default = ReplaceTransition;
    exports.default = _default;
    module.exports = exports["default"];
  }
});

// node_modules/shards-react/node_modules/react-transition-group/index.js
var require_react_transition_group = __commonJS({
  "node_modules/shards-react/node_modules/react-transition-group/index.js"(exports, module) {
    "use strict";
    var _CSSTransition = _interopRequireDefault(require_CSSTransition());
    var _ReplaceTransition = _interopRequireDefault(require_ReplaceTransition());
    var _TransitionGroup = _interopRequireDefault(require_TransitionGroup());
    var _Transition = _interopRequireDefault(require_Transition());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    module.exports = {
      Transition: _Transition.default,
      TransitionGroup: _TransitionGroup.default,
      ReplaceTransition: _ReplaceTransition.default,
      CSSTransition: _CSSTransition.default
    };
  }
});

// node_modules/lodash.tonumber/index.js
var require_lodash3 = __commonJS({
  "node_modules/lodash.tonumber/index.js"(exports, module) {
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toNumber2(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = toNumber2;
  }
});

// node_modules/nouislider/distribute/nouislider.js
var require_nouislider = __commonJS({
  "node_modules/nouislider/distribute/nouislider.js"(exports, module) {
    (function(factory) {
      if (typeof define === "function" && define.amd) {
        define([], factory);
      } else if (typeof exports === "object") {
        module.exports = factory();
      } else {
        window.noUiSlider = factory();
      }
    })(function() {
      "use strict";
      var VERSION = "12.1.0";
      function isValidFormatter(entry) {
        return typeof entry === "object" && typeof entry.to === "function" && typeof entry.from === "function";
      }
      function removeElement(el) {
        el.parentElement.removeChild(el);
      }
      function isSet(value) {
        return value !== null && value !== void 0;
      }
      function preventDefault(e3) {
        e3.preventDefault();
      }
      function unique(array) {
        return array.filter(function(a3) {
          return !this[a3] ? this[a3] = true : false;
        }, {});
      }
      function closest(value, to) {
        return Math.round(value / to) * to;
      }
      function offset2(elem, orientation) {
        var rect = elem.getBoundingClientRect();
        var doc = elem.ownerDocument;
        var docElem = doc.documentElement;
        var pageOffset = getPageOffset(doc);
        if (/webkit.*Chrome.*Mobile/i.test(navigator.userAgent)) {
          pageOffset.x = 0;
        }
        return orientation ? rect.top + pageOffset.y - docElem.clientTop : rect.left + pageOffset.x - docElem.clientLeft;
      }
      function isNumeric2(a3) {
        return typeof a3 === "number" && !isNaN(a3) && isFinite(a3);
      }
      function addClassFor(element, className, duration) {
        if (duration > 0) {
          addClass(element, className);
          setTimeout(function() {
            removeClass(element, className);
          }, duration);
        }
      }
      function limit(a3) {
        return Math.max(Math.min(a3, 100), 0);
      }
      function asArray(a3) {
        return Array.isArray(a3) ? a3 : [a3];
      }
      function countDecimals(numStr) {
        numStr = String(numStr);
        var pieces = numStr.split(".");
        return pieces.length > 1 ? pieces[1].length : 0;
      }
      function addClass(el, className) {
        if (el.classList) {
          el.classList.add(className);
        } else {
          el.className += " " + className;
        }
      }
      function removeClass(el, className) {
        if (el.classList) {
          el.classList.remove(className);
        } else {
          el.className = el.className.replace(
            new RegExp("(^|\\b)" + className.split(" ").join("|") + "(\\b|$)", "gi"),
            " "
          );
        }
      }
      function hasClass(el, className) {
        return el.classList ? el.classList.contains(className) : new RegExp("\\b" + className + "\\b").test(el.className);
      }
      function getPageOffset(doc) {
        var supportPageOffset = window.pageXOffset !== void 0;
        var isCSS1Compat = (doc.compatMode || "") === "CSS1Compat";
        var x2 = supportPageOffset ? window.pageXOffset : isCSS1Compat ? doc.documentElement.scrollLeft : doc.body.scrollLeft;
        var y3 = supportPageOffset ? window.pageYOffset : isCSS1Compat ? doc.documentElement.scrollTop : doc.body.scrollTop;
        return {
          x: x2,
          y: y3
        };
      }
      function getActions() {
        return window.navigator.pointerEnabled ? {
          start: "pointerdown",
          move: "pointermove",
          end: "pointerup"
        } : window.navigator.msPointerEnabled ? {
          start: "MSPointerDown",
          move: "MSPointerMove",
          end: "MSPointerUp"
        } : {
          start: "mousedown touchstart",
          move: "mousemove touchmove",
          end: "mouseup touchend"
        };
      }
      function getSupportsPassive() {
        var supportsPassive = false;
        try {
          var opts = Object.defineProperty({}, "passive", {
            get: function() {
              supportsPassive = true;
            }
          });
          window.addEventListener("test", null, opts);
        } catch (e3) {
        }
        return supportsPassive;
      }
      function getSupportsTouchActionNone() {
        return window.CSS && CSS.supports && CSS.supports("touch-action", "none");
      }
      function subRangeRatio(pa, pb) {
        return 100 / (pb - pa);
      }
      function fromPercentage(range, value) {
        return value * 100 / (range[1] - range[0]);
      }
      function toPercentage(range, value) {
        return fromPercentage(range, range[0] < 0 ? value + Math.abs(range[0]) : value - range[0]);
      }
      function isPercentage(range, value) {
        return value * (range[1] - range[0]) / 100 + range[0];
      }
      function getJ(value, arr) {
        var j = 1;
        while (value >= arr[j]) {
          j += 1;
        }
        return j;
      }
      function toStepping(xVal, xPct, value) {
        if (value >= xVal.slice(-1)[0]) {
          return 100;
        }
        var j = getJ(value, xVal);
        var va = xVal[j - 1];
        var vb = xVal[j];
        var pa = xPct[j - 1];
        var pb = xPct[j];
        return pa + toPercentage([va, vb], value) / subRangeRatio(pa, pb);
      }
      function fromStepping(xVal, xPct, value) {
        if (value >= 100) {
          return xVal.slice(-1)[0];
        }
        var j = getJ(value, xPct);
        var va = xVal[j - 1];
        var vb = xVal[j];
        var pa = xPct[j - 1];
        var pb = xPct[j];
        return isPercentage([va, vb], (value - pa) * subRangeRatio(pa, pb));
      }
      function getStep(xPct, xSteps, snap, value) {
        if (value === 100) {
          return value;
        }
        var j = getJ(value, xPct);
        var a3 = xPct[j - 1];
        var b2 = xPct[j];
        if (snap) {
          if (value - a3 > (b2 - a3) / 2) {
            return b2;
          }
          return a3;
        }
        if (!xSteps[j - 1]) {
          return value;
        }
        return xPct[j - 1] + closest(value - xPct[j - 1], xSteps[j - 1]);
      }
      function handleEntryPoint(index, value, that) {
        var percentage;
        if (typeof value === "number") {
          value = [value];
        }
        if (!Array.isArray(value)) {
          throw new Error("noUiSlider (" + VERSION + "): 'range' contains invalid value.");
        }
        if (index === "min") {
          percentage = 0;
        } else if (index === "max") {
          percentage = 100;
        } else {
          percentage = parseFloat(index);
        }
        if (!isNumeric2(percentage) || !isNumeric2(value[0])) {
          throw new Error("noUiSlider (" + VERSION + "): 'range' value isn't numeric.");
        }
        that.xPct.push(percentage);
        that.xVal.push(value[0]);
        if (!percentage) {
          if (!isNaN(value[1])) {
            that.xSteps[0] = value[1];
          }
        } else {
          that.xSteps.push(isNaN(value[1]) ? false : value[1]);
        }
        that.xHighestCompleteStep.push(0);
      }
      function handleStepPoint(i2, n, that) {
        if (!n) {
          return true;
        }
        that.xSteps[i2] = fromPercentage([that.xVal[i2], that.xVal[i2 + 1]], n) / subRangeRatio(that.xPct[i2], that.xPct[i2 + 1]);
        var totalSteps = (that.xVal[i2 + 1] - that.xVal[i2]) / that.xNumSteps[i2];
        var highestStep = Math.ceil(Number(totalSteps.toFixed(3)) - 1);
        var step = that.xVal[i2] + that.xNumSteps[i2] * highestStep;
        that.xHighestCompleteStep[i2] = step;
      }
      function Spectrum(entry, snap, singleStep) {
        this.xPct = [];
        this.xVal = [];
        this.xSteps = [singleStep || false];
        this.xNumSteps = [false];
        this.xHighestCompleteStep = [];
        this.snap = snap;
        var index;
        var ordered = [];
        for (index in entry) {
          if (entry.hasOwnProperty(index)) {
            ordered.push([entry[index], index]);
          }
        }
        if (ordered.length && typeof ordered[0][0] === "object") {
          ordered.sort(function(a3, b2) {
            return a3[0][0] - b2[0][0];
          });
        } else {
          ordered.sort(function(a3, b2) {
            return a3[0] - b2[0];
          });
        }
        for (index = 0; index < ordered.length; index++) {
          handleEntryPoint(ordered[index][1], ordered[index][0], this);
        }
        this.xNumSteps = this.xSteps.slice(0);
        for (index = 0; index < this.xNumSteps.length; index++) {
          handleStepPoint(index, this.xNumSteps[index], this);
        }
      }
      Spectrum.prototype.getMargin = function(value) {
        var step = this.xNumSteps[0];
        if (step && value / step % 1 !== 0) {
          throw new Error("noUiSlider (" + VERSION + "): 'limit', 'margin' and 'padding' must be divisible by step.");
        }
        return this.xPct.length === 2 ? fromPercentage(this.xVal, value) : false;
      };
      Spectrum.prototype.toStepping = function(value) {
        value = toStepping(this.xVal, this.xPct, value);
        return value;
      };
      Spectrum.prototype.fromStepping = function(value) {
        return fromStepping(this.xVal, this.xPct, value);
      };
      Spectrum.prototype.getStep = function(value) {
        value = getStep(this.xPct, this.xSteps, this.snap, value);
        return value;
      };
      Spectrum.prototype.getNearbySteps = function(value) {
        var j = getJ(value, this.xPct);
        return {
          stepBefore: {
            startValue: this.xVal[j - 2],
            step: this.xNumSteps[j - 2],
            highestStep: this.xHighestCompleteStep[j - 2]
          },
          thisStep: {
            startValue: this.xVal[j - 1],
            step: this.xNumSteps[j - 1],
            highestStep: this.xHighestCompleteStep[j - 1]
          },
          stepAfter: {
            startValue: this.xVal[j],
            step: this.xNumSteps[j],
            highestStep: this.xHighestCompleteStep[j]
          }
        };
      };
      Spectrum.prototype.countStepDecimals = function() {
        var stepDecimals = this.xNumSteps.map(countDecimals);
        return Math.max.apply(null, stepDecimals);
      };
      Spectrum.prototype.convert = function(value) {
        return this.getStep(this.toStepping(value));
      };
      var defaultFormatter = {
        to: function(value) {
          return value !== void 0 && value.toFixed(2);
        },
        from: Number
      };
      function validateFormat(entry) {
        if (isValidFormatter(entry)) {
          return true;
        }
        throw new Error("noUiSlider (" + VERSION + "): 'format' requires 'to' and 'from' methods.");
      }
      function testStep(parsed, entry) {
        if (!isNumeric2(entry)) {
          throw new Error("noUiSlider (" + VERSION + "): 'step' is not numeric.");
        }
        parsed.singleStep = entry;
      }
      function testRange(parsed, entry) {
        if (typeof entry !== "object" || Array.isArray(entry)) {
          throw new Error("noUiSlider (" + VERSION + "): 'range' is not an object.");
        }
        if (entry.min === void 0 || entry.max === void 0) {
          throw new Error("noUiSlider (" + VERSION + "): Missing 'min' or 'max' in 'range'.");
        }
        if (entry.min === entry.max) {
          throw new Error("noUiSlider (" + VERSION + "): 'range' 'min' and 'max' cannot be equal.");
        }
        parsed.spectrum = new Spectrum(entry, parsed.snap, parsed.singleStep);
      }
      function testStart(parsed, entry) {
        entry = asArray(entry);
        if (!Array.isArray(entry) || !entry.length) {
          throw new Error("noUiSlider (" + VERSION + "): 'start' option is incorrect.");
        }
        parsed.handles = entry.length;
        parsed.start = entry;
      }
      function testSnap(parsed, entry) {
        parsed.snap = entry;
        if (typeof entry !== "boolean") {
          throw new Error("noUiSlider (" + VERSION + "): 'snap' option must be a boolean.");
        }
      }
      function testAnimate(parsed, entry) {
        parsed.animate = entry;
        if (typeof entry !== "boolean") {
          throw new Error("noUiSlider (" + VERSION + "): 'animate' option must be a boolean.");
        }
      }
      function testAnimationDuration(parsed, entry) {
        parsed.animationDuration = entry;
        if (typeof entry !== "number") {
          throw new Error("noUiSlider (" + VERSION + "): 'animationDuration' option must be a number.");
        }
      }
      function testConnect(parsed, entry) {
        var connect = [false];
        var i2;
        if (entry === "lower") {
          entry = [true, false];
        } else if (entry === "upper") {
          entry = [false, true];
        }
        if (entry === true || entry === false) {
          for (i2 = 1; i2 < parsed.handles; i2++) {
            connect.push(entry);
          }
          connect.push(false);
        } else if (!Array.isArray(entry) || !entry.length || entry.length !== parsed.handles + 1) {
          throw new Error("noUiSlider (" + VERSION + "): 'connect' option doesn't match handle count.");
        } else {
          connect = entry;
        }
        parsed.connect = connect;
      }
      function testOrientation(parsed, entry) {
        switch (entry) {
          case "horizontal":
            parsed.ort = 0;
            break;
          case "vertical":
            parsed.ort = 1;
            break;
          default:
            throw new Error("noUiSlider (" + VERSION + "): 'orientation' option is invalid.");
        }
      }
      function testMargin(parsed, entry) {
        if (!isNumeric2(entry)) {
          throw new Error("noUiSlider (" + VERSION + "): 'margin' option must be numeric.");
        }
        if (entry === 0) {
          return;
        }
        parsed.margin = parsed.spectrum.getMargin(entry);
        if (!parsed.margin) {
          throw new Error("noUiSlider (" + VERSION + "): 'margin' option is only supported on linear sliders.");
        }
      }
      function testLimit(parsed, entry) {
        if (!isNumeric2(entry)) {
          throw new Error("noUiSlider (" + VERSION + "): 'limit' option must be numeric.");
        }
        parsed.limit = parsed.spectrum.getMargin(entry);
        if (!parsed.limit || parsed.handles < 2) {
          throw new Error(
            "noUiSlider (" + VERSION + "): 'limit' option is only supported on linear sliders with 2 or more handles."
          );
        }
      }
      function testPadding(parsed, entry) {
        if (!isNumeric2(entry) && !Array.isArray(entry)) {
          throw new Error(
            "noUiSlider (" + VERSION + "): 'padding' option must be numeric or array of exactly 2 numbers."
          );
        }
        if (Array.isArray(entry) && !(entry.length === 2 || isNumeric2(entry[0]) || isNumeric2(entry[1]))) {
          throw new Error(
            "noUiSlider (" + VERSION + "): 'padding' option must be numeric or array of exactly 2 numbers."
          );
        }
        if (entry === 0) {
          return;
        }
        if (!Array.isArray(entry)) {
          entry = [entry, entry];
        }
        parsed.padding = [parsed.spectrum.getMargin(entry[0]), parsed.spectrum.getMargin(entry[1])];
        if (parsed.padding[0] === false || parsed.padding[1] === false) {
          throw new Error("noUiSlider (" + VERSION + "): 'padding' option is only supported on linear sliders.");
        }
        if (parsed.padding[0] < 0 || parsed.padding[1] < 0) {
          throw new Error("noUiSlider (" + VERSION + "): 'padding' option must be a positive number(s).");
        }
        if (parsed.padding[0] + parsed.padding[1] >= 100) {
          throw new Error("noUiSlider (" + VERSION + "): 'padding' option must not exceed 100% of the range.");
        }
      }
      function testDirection(parsed, entry) {
        switch (entry) {
          case "ltr":
            parsed.dir = 0;
            break;
          case "rtl":
            parsed.dir = 1;
            break;
          default:
            throw new Error("noUiSlider (" + VERSION + "): 'direction' option was not recognized.");
        }
      }
      function testBehaviour(parsed, entry) {
        if (typeof entry !== "string") {
          throw new Error("noUiSlider (" + VERSION + "): 'behaviour' must be a string containing options.");
        }
        var tap = entry.indexOf("tap") >= 0;
        var drag = entry.indexOf("drag") >= 0;
        var fixed = entry.indexOf("fixed") >= 0;
        var snap = entry.indexOf("snap") >= 0;
        var hover = entry.indexOf("hover") >= 0;
        var unconstrained = entry.indexOf("unconstrained") >= 0;
        if (fixed) {
          if (parsed.handles !== 2) {
            throw new Error("noUiSlider (" + VERSION + "): 'fixed' behaviour must be used with 2 handles");
          }
          testMargin(parsed, parsed.start[1] - parsed.start[0]);
        }
        if (unconstrained && (parsed.margin || parsed.limit)) {
          throw new Error(
            "noUiSlider (" + VERSION + "): 'unconstrained' behaviour cannot be used with margin or limit"
          );
        }
        parsed.events = {
          tap: tap || snap,
          drag,
          fixed,
          snap,
          hover,
          unconstrained
        };
      }
      function testTooltips(parsed, entry) {
        if (entry === false) {
          return;
        }
        if (entry === true) {
          parsed.tooltips = [];
          for (var i2 = 0; i2 < parsed.handles; i2++) {
            parsed.tooltips.push(true);
          }
        } else {
          parsed.tooltips = asArray(entry);
          if (parsed.tooltips.length !== parsed.handles) {
            throw new Error("noUiSlider (" + VERSION + "): must pass a formatter for all handles.");
          }
          parsed.tooltips.forEach(function(formatter) {
            if (typeof formatter !== "boolean" && (typeof formatter !== "object" || typeof formatter.to !== "function")) {
              throw new Error("noUiSlider (" + VERSION + "): 'tooltips' must be passed a formatter or 'false'.");
            }
          });
        }
      }
      function testAriaFormat(parsed, entry) {
        parsed.ariaFormat = entry;
        validateFormat(entry);
      }
      function testFormat(parsed, entry) {
        parsed.format = entry;
        validateFormat(entry);
      }
      function testKeyboardSupport(parsed, entry) {
        parsed.keyboardSupport = entry;
        if (typeof entry !== "boolean") {
          throw new Error("noUiSlider (" + VERSION + "): 'keyboardSupport' option must be a boolean.");
        }
      }
      function testDocumentElement(parsed, entry) {
        parsed.documentElement = entry;
      }
      function testCssPrefix(parsed, entry) {
        if (typeof entry !== "string" && entry !== false) {
          throw new Error("noUiSlider (" + VERSION + "): 'cssPrefix' must be a string or `false`.");
        }
        parsed.cssPrefix = entry;
      }
      function testCssClasses(parsed, entry) {
        if (typeof entry !== "object") {
          throw new Error("noUiSlider (" + VERSION + "): 'cssClasses' must be an object.");
        }
        if (typeof parsed.cssPrefix === "string") {
          parsed.cssClasses = {};
          for (var key in entry) {
            if (!entry.hasOwnProperty(key)) {
              continue;
            }
            parsed.cssClasses[key] = parsed.cssPrefix + entry[key];
          }
        } else {
          parsed.cssClasses = entry;
        }
      }
      function testOptions(options) {
        var parsed = {
          margin: 0,
          limit: 0,
          padding: 0,
          animate: true,
          animationDuration: 300,
          ariaFormat: defaultFormatter,
          format: defaultFormatter
        };
        var tests = {
          step: { r: false, t: testStep },
          start: { r: true, t: testStart },
          connect: { r: true, t: testConnect },
          direction: { r: true, t: testDirection },
          snap: { r: false, t: testSnap },
          animate: { r: false, t: testAnimate },
          animationDuration: { r: false, t: testAnimationDuration },
          range: { r: true, t: testRange },
          orientation: { r: false, t: testOrientation },
          margin: { r: false, t: testMargin },
          limit: { r: false, t: testLimit },
          padding: { r: false, t: testPadding },
          behaviour: { r: true, t: testBehaviour },
          ariaFormat: { r: false, t: testAriaFormat },
          format: { r: false, t: testFormat },
          tooltips: { r: false, t: testTooltips },
          keyboardSupport: { r: true, t: testKeyboardSupport },
          documentElement: { r: false, t: testDocumentElement },
          cssPrefix: { r: true, t: testCssPrefix },
          cssClasses: { r: true, t: testCssClasses }
        };
        var defaults = {
          connect: false,
          direction: "ltr",
          behaviour: "tap",
          orientation: "horizontal",
          keyboardSupport: true,
          cssPrefix: "noUi-",
          cssClasses: {
            target: "target",
            base: "base",
            origin: "origin",
            handle: "handle",
            handleLower: "handle-lower",
            handleUpper: "handle-upper",
            horizontal: "horizontal",
            vertical: "vertical",
            background: "background",
            connect: "connect",
            connects: "connects",
            ltr: "ltr",
            rtl: "rtl",
            draggable: "draggable",
            drag: "state-drag",
            tap: "state-tap",
            active: "active",
            tooltip: "tooltip",
            pips: "pips",
            pipsHorizontal: "pips-horizontal",
            pipsVertical: "pips-vertical",
            marker: "marker",
            markerHorizontal: "marker-horizontal",
            markerVertical: "marker-vertical",
            markerNormal: "marker-normal",
            markerLarge: "marker-large",
            markerSub: "marker-sub",
            value: "value",
            valueHorizontal: "value-horizontal",
            valueVertical: "value-vertical",
            valueNormal: "value-normal",
            valueLarge: "value-large",
            valueSub: "value-sub"
          }
        };
        if (options.format && !options.ariaFormat) {
          options.ariaFormat = options.format;
        }
        Object.keys(tests).forEach(function(name) {
          if (!isSet(options[name]) && defaults[name] === void 0) {
            if (tests[name].r) {
              throw new Error("noUiSlider (" + VERSION + "): '" + name + "' is required.");
            }
            return true;
          }
          tests[name].t(parsed, !isSet(options[name]) ? defaults[name] : options[name]);
        });
        parsed.pips = options.pips;
        var d3 = document.createElement("div");
        var msPrefix = d3.style.msTransform !== void 0;
        var noPrefix = d3.style.transform !== void 0;
        parsed.transformRule = noPrefix ? "transform" : msPrefix ? "msTransform" : "webkitTransform";
        var styles = [["left", "top"], ["right", "bottom"]];
        parsed.style = styles[parsed.dir][parsed.ort];
        return parsed;
      }
      function scope(target, options, originalOptions) {
        var actions = getActions();
        var supportsTouchActionNone = getSupportsTouchActionNone();
        var supportsPassive = supportsTouchActionNone && getSupportsPassive();
        var scope_Target = target;
        var scope_Locations = [];
        var scope_Base;
        var scope_Handles;
        var scope_HandleNumbers = [];
        var scope_ActiveHandlesCount = 0;
        var scope_Connects;
        var scope_Spectrum = options.spectrum;
        var scope_Values = [];
        var scope_Events = {};
        var scope_Self;
        var scope_Pips;
        var scope_Document = target.ownerDocument;
        var scope_DocumentElement = options.documentElement || scope_Document.documentElement;
        var scope_Body = scope_Document.body;
        var PIPS_NONE = -1;
        var PIPS_NO_VALUE = 0;
        var PIPS_LARGE_VALUE = 1;
        var PIPS_SMALL_VALUE = 2;
        var scope_DirOffset = scope_Document.dir === "rtl" || options.ort === 1 ? 0 : 100;
        function addNodeTo(addTarget, className) {
          var div = scope_Document.createElement("div");
          if (className) {
            addClass(div, className);
          }
          addTarget.appendChild(div);
          return div;
        }
        function addOrigin(base, handleNumber) {
          var origin = addNodeTo(base, options.cssClasses.origin);
          var handle = addNodeTo(origin, options.cssClasses.handle);
          handle.setAttribute("data-handle", handleNumber);
          if (options.keyboardSupport) {
            handle.setAttribute("tabindex", "0");
          }
          handle.setAttribute("role", "slider");
          handle.setAttribute("aria-orientation", options.ort ? "vertical" : "horizontal");
          if (handleNumber === 0) {
            addClass(handle, options.cssClasses.handleLower);
          } else if (handleNumber === options.handles - 1) {
            addClass(handle, options.cssClasses.handleUpper);
          }
          return origin;
        }
        function addConnect(base, add) {
          if (!add) {
            return false;
          }
          return addNodeTo(base, options.cssClasses.connect);
        }
        function addElements(connectOptions, base) {
          var connectBase = addNodeTo(base, options.cssClasses.connects);
          scope_Handles = [];
          scope_Connects = [];
          scope_Connects.push(addConnect(connectBase, connectOptions[0]));
          for (var i2 = 0; i2 < options.handles; i2++) {
            scope_Handles.push(addOrigin(base, i2));
            scope_HandleNumbers[i2] = i2;
            scope_Connects.push(addConnect(connectBase, connectOptions[i2 + 1]));
          }
        }
        function addSlider(addTarget) {
          addClass(addTarget, options.cssClasses.target);
          if (options.dir === 0) {
            addClass(addTarget, options.cssClasses.ltr);
          } else {
            addClass(addTarget, options.cssClasses.rtl);
          }
          if (options.ort === 0) {
            addClass(addTarget, options.cssClasses.horizontal);
          } else {
            addClass(addTarget, options.cssClasses.vertical);
          }
          return addNodeTo(addTarget, options.cssClasses.base);
        }
        function addTooltip(handle, handleNumber) {
          if (!options.tooltips[handleNumber]) {
            return false;
          }
          return addNodeTo(handle.firstChild, options.cssClasses.tooltip);
        }
        function tooltips() {
          var tips = scope_Handles.map(addTooltip);
          bindEvent("update", function(values, handleNumber, unencoded) {
            if (!tips[handleNumber]) {
              return;
            }
            var formattedValue = values[handleNumber];
            if (options.tooltips[handleNumber] !== true) {
              formattedValue = options.tooltips[handleNumber].to(unencoded[handleNumber]);
            }
            tips[handleNumber].innerHTML = formattedValue;
          });
        }
        function aria() {
          bindEvent("update", function(values, handleNumber, unencoded, tap, positions) {
            scope_HandleNumbers.forEach(function(index) {
              var handle = scope_Handles[index];
              var min2 = checkHandlePosition(scope_Locations, index, 0, true, true, true);
              var max2 = checkHandlePosition(scope_Locations, index, 100, true, true, true);
              var now = positions[index];
              var text = options.ariaFormat.to(unencoded[index]);
              min2 = scope_Spectrum.fromStepping(min2).toFixed(1);
              max2 = scope_Spectrum.fromStepping(max2).toFixed(1);
              now = scope_Spectrum.fromStepping(now).toFixed(1);
              handle.children[0].setAttribute("aria-valuemin", min2);
              handle.children[0].setAttribute("aria-valuemax", max2);
              handle.children[0].setAttribute("aria-valuenow", now);
              handle.children[0].setAttribute("aria-valuetext", text);
            });
          });
        }
        function getGroup(mode, values, stepped) {
          if (mode === "range" || mode === "steps") {
            return scope_Spectrum.xVal;
          }
          if (mode === "count") {
            if (values < 2) {
              throw new Error("noUiSlider (" + VERSION + "): 'values' (>= 2) required for mode 'count'.");
            }
            var interval = values - 1;
            var spread = 100 / interval;
            values = [];
            while (interval--) {
              values[interval] = interval * spread;
            }
            values.push(100);
            mode = "positions";
          }
          if (mode === "positions") {
            return values.map(function(value) {
              return scope_Spectrum.fromStepping(stepped ? scope_Spectrum.getStep(value) : value);
            });
          }
          if (mode === "values") {
            if (stepped) {
              return values.map(function(value) {
                return scope_Spectrum.fromStepping(scope_Spectrum.getStep(scope_Spectrum.toStepping(value)));
              });
            }
            return values;
          }
        }
        function generateSpread(density, mode, group) {
          function safeIncrement(value, increment) {
            return (value + increment).toFixed(7) / 1;
          }
          var indexes = {};
          var firstInRange = scope_Spectrum.xVal[0];
          var lastInRange = scope_Spectrum.xVal[scope_Spectrum.xVal.length - 1];
          var ignoreFirst = false;
          var ignoreLast = false;
          var prevPct = 0;
          group = unique(
            group.slice().sort(function(a3, b2) {
              return a3 - b2;
            })
          );
          if (group[0] !== firstInRange) {
            group.unshift(firstInRange);
            ignoreFirst = true;
          }
          if (group[group.length - 1] !== lastInRange) {
            group.push(lastInRange);
            ignoreLast = true;
          }
          group.forEach(function(current, index) {
            var step;
            var i2;
            var q2;
            var low = current;
            var high = group[index + 1];
            var newPct;
            var pctDifference;
            var pctPos;
            var type;
            var steps;
            var realSteps;
            var stepSize;
            var isSteps = mode === "steps";
            if (isSteps) {
              step = scope_Spectrum.xNumSteps[index];
            }
            if (!step) {
              step = high - low;
            }
            if (low === false || high === void 0) {
              return;
            }
            step = Math.max(step, 1e-7);
            for (i2 = low; i2 <= high; i2 = safeIncrement(i2, step)) {
              newPct = scope_Spectrum.toStepping(i2);
              pctDifference = newPct - prevPct;
              steps = pctDifference / density;
              realSteps = Math.round(steps);
              stepSize = pctDifference / realSteps;
              for (q2 = 1; q2 <= realSteps; q2 += 1) {
                pctPos = prevPct + q2 * stepSize;
                indexes[pctPos.toFixed(5)] = [scope_Spectrum.fromStepping(pctPos), 0];
              }
              type = group.indexOf(i2) > -1 ? PIPS_LARGE_VALUE : isSteps ? PIPS_SMALL_VALUE : PIPS_NO_VALUE;
              if (!index && ignoreFirst) {
                type = 0;
              }
              if (!(i2 === high && ignoreLast)) {
                indexes[newPct.toFixed(5)] = [i2, type];
              }
              prevPct = newPct;
            }
          });
          return indexes;
        }
        function addMarking(spread, filterFunc, formatter) {
          var element = scope_Document.createElement("div");
          var valueSizeClasses = [];
          valueSizeClasses[PIPS_NO_VALUE] = options.cssClasses.valueNormal;
          valueSizeClasses[PIPS_LARGE_VALUE] = options.cssClasses.valueLarge;
          valueSizeClasses[PIPS_SMALL_VALUE] = options.cssClasses.valueSub;
          var markerSizeClasses = [];
          markerSizeClasses[PIPS_NO_VALUE] = options.cssClasses.markerNormal;
          markerSizeClasses[PIPS_LARGE_VALUE] = options.cssClasses.markerLarge;
          markerSizeClasses[PIPS_SMALL_VALUE] = options.cssClasses.markerSub;
          var valueOrientationClasses = [options.cssClasses.valueHorizontal, options.cssClasses.valueVertical];
          var markerOrientationClasses = [options.cssClasses.markerHorizontal, options.cssClasses.markerVertical];
          addClass(element, options.cssClasses.pips);
          addClass(element, options.ort === 0 ? options.cssClasses.pipsHorizontal : options.cssClasses.pipsVertical);
          function getClasses(type, source) {
            var a3 = source === options.cssClasses.value;
            var orientationClasses = a3 ? valueOrientationClasses : markerOrientationClasses;
            var sizeClasses = a3 ? valueSizeClasses : markerSizeClasses;
            return source + " " + orientationClasses[options.ort] + " " + sizeClasses[type];
          }
          function addSpread(offset3, value, type) {
            type = filterFunc ? filterFunc(value, type) : type;
            if (type === PIPS_NONE) {
              return;
            }
            var node = addNodeTo(element, false);
            node.className = getClasses(type, options.cssClasses.marker);
            node.style[options.style] = offset3 + "%";
            if (type > PIPS_NO_VALUE) {
              node = addNodeTo(element, false);
              node.className = getClasses(type, options.cssClasses.value);
              node.setAttribute("data-value", value);
              node.style[options.style] = offset3 + "%";
              node.innerHTML = formatter.to(value);
            }
          }
          Object.keys(spread).forEach(function(offset3) {
            addSpread(offset3, spread[offset3][0], spread[offset3][1]);
          });
          return element;
        }
        function removePips() {
          if (scope_Pips) {
            removeElement(scope_Pips);
            scope_Pips = null;
          }
        }
        function pips(grid) {
          removePips();
          var mode = grid.mode;
          var density = grid.density || 1;
          var filter = grid.filter || false;
          var values = grid.values || false;
          var stepped = grid.stepped || false;
          var group = getGroup(mode, values, stepped);
          var spread = generateSpread(density, mode, group);
          var format2 = grid.format || {
            to: Math.round
          };
          scope_Pips = scope_Target.appendChild(addMarking(spread, filter, format2));
          return scope_Pips;
        }
        function baseSize() {
          var rect = scope_Base.getBoundingClientRect();
          var alt = "offset" + ["Width", "Height"][options.ort];
          return options.ort === 0 ? rect.width || scope_Base[alt] : rect.height || scope_Base[alt];
        }
        function attachEvent(events, element, callback, data) {
          var method = function(e3) {
            e3 = fixEvent(e3, data.pageOffset, data.target || element);
            if (!e3) {
              return false;
            }
            if (scope_Target.hasAttribute("disabled") && !data.doNotReject) {
              return false;
            }
            if (hasClass(scope_Target, options.cssClasses.tap) && !data.doNotReject) {
              return false;
            }
            if (events === actions.start && e3.buttons !== void 0 && e3.buttons > 1) {
              return false;
            }
            if (data.hover && e3.buttons) {
              return false;
            }
            if (!supportsPassive) {
              e3.preventDefault();
            }
            e3.calcPoint = e3.points[options.ort];
            callback(e3, data);
          };
          var methods = [];
          events.split(" ").forEach(function(eventName) {
            element.addEventListener(eventName, method, supportsPassive ? { passive: true } : false);
            methods.push([eventName, method]);
          });
          return methods;
        }
        function fixEvent(e3, pageOffset, eventTarget) {
          var touch = e3.type.indexOf("touch") === 0;
          var mouse = e3.type.indexOf("mouse") === 0;
          var pointer = e3.type.indexOf("pointer") === 0;
          var x2;
          var y3;
          if (e3.type.indexOf("MSPointer") === 0) {
            pointer = true;
          }
          if (touch) {
            var isTouchOnTarget = function(checkTouch) {
              return checkTouch.target === eventTarget || eventTarget.contains(checkTouch.target);
            };
            if (e3.type === "touchstart") {
              var targetTouches = Array.prototype.filter.call(e3.touches, isTouchOnTarget);
              if (targetTouches.length > 1) {
                return false;
              }
              x2 = targetTouches[0].pageX;
              y3 = targetTouches[0].pageY;
            } else {
              var targetTouch = Array.prototype.find.call(e3.changedTouches, isTouchOnTarget);
              if (!targetTouch) {
                return false;
              }
              x2 = targetTouch.pageX;
              y3 = targetTouch.pageY;
            }
          }
          pageOffset = pageOffset || getPageOffset(scope_Document);
          if (mouse || pointer) {
            x2 = e3.clientX + pageOffset.x;
            y3 = e3.clientY + pageOffset.y;
          }
          e3.pageOffset = pageOffset;
          e3.points = [x2, y3];
          e3.cursor = mouse || pointer;
          return e3;
        }
        function calcPointToPercentage(calcPoint) {
          var location = calcPoint - offset2(scope_Base, options.ort);
          var proposal = location * 100 / baseSize();
          proposal = limit(proposal);
          return options.dir ? 100 - proposal : proposal;
        }
        function getClosestHandle(proposal) {
          var closest2 = 100;
          var handleNumber = false;
          scope_Handles.forEach(function(handle, index) {
            if (handle.hasAttribute("disabled")) {
              return;
            }
            var pos = Math.abs(scope_Locations[index] - proposal);
            if (pos < closest2 || pos === 100 && closest2 === 100) {
              handleNumber = index;
              closest2 = pos;
            }
          });
          return handleNumber;
        }
        function documentLeave(event, data) {
          if (event.type === "mouseout" && event.target.nodeName === "HTML" && event.relatedTarget === null) {
            eventEnd(event, data);
          }
        }
        function eventMove(event, data) {
          if (navigator.appVersion.indexOf("MSIE 9") === -1 && event.buttons === 0 && data.buttonsProperty !== 0) {
            return eventEnd(event, data);
          }
          var movement = (options.dir ? -1 : 1) * (event.calcPoint - data.startCalcPoint);
          var proposal = movement * 100 / data.baseSize;
          moveHandles(movement > 0, proposal, data.locations, data.handleNumbers);
        }
        function eventEnd(event, data) {
          if (data.handle) {
            removeClass(data.handle, options.cssClasses.active);
            scope_ActiveHandlesCount -= 1;
          }
          data.listeners.forEach(function(c2) {
            scope_DocumentElement.removeEventListener(c2[0], c2[1]);
          });
          if (scope_ActiveHandlesCount === 0) {
            removeClass(scope_Target, options.cssClasses.drag);
            setZindex();
            if (event.cursor) {
              scope_Body.style.cursor = "";
              scope_Body.removeEventListener("selectstart", preventDefault);
            }
          }
          data.handleNumbers.forEach(function(handleNumber) {
            fireEvent("change", handleNumber);
            fireEvent("set", handleNumber);
            fireEvent("end", handleNumber);
          });
        }
        function eventStart(event, data) {
          var handle;
          if (data.handleNumbers.length === 1) {
            var handleOrigin = scope_Handles[data.handleNumbers[0]];
            if (handleOrigin.hasAttribute("disabled")) {
              return false;
            }
            handle = handleOrigin.children[0];
            scope_ActiveHandlesCount += 1;
            addClass(handle, options.cssClasses.active);
          }
          event.stopPropagation();
          var listeners = [];
          var moveEvent = attachEvent(actions.move, scope_DocumentElement, eventMove, {
            // The event target has changed so we need to propagate the original one so that we keep
            // relying on it to extract target touches.
            target: event.target,
            handle,
            listeners,
            startCalcPoint: event.calcPoint,
            baseSize: baseSize(),
            pageOffset: event.pageOffset,
            handleNumbers: data.handleNumbers,
            buttonsProperty: event.buttons,
            locations: scope_Locations.slice()
          });
          var endEvent = attachEvent(actions.end, scope_DocumentElement, eventEnd, {
            target: event.target,
            handle,
            listeners,
            doNotReject: true,
            handleNumbers: data.handleNumbers
          });
          var outEvent = attachEvent("mouseout", scope_DocumentElement, documentLeave, {
            target: event.target,
            handle,
            listeners,
            doNotReject: true,
            handleNumbers: data.handleNumbers
          });
          listeners.push.apply(listeners, moveEvent.concat(endEvent, outEvent));
          if (event.cursor) {
            scope_Body.style.cursor = getComputedStyle(event.target).cursor;
            if (scope_Handles.length > 1) {
              addClass(scope_Target, options.cssClasses.drag);
            }
            scope_Body.addEventListener("selectstart", preventDefault, false);
          }
          data.handleNumbers.forEach(function(handleNumber) {
            fireEvent("start", handleNumber);
          });
        }
        function eventTap(event) {
          event.stopPropagation();
          var proposal = calcPointToPercentage(event.calcPoint);
          var handleNumber = getClosestHandle(proposal);
          if (handleNumber === false) {
            return false;
          }
          if (!options.events.snap) {
            addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);
          }
          setHandle(handleNumber, proposal, true, true);
          setZindex();
          fireEvent("slide", handleNumber, true);
          fireEvent("update", handleNumber, true);
          fireEvent("change", handleNumber, true);
          fireEvent("set", handleNumber, true);
          if (options.events.snap) {
            eventStart(event, { handleNumbers: [handleNumber] });
          }
        }
        function eventHover(event) {
          var proposal = calcPointToPercentage(event.calcPoint);
          var to = scope_Spectrum.getStep(proposal);
          var value = scope_Spectrum.fromStepping(to);
          Object.keys(scope_Events).forEach(function(targetEvent) {
            if ("hover" === targetEvent.split(".")[0]) {
              scope_Events[targetEvent].forEach(function(callback) {
                callback.call(scope_Self, value);
              });
            }
          });
        }
        function bindSliderEvents(behaviour) {
          if (!behaviour.fixed) {
            scope_Handles.forEach(function(handle, index) {
              attachEvent(actions.start, handle.children[0], eventStart, {
                handleNumbers: [index]
              });
            });
          }
          if (behaviour.tap) {
            attachEvent(actions.start, scope_Base, eventTap, {});
          }
          if (behaviour.hover) {
            attachEvent(actions.move, scope_Base, eventHover, {
              hover: true
            });
          }
          if (behaviour.drag) {
            scope_Connects.forEach(function(connect, index) {
              if (connect === false || index === 0 || index === scope_Connects.length - 1) {
                return;
              }
              var handleBefore = scope_Handles[index - 1];
              var handleAfter = scope_Handles[index];
              var eventHolders = [connect];
              addClass(connect, options.cssClasses.draggable);
              if (behaviour.fixed) {
                eventHolders.push(handleBefore.children[0]);
                eventHolders.push(handleAfter.children[0]);
              }
              eventHolders.forEach(function(eventHolder) {
                attachEvent(actions.start, eventHolder, eventStart, {
                  handles: [handleBefore, handleAfter],
                  handleNumbers: [index - 1, index]
                });
              });
            });
          }
        }
        function bindEvent(namespacedEvent, callback) {
          scope_Events[namespacedEvent] = scope_Events[namespacedEvent] || [];
          scope_Events[namespacedEvent].push(callback);
          if (namespacedEvent.split(".")[0] === "update") {
            scope_Handles.forEach(function(a3, index) {
              fireEvent("update", index);
            });
          }
        }
        function removeEvent(namespacedEvent) {
          var event = namespacedEvent && namespacedEvent.split(".")[0];
          var namespace = event && namespacedEvent.substring(event.length);
          Object.keys(scope_Events).forEach(function(bind) {
            var tEvent = bind.split(".")[0];
            var tNamespace = bind.substring(tEvent.length);
            if ((!event || event === tEvent) && (!namespace || namespace === tNamespace)) {
              delete scope_Events[bind];
            }
          });
        }
        function fireEvent(eventName, handleNumber, tap) {
          Object.keys(scope_Events).forEach(function(targetEvent) {
            var eventType = targetEvent.split(".")[0];
            if (eventName === eventType) {
              scope_Events[targetEvent].forEach(function(callback) {
                callback.call(
                  // Use the slider public API as the scope ('this')
                  scope_Self,
                  // Return values as array, so arg_1[arg_2] is always valid.
                  scope_Values.map(options.format.to),
                  // Handle index, 0 or 1
                  handleNumber,
                  // Un-formatted slider values
                  scope_Values.slice(),
                  // Event is fired by tap, true or false
                  tap || false,
                  // Left offset of the handle, in relation to the slider
                  scope_Locations.slice()
                );
              });
            }
          });
        }
        function toPct(pct) {
          return pct + "%";
        }
        function checkHandlePosition(reference, handleNumber, to, lookBackward, lookForward, getValue) {
          if (scope_Handles.length > 1 && !options.events.unconstrained) {
            if (lookBackward && handleNumber > 0) {
              to = Math.max(to, reference[handleNumber - 1] + options.margin);
            }
            if (lookForward && handleNumber < scope_Handles.length - 1) {
              to = Math.min(to, reference[handleNumber + 1] - options.margin);
            }
          }
          if (scope_Handles.length > 1 && options.limit) {
            if (lookBackward && handleNumber > 0) {
              to = Math.min(to, reference[handleNumber - 1] + options.limit);
            }
            if (lookForward && handleNumber < scope_Handles.length - 1) {
              to = Math.max(to, reference[handleNumber + 1] - options.limit);
            }
          }
          if (options.padding) {
            if (handleNumber === 0) {
              to = Math.max(to, options.padding[0]);
            }
            if (handleNumber === scope_Handles.length - 1) {
              to = Math.min(to, 100 - options.padding[1]);
            }
          }
          to = scope_Spectrum.getStep(to);
          to = limit(to);
          if (to === reference[handleNumber] && !getValue) {
            return false;
          }
          return to;
        }
        function inRuleOrder(v, a3) {
          var o = options.ort;
          return (o ? a3 : v) + ", " + (o ? v : a3);
        }
        function moveHandles(upward, proposal, locations, handleNumbers) {
          var proposals = locations.slice();
          var b2 = [!upward, upward];
          var f = [upward, !upward];
          handleNumbers = handleNumbers.slice();
          if (upward) {
            handleNumbers.reverse();
          }
          if (handleNumbers.length > 1) {
            handleNumbers.forEach(function(handleNumber, o) {
              var to = checkHandlePosition(
                proposals,
                handleNumber,
                proposals[handleNumber] + proposal,
                b2[o],
                f[o],
                false
              );
              if (to === false) {
                proposal = 0;
              } else {
                proposal = to - proposals[handleNumber];
                proposals[handleNumber] = to;
              }
            });
          } else {
            b2 = f = [true];
          }
          var state = false;
          handleNumbers.forEach(function(handleNumber, o) {
            state = setHandle(handleNumber, locations[handleNumber] + proposal, b2[o], f[o]) || state;
          });
          if (state) {
            handleNumbers.forEach(function(handleNumber) {
              fireEvent("update", handleNumber);
              fireEvent("slide", handleNumber);
            });
          }
        }
        function transformDirection(a3, b2) {
          return options.dir ? 100 - a3 - b2 : a3;
        }
        function updateHandlePosition(handleNumber, to) {
          scope_Locations[handleNumber] = to;
          scope_Values[handleNumber] = scope_Spectrum.fromStepping(to);
          var rule = "translate(" + inRuleOrder(toPct(transformDirection(to, 0) - scope_DirOffset), "0") + ")";
          scope_Handles[handleNumber].style[options.transformRule] = rule;
          updateConnect(handleNumber);
          updateConnect(handleNumber + 1);
        }
        function setZindex() {
          scope_HandleNumbers.forEach(function(handleNumber) {
            var dir = scope_Locations[handleNumber] > 50 ? -1 : 1;
            var zIndex = 3 + (scope_Handles.length + dir * handleNumber);
            scope_Handles[handleNumber].style.zIndex = zIndex;
          });
        }
        function setHandle(handleNumber, to, lookBackward, lookForward) {
          to = checkHandlePosition(scope_Locations, handleNumber, to, lookBackward, lookForward, false);
          if (to === false) {
            return false;
          }
          updateHandlePosition(handleNumber, to);
          return true;
        }
        function updateConnect(index) {
          if (!scope_Connects[index]) {
            return;
          }
          var l = 0;
          var h3 = 100;
          if (index !== 0) {
            l = scope_Locations[index - 1];
          }
          if (index !== scope_Connects.length - 1) {
            h3 = scope_Locations[index];
          }
          var connectWidth = h3 - l;
          var translateRule = "translate(" + inRuleOrder(toPct(transformDirection(l, connectWidth)), "0") + ")";
          var scaleRule = "scale(" + inRuleOrder(connectWidth / 100, "1") + ")";
          scope_Connects[index].style[options.transformRule] = translateRule + " " + scaleRule;
        }
        function resolveToValue(to, handleNumber) {
          if (to === null || to === false || to === void 0) {
            return scope_Locations[handleNumber];
          }
          if (typeof to === "number") {
            to = String(to);
          }
          to = options.format.from(to);
          to = scope_Spectrum.toStepping(to);
          if (to === false || isNaN(to)) {
            return scope_Locations[handleNumber];
          }
          return to;
        }
        function valueSet(input, fireSetEvent) {
          var values = asArray(input);
          var isInit = scope_Locations[0] === void 0;
          fireSetEvent = fireSetEvent === void 0 ? true : !!fireSetEvent;
          if (options.animate && !isInit) {
            addClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);
          }
          scope_HandleNumbers.forEach(function(handleNumber) {
            setHandle(handleNumber, resolveToValue(values[handleNumber], handleNumber), true, false);
          });
          scope_HandleNumbers.forEach(function(handleNumber) {
            setHandle(handleNumber, scope_Locations[handleNumber], true, true);
          });
          setZindex();
          scope_HandleNumbers.forEach(function(handleNumber) {
            fireEvent("update", handleNumber);
            if (values[handleNumber] !== null && fireSetEvent) {
              fireEvent("set", handleNumber);
            }
          });
        }
        function valueReset(fireSetEvent) {
          valueSet(options.start, fireSetEvent);
        }
        function valueSetHandle(handleNumber, value, fireSetEvent) {
          var values = [];
          handleNumber = Number(handleNumber);
          if (!(handleNumber >= 0 && handleNumber < scope_HandleNumbers.length)) {
            throw new Error("noUiSlider (" + VERSION + "): invalid handle number, got: " + handleNumber);
          }
          for (var i2 = 0; i2 < scope_HandleNumbers.length; i2++) {
            values[i2] = null;
          }
          values[handleNumber] = value;
          valueSet(values, fireSetEvent);
        }
        function valueGet() {
          var values = scope_Values.map(options.format.to);
          if (values.length === 1) {
            return values[0];
          }
          return values;
        }
        function destroy2() {
          for (var key in options.cssClasses) {
            if (!options.cssClasses.hasOwnProperty(key)) {
              continue;
            }
            removeClass(scope_Target, options.cssClasses[key]);
          }
          while (scope_Target.firstChild) {
            scope_Target.removeChild(scope_Target.firstChild);
          }
          delete scope_Target.noUiSlider;
        }
        function getCurrentStep() {
          return scope_Locations.map(function(location, index) {
            var nearbySteps = scope_Spectrum.getNearbySteps(location);
            var value = scope_Values[index];
            var increment = nearbySteps.thisStep.step;
            var decrement = null;
            if (increment !== false) {
              if (value + increment > nearbySteps.stepAfter.startValue) {
                increment = nearbySteps.stepAfter.startValue - value;
              }
            }
            if (value > nearbySteps.thisStep.startValue) {
              decrement = nearbySteps.thisStep.step;
            } else if (nearbySteps.stepBefore.step === false) {
              decrement = false;
            } else {
              decrement = value - nearbySteps.stepBefore.highestStep;
            }
            if (location === 100) {
              increment = null;
            } else if (location === 0) {
              decrement = null;
            }
            var stepDecimals = scope_Spectrum.countStepDecimals();
            if (increment !== null && increment !== false) {
              increment = Number(increment.toFixed(stepDecimals));
            }
            if (decrement !== null && decrement !== false) {
              decrement = Number(decrement.toFixed(stepDecimals));
            }
            return [decrement, increment];
          });
        }
        function updateOptions(optionsToUpdate, fireSetEvent) {
          var v = valueGet();
          var updateAble = ["margin", "limit", "padding", "range", "animate", "snap", "step", "format"];
          updateAble.forEach(function(name) {
            if (optionsToUpdate[name] !== void 0) {
              originalOptions[name] = optionsToUpdate[name];
            }
          });
          var newOptions = testOptions(originalOptions);
          updateAble.forEach(function(name) {
            if (optionsToUpdate[name] !== void 0) {
              options[name] = newOptions[name];
            }
          });
          scope_Spectrum = newOptions.spectrum;
          options.margin = newOptions.margin;
          options.limit = newOptions.limit;
          options.padding = newOptions.padding;
          if (options.pips) {
            pips(options.pips);
          }
          scope_Locations = [];
          valueSet(optionsToUpdate.start || v, fireSetEvent);
        }
        scope_Base = addSlider(scope_Target);
        addElements(options.connect, scope_Base);
        bindSliderEvents(options.events);
        valueSet(options.start);
        scope_Self = {
          destroy: destroy2,
          steps: getCurrentStep,
          on: bindEvent,
          off: removeEvent,
          get: valueGet,
          set: valueSet,
          setHandle: valueSetHandle,
          reset: valueReset,
          // Exposed for unit testing, don't use this in your application.
          __moveHandles: function(a3, b2, c2) {
            moveHandles(a3, b2, scope_Locations, c2);
          },
          options: originalOptions,
          // Issue #600, #678
          updateOptions,
          target: scope_Target,
          // Issue #597
          removePips,
          pips
          // Issue #594
        };
        if (options.pips) {
          pips(options.pips);
        }
        if (options.tooltips) {
          tooltips();
        }
        aria();
        return scope_Self;
      }
      function initialize(target, originalOptions) {
        if (!target || !target.nodeName) {
          throw new Error("noUiSlider (" + VERSION + "): create requires a single element, got: " + target);
        }
        if (target.noUiSlider) {
          throw new Error("noUiSlider (" + VERSION + "): Slider was already initialized.");
        }
        var options = testOptions(originalOptions, target);
        var api = scope(target, options, originalOptions);
        target.noUiSlider = api;
        return api;
      }
      return {
        // Exposed for unit testing, don't use this in your application.
        __spectrum: Spectrum,
        version: VERSION,
        create: initialize
      };
    });
  }
});

// node_modules/lodash.omit/index.js
var require_lodash4 = __commonJS({
  "node_modules/lodash.omit/index.js"(exports, module) {
    var LARGE_ARRAY_SIZE = 200;
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var INFINITY = 1 / 0;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var symbolTag = "[object Symbol]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }
    function arrayIncludes(array, value) {
      var length = array ? array.length : 0;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }
    function arrayIncludesWith(array, value, comparator) {
      var index = -1, length = array ? array.length : 0;
      while (++index < length) {
        if (comparator(value, array[index])) {
          return true;
        }
      }
      return false;
    }
    function arrayMap(array, iteratee) {
      var index = -1, length = array ? array.length : 0, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset2 = array.length;
      while (++index < length) {
        array[offset2 + index] = values[index];
      }
      return array;
    }
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }
    function baseIndexOf(array, value, fromIndex) {
      if (value !== value) {
        return baseFindIndex(array, baseIsNaN, fromIndex);
      }
      var index = fromIndex - 1, length = array.length;
      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }
    function baseIsNaN(value) {
      return value !== value;
    }
    function baseTimes(n, iteratee) {
      var index = -1, result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function isHostObject(value) {
      var result = false;
      if (value != null && typeof value.toString != "function") {
        try {
          result = !!(value + "");
        } catch (e3) {
        }
      }
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var maskSrcKey = function() {
      var uid2 = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid2 ? "Symbol(src)_1." + uid2 : "";
    }();
    var funcToString = funcProto.toString;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var objectToString = objectProto.toString;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    var Symbol2 = root.Symbol;
    var getPrototype = overArg(Object.getPrototypeOf, Object);
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var splice = arrayProto.splice;
    var spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : void 0;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var nativeMax = Math.max;
    var Map2 = getNative(root, "Map");
    var nativeCreate = getNative(Object, "create");
    function Hash(entries) {
      var index = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
    }
    function hashDelete(key) {
      return this.has(key) && delete this.__data__[key];
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty2.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty2.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
    }
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      return getMapData(this, key)["delete"](key);
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      getMapData(this, key).set(key, value);
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function SetCache(values) {
      var index = -1, length = values ? values.length : 0;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    function arrayLikeKeys(value, inherited) {
      var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];
      var length = result.length, skipIndexes = !!length;
      for (var key in value) {
        if ((inherited || hasOwnProperty2.call(value, key)) && !(skipIndexes && (key == "length" || isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1, includes = arrayIncludes, isCommon = true, length = array.length, result = [], valuesLength = values.length;
      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      } else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
        while (++index < length) {
          var value = array[index], computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var valuesIndex = valuesLength;
            while (valuesIndex--) {
              if (values[valuesIndex] === computed) {
                continue outer;
              }
            }
            result.push(value);
          } else if (!includes(values, computed, comparator)) {
            result.push(value);
          }
        }
      return result;
    }
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1, length = array.length;
      predicate || (predicate = isFlattenable);
      result || (result = []);
      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction3(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object), result = [];
      for (var key in object) {
        if (!(key == "constructor" && (isProto || !hasOwnProperty2.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }
    function basePick(object, props) {
      object = Object(object);
      return basePickBy(object, props, function(value, key) {
        return key in object;
      });
    }
    function basePickBy(object, props, predicate) {
      var index = -1, length = props.length, result = {};
      while (++index < length) {
        var key = props[index], value = object[key];
        if (predicate(value, key)) {
          result[key] = value;
        }
      }
      return result;
    }
    function baseRest(func, start) {
      start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
      return function() {
        var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = array;
        return apply(func, this, otherArgs);
      };
    }
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
    }
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e3) {
        }
        try {
          return func + "";
        } catch (e3) {
        }
      }
      return "";
    }
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    function isArguments(value) {
      return isArrayLikeObject(value) && hasOwnProperty2.call(value, "callee") && (!propertyIsEnumerable.call(value, "callee") || objectToString.call(value) == argsTag);
    }
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction3(value);
    }
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    function isFunction3(value) {
      var tag = isObject(value) ? objectToString.call(value) : "";
      return tag == funcTag || tag == genTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }
    var omit2 = baseRest(function(object, props) {
      if (object == null) {
        return {};
      }
      props = arrayMap(baseFlatten(props, 1), toKey);
      return basePick(object, baseDifference(getAllKeysIn(object), props));
    });
    function stubArray() {
      return [];
    }
    module.exports = omit2;
  }
});

// node_modules/shards-react/dist/shards-react.es.js
var import_lodash = __toESM(require_lodash());
var import_lodash2 = __toESM(require_lodash2());

// node_modules/shards-react/node_modules/react-datepicker/dist/es/index.js
var import_react2 = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
var import_classnames = __toESM(require_classnames());

// node_modules/date-fns/esm/_lib/requiredArgs/index.js
function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
  }
}

// node_modules/date-fns/esm/isDate/index.js
function isDate(value) {
  requiredArgs(1, arguments);
  return value instanceof Date || _typeof(value) === "object" && Object.prototype.toString.call(value) === "[object Date]";
}

// node_modules/date-fns/esm/toDate/index.js
function toDate(argument) {
  requiredArgs(1, arguments);
  var argStr = Object.prototype.toString.call(argument);
  if (argument instanceof Date || _typeof(argument) === "object" && argStr === "[object Date]") {
    return new Date(argument.getTime());
  } else if (typeof argument === "number" || argStr === "[object Number]") {
    return new Date(argument);
  } else {
    if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
      console.warn(new Error().stack);
    }
    return /* @__PURE__ */ new Date(NaN);
  }
}

// node_modules/date-fns/esm/isValid/index.js
function isValid(dirtyDate) {
  requiredArgs(1, arguments);
  if (!isDate(dirtyDate) && typeof dirtyDate !== "number") {
    return false;
  }
  var date = toDate(dirtyDate);
  return !isNaN(Number(date));
}

// node_modules/date-fns/esm/_lib/toInteger/index.js
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number = Number(dirtyNumber);
  if (isNaN(number)) {
    return number;
  }
  return number < 0 ? Math.ceil(number) : Math.floor(number);
}

// node_modules/date-fns/esm/addMilliseconds/index.js
function addMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var timestamp = toDate(dirtyDate).getTime();
  var amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount);
}

// node_modules/date-fns/esm/subMilliseconds/index.js
function subMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount);
}

// node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js
var MILLISECONDS_IN_DAY = 864e5;
function getUTCDayOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
}

// node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js
function startOfUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js
function getUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js
function startOfUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getUTCISOWeekYear(dirtyDate);
  var fourthOfJanuary = /* @__PURE__ */ new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek(fourthOfJanuary);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js
var MILLISECONDS_IN_WEEK = 6048e5;
function getUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

// node_modules/date-fns/esm/_lib/defaultOptions/index.js
var defaultOptions = {};
function getDefaultOptions() {
  return defaultOptions;
}

// node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js
function startOfUTCWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions2 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js
function getUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var defaultOptions2 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var firstWeekOfNextYear = /* @__PURE__ */ new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = /* @__PURE__ */ new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js
function startOfUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions2 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = getUTCWeekYear(dirtyDate, options);
  var firstWeek = /* @__PURE__ */ new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek(firstWeek, options);
  return date;
}

// node_modules/date-fns/esm/_lib/getUTCWeek/index.js
var MILLISECONDS_IN_WEEK2 = 6048e5;
function getUTCWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK2) + 1;
}

// node_modules/date-fns/esm/_lib/addLeadingZeros/index.js
function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? "-" : "";
  var output = Math.abs(number).toString();
  while (output.length < targetLength) {
    output = "0" + output;
  }
  return sign + output;
}

// node_modules/date-fns/esm/_lib/format/lightFormatters/index.js
var formatters = {
  // Year
  y: function y(date, token) {
    var signedYear = date.getUTCFullYear();
    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === "yy" ? year % 100 : year, token.length);
  },
  // Month
  M: function M(date, token) {
    var month = date.getUTCMonth();
    return token === "M" ? String(month + 1) : addLeadingZeros(month + 1, 2);
  },
  // Day of the month
  d: function d(date, token) {
    return addLeadingZeros(date.getUTCDate(), token.length);
  },
  // AM or PM
  a: function a(date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return dayPeriodEnumValue.toUpperCase();
      case "aaa":
        return dayPeriodEnumValue;
      case "aaaaa":
        return dayPeriodEnumValue[0];
      case "aaaa":
      default:
        return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
    }
  },
  // Hour [1-12]
  h: function h(date, token) {
    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H: function H(date, token) {
    return addLeadingZeros(date.getUTCHours(), token.length);
  },
  // Minute
  m: function m(date, token) {
    return addLeadingZeros(date.getUTCMinutes(), token.length);
  },
  // Second
  s: function s(date, token) {
    return addLeadingZeros(date.getUTCSeconds(), token.length);
  },
  // Fraction of second
  S: function S(date, token) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, token.length);
  }
};
var lightFormatters_default = formatters;

// node_modules/date-fns/esm/_lib/format/formatters/index.js
var dayPeriodEnum = {
  am: "am",
  pm: "pm",
  midnight: "midnight",
  noon: "noon",
  morning: "morning",
  afternoon: "afternoon",
  evening: "evening",
  night: "night"
};
var formatters2 = {
  // Era
  G: function G(date, token, localize2) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;
    switch (token) {
      case "G":
      case "GG":
      case "GGG":
        return localize2.era(era, {
          width: "abbreviated"
        });
      case "GGGGG":
        return localize2.era(era, {
          width: "narrow"
        });
      case "GGGG":
      default:
        return localize2.era(era, {
          width: "wide"
        });
    }
  },
  // Year
  y: function y2(date, token, localize2) {
    if (token === "yo") {
      var signedYear = date.getUTCFullYear();
      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize2.ordinalNumber(year, {
        unit: "year"
      });
    }
    return lightFormatters_default.y(date, token);
  },
  // Local week-numbering year
  Y: function Y(date, token, localize2, options) {
    var signedWeekYear = getUTCWeekYear(date, options);
    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
    if (token === "YY") {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    }
    if (token === "Yo") {
      return localize2.ordinalNumber(weekYear, {
        unit: "year"
      });
    }
    return addLeadingZeros(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function R(date, token) {
    var isoWeekYear = getUTCISOWeekYear(date);
    return addLeadingZeros(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function u(date, token) {
    var year = date.getUTCFullYear();
    return addLeadingZeros(year, token.length);
  },
  // Quarter
  Q: function Q(date, token, localize2) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "Q":
        return String(quarter);
      case "QQ":
        return addLeadingZeros(quarter, 2);
      case "Qo":
        return localize2.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "QQQ":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "formatting"
        });
      case "QQQQQ":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "formatting"
        });
      case "QQQQ":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone quarter
  q: function q(date, token, localize2) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "q":
        return String(quarter);
      case "qq":
        return addLeadingZeros(quarter, 2);
      case "qo":
        return localize2.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "qqq":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "standalone"
        });
      case "qqqqq":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "standalone"
        });
      case "qqqq":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // Month
  M: function M2(date, token, localize2) {
    var month = date.getUTCMonth();
    switch (token) {
      case "M":
      case "MM":
        return lightFormatters_default.M(date, token);
      case "Mo":
        return localize2.ordinalNumber(month + 1, {
          unit: "month"
        });
      case "MMM":
        return localize2.month(month, {
          width: "abbreviated",
          context: "formatting"
        });
      case "MMMMM":
        return localize2.month(month, {
          width: "narrow",
          context: "formatting"
        });
      case "MMMM":
      default:
        return localize2.month(month, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone month
  L: function L(date, token, localize2) {
    var month = date.getUTCMonth();
    switch (token) {
      case "L":
        return String(month + 1);
      case "LL":
        return addLeadingZeros(month + 1, 2);
      case "Lo":
        return localize2.ordinalNumber(month + 1, {
          unit: "month"
        });
      case "LLL":
        return localize2.month(month, {
          width: "abbreviated",
          context: "standalone"
        });
      case "LLLLL":
        return localize2.month(month, {
          width: "narrow",
          context: "standalone"
        });
      case "LLLL":
      default:
        return localize2.month(month, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // Local week of year
  w: function w(date, token, localize2, options) {
    var week = getUTCWeek(date, options);
    if (token === "wo") {
      return localize2.ordinalNumber(week, {
        unit: "week"
      });
    }
    return addLeadingZeros(week, token.length);
  },
  // ISO week of year
  I: function I(date, token, localize2) {
    var isoWeek = getUTCISOWeek(date);
    if (token === "Io") {
      return localize2.ordinalNumber(isoWeek, {
        unit: "week"
      });
    }
    return addLeadingZeros(isoWeek, token.length);
  },
  // Day of the month
  d: function d2(date, token, localize2) {
    if (token === "do") {
      return localize2.ordinalNumber(date.getUTCDate(), {
        unit: "date"
      });
    }
    return lightFormatters_default.d(date, token);
  },
  // Day of year
  D: function D(date, token, localize2) {
    var dayOfYear = getUTCDayOfYear(date);
    if (token === "Do") {
      return localize2.ordinalNumber(dayOfYear, {
        unit: "dayOfYear"
      });
    }
    return addLeadingZeros(dayOfYear, token.length);
  },
  // Day of week
  E: function E(date, token, localize2) {
    var dayOfWeek = date.getUTCDay();
    switch (token) {
      case "E":
      case "EE":
      case "EEE":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "EEEEE":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "EEEEEE":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "EEEE":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Local day of week
  e: function e(date, token, localize2, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "e":
        return String(localDayOfWeek);
      case "ee":
        return addLeadingZeros(localDayOfWeek, 2);
      case "eo":
        return localize2.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "eee":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "eeeee":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "eeeeee":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "eeee":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone local day of week
  c: function c(date, token, localize2, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "c":
        return String(localDayOfWeek);
      case "cc":
        return addLeadingZeros(localDayOfWeek, token.length);
      case "co":
        return localize2.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "ccc":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "standalone"
        });
      case "ccccc":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "standalone"
        });
      case "cccccc":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "standalone"
        });
      case "cccc":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // ISO day of week
  i: function i(date, token, localize2) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      case "i":
        return String(isoDayOfWeek);
      case "ii":
        return addLeadingZeros(isoDayOfWeek, token.length);
      case "io":
        return localize2.ordinalNumber(isoDayOfWeek, {
          unit: "day"
        });
      case "iii":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "iiiii":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "iiiiii":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "iiii":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // AM or PM
  a: function a2(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "aaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "aaaaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "aaaa":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // AM, PM, midnight, noon
  b: function b(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    }
    switch (token) {
      case "b":
      case "bb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "bbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "bbbbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "bbbb":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function B(date, token, localize2) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }
    switch (token) {
      case "B":
      case "BB":
      case "BBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "BBBBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "BBBB":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Hour [1-12]
  h: function h2(date, token, localize2) {
    if (token === "ho") {
      var hours = date.getUTCHours() % 12;
      if (hours === 0) hours = 12;
      return localize2.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return lightFormatters_default.h(date, token);
  },
  // Hour [0-23]
  H: function H2(date, token, localize2) {
    if (token === "Ho") {
      return localize2.ordinalNumber(date.getUTCHours(), {
        unit: "hour"
      });
    }
    return lightFormatters_default.H(date, token);
  },
  // Hour [0-11]
  K: function K(date, token, localize2) {
    var hours = date.getUTCHours() % 12;
    if (token === "Ko") {
      return localize2.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Hour [1-24]
  k: function k(date, token, localize2) {
    var hours = date.getUTCHours();
    if (hours === 0) hours = 24;
    if (token === "ko") {
      return localize2.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Minute
  m: function m2(date, token, localize2) {
    if (token === "mo") {
      return localize2.ordinalNumber(date.getUTCMinutes(), {
        unit: "minute"
      });
    }
    return lightFormatters_default.m(date, token);
  },
  // Second
  s: function s2(date, token, localize2) {
    if (token === "so") {
      return localize2.ordinalNumber(date.getUTCSeconds(), {
        unit: "second"
      });
    }
    return lightFormatters_default.s(date, token);
  },
  // Fraction of second
  S: function S2(date, token) {
    return lightFormatters_default.S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function X(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    if (timezoneOffset === 0) {
      return "Z";
    }
    switch (token) {
      case "X":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "XXXX":
      case "XX":
        return formatTimezone(timezoneOffset);
      case "XXXXX":
      case "XXX":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function x(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "x":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "xxxx":
      case "xx":
        return formatTimezone(timezoneOffset);
      case "xxxxx":
      case "xxx":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (GMT)
  O: function O(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "O":
      case "OO":
      case "OOO":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "OOOO":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (specific non-location)
  z: function z(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "z":
      case "zz":
      case "zzz":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "zzzz":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  // Seconds timestamp
  t: function t(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1e3);
    return addLeadingZeros(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function T(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length);
  }
};
function formatTimezoneShort(offset2, dirtyDelimiter) {
  var sign = offset2 > 0 ? "-" : "+";
  var absOffset = Math.abs(offset2);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  var delimiter = dirtyDelimiter || "";
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset2, dirtyDelimiter) {
  if (offset2 % 60 === 0) {
    var sign = offset2 > 0 ? "-" : "+";
    return sign + addLeadingZeros(Math.abs(offset2) / 60, 2);
  }
  return formatTimezone(offset2, dirtyDelimiter);
}
function formatTimezone(offset2, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || "";
  var sign = offset2 > 0 ? "-" : "+";
  var absOffset = Math.abs(offset2);
  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}
var formatters_default = formatters2;

// node_modules/date-fns/esm/_lib/format/longFormatters/index.js
var dateLongFormatter = function dateLongFormatter2(pattern, formatLong2) {
  switch (pattern) {
    case "P":
      return formatLong2.date({
        width: "short"
      });
    case "PP":
      return formatLong2.date({
        width: "medium"
      });
    case "PPP":
      return formatLong2.date({
        width: "long"
      });
    case "PPPP":
    default:
      return formatLong2.date({
        width: "full"
      });
  }
};
var timeLongFormatter = function timeLongFormatter2(pattern, formatLong2) {
  switch (pattern) {
    case "p":
      return formatLong2.time({
        width: "short"
      });
    case "pp":
      return formatLong2.time({
        width: "medium"
      });
    case "ppp":
      return formatLong2.time({
        width: "long"
      });
    case "pppp":
    default:
      return formatLong2.time({
        width: "full"
      });
  }
};
var dateTimeLongFormatter = function dateTimeLongFormatter2(pattern, formatLong2) {
  var matchResult = pattern.match(/(P+)(p+)?/) || [];
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];
  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong2);
  }
  var dateTimeFormat;
  switch (datePattern) {
    case "P":
      dateTimeFormat = formatLong2.dateTime({
        width: "short"
      });
      break;
    case "PP":
      dateTimeFormat = formatLong2.dateTime({
        width: "medium"
      });
      break;
    case "PPP":
      dateTimeFormat = formatLong2.dateTime({
        width: "long"
      });
      break;
    case "PPPP":
    default:
      dateTimeFormat = formatLong2.dateTime({
        width: "full"
      });
      break;
  }
  return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong2)).replace("{{time}}", timeLongFormatter(timePattern, formatLong2));
};
var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};
var longFormatters_default = longFormatters;

// node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  utcDate.setUTCFullYear(date.getFullYear());
  return date.getTime() - utcDate.getTime();
}

// node_modules/date-fns/esm/_lib/protectedTokens/index.js
var protectedDayOfYearTokens = ["D", "DD"];
var protectedWeekYearTokens = ["YY", "YYYY"];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format2, input) {
  if (token === "YYYY") {
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "YY") {
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "D") {
    throw new RangeError("Use `d` instead of `D` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === "DD") {
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  }
}

// node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "less than a second",
    other: "less than {{count}} seconds"
  },
  xSeconds: {
    one: "1 second",
    other: "{{count}} seconds"
  },
  halfAMinute: "half a minute",
  lessThanXMinutes: {
    one: "less than a minute",
    other: "less than {{count}} minutes"
  },
  xMinutes: {
    one: "1 minute",
    other: "{{count}} minutes"
  },
  aboutXHours: {
    one: "about 1 hour",
    other: "about {{count}} hours"
  },
  xHours: {
    one: "1 hour",
    other: "{{count}} hours"
  },
  xDays: {
    one: "1 day",
    other: "{{count}} days"
  },
  aboutXWeeks: {
    one: "about 1 week",
    other: "about {{count}} weeks"
  },
  xWeeks: {
    one: "1 week",
    other: "{{count}} weeks"
  },
  aboutXMonths: {
    one: "about 1 month",
    other: "about {{count}} months"
  },
  xMonths: {
    one: "1 month",
    other: "{{count}} months"
  },
  aboutXYears: {
    one: "about 1 year",
    other: "about {{count}} years"
  },
  xYears: {
    one: "1 year",
    other: "{{count}} years"
  },
  overXYears: {
    one: "over 1 year",
    other: "over {{count}} years"
  },
  almostXYears: {
    one: "almost 1 year",
    other: "almost {{count}} years"
  }
};
var formatDistance = function formatDistance2(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "in " + result;
    } else {
      return result + " ago";
    }
  }
  return result;
};
var formatDistance_default = formatDistance;

// node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
function buildFormatLongFn(args) {
  return function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format2 = args.formats[width] || args.formats[args.defaultWidth];
    return format2;
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js
var dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy"
};
var timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a"
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}"
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: "full"
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: "full"
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: "full"
  })
};
var formatLong_default = formatLong;

// node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: "P"
};
var formatRelative = function formatRelative2(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
};
var formatRelative_default = formatRelative;

// node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
function buildLocalizeFn(args) {
  return function(dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : "standalone";
    var valuesArray;
    if (context === "formatting" && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index];
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js
var eraValues = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"]
};
var quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
};
var monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
  wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
};
var dayValues = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
};
var dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  }
};
var ordinalNumber = function ordinalNumber2(dirtyNumber, _options) {
  var number = Number(dirtyNumber);
  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "st";
      case 2:
        return number + "nd";
      case 3:
        return number + "rd";
    }
  }
  return number + "th";
};
var localize = {
  ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: function argumentCallback(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: "wide"
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide"
  })
};
var localize_default = localize;

// node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
function buildMatchFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
  return void 0;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return void 0;
}

// node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
function buildMatchPatternFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult) return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult) return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/match/index.js
var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback2(index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};
var match_default = match;

// node_modules/date-fns/esm/locale/en-US/index.js
var locale = {
  code: "en-US",
  formatDistance: formatDistance_default,
  formatLong: formatLong_default,
  formatRelative: formatRelative_default,
  localize: localize_default,
  match: match_default,
  options: {
    weekStartsOn: 0,
    firstWeekContainsDate: 1
  }
};
var en_US_default = locale;

// node_modules/date-fns/esm/_lib/defaultLocale/index.js
var defaultLocale_default = en_US_default;

// node_modules/date-fns/esm/format/index.js
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
function format(dirtyDate, dirtyFormatStr, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  requiredArgs(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var defaultOptions2 = getDefaultOptions();
  var locale2 = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions2.locale) !== null && _ref !== void 0 ? _ref : defaultLocale_default;
  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions2.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions2.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions2.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  if (!locale2.localize) {
    throw new RangeError("locale must contain localize property");
  }
  if (!locale2.formatLong) {
    throw new RangeError("locale must contain formatLong property");
  }
  var originalDate = toDate(dirtyDate);
  if (!isValid(originalDate)) {
    throw new RangeError("Invalid time value");
  }
  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
  var utcDate = subMilliseconds(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale: locale2,
    _originalDate: originalDate
  };
  var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
    var firstCharacter = substring[0];
    if (firstCharacter === "p" || firstCharacter === "P") {
      var longFormatter = longFormatters_default[firstCharacter];
      return longFormatter(substring, locale2.formatLong);
    }
    return substring;
  }).join("").match(formattingTokensRegExp).map(function(substring) {
    if (substring === "''") {
      return "'";
    }
    var firstCharacter = substring[0];
    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }
    var formatter = formatters_default[firstCharacter];
    if (formatter) {
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      return formatter(utcDate, substring, locale2.localize, formatterOptions);
    }
    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
    }
    return substring;
  }).join("");
  return result;
}
function cleanEscapedString(input) {
  var matched = input.match(escapedStringRegExp);
  if (!matched) {
    return input;
  }
  return matched[1].replace(doubleQuoteRegExp, "'");
}

// node_modules/date-fns/esm/addMinutes/index.js
var MILLISECONDS_IN_MINUTE = 6e4;
function addMinutes(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);
}

// node_modules/date-fns/esm/addHours/index.js
var MILLISECONDS_IN_HOUR = 36e5;
function addHours(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);
}

// node_modules/date-fns/esm/addDays/index.js
function addDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return /* @__PURE__ */ new Date(NaN);
  }
  if (!amount) {
    return date;
  }
  date.setDate(date.getDate() + amount);
  return date;
}

// node_modules/date-fns/esm/addWeeks/index.js
function addWeeks(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  var days = amount * 7;
  return addDays(dirtyDate, days);
}

// node_modules/date-fns/esm/addMonths/index.js
function addMonths(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return /* @__PURE__ */ new Date(NaN);
  }
  if (!amount) {
    return date;
  }
  var dayOfMonth = date.getDate();
  var endOfDesiredMonth = new Date(date.getTime());
  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
  var daysInMonth = endOfDesiredMonth.getDate();
  if (dayOfMonth >= daysInMonth) {
    return endOfDesiredMonth;
  } else {
    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
    return date;
  }
}

// node_modules/date-fns/esm/addYears/index.js
function addYears(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMonths(dirtyDate, amount * 12);
}

// node_modules/date-fns/esm/subDays/index.js
function subDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addDays(dirtyDate, -amount);
}

// node_modules/date-fns/esm/subWeeks/index.js
function subWeeks(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addWeeks(dirtyDate, -amount);
}

// node_modules/date-fns/esm/subMonths/index.js
function subMonths(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMonths(dirtyDate, -amount);
}

// node_modules/date-fns/esm/subYears/index.js
function subYears(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addYears(dirtyDate, -amount);
}

// node_modules/date-fns/esm/getSeconds/index.js
function getSeconds(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var seconds = date.getSeconds();
  return seconds;
}

// node_modules/date-fns/esm/getMinutes/index.js
function getMinutes(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var minutes = date.getMinutes();
  return minutes;
}

// node_modules/date-fns/esm/getHours/index.js
function getHours(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var hours = date.getHours();
  return hours;
}

// node_modules/date-fns/esm/getDay/index.js
function getDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var day = date.getDay();
  return day;
}

// node_modules/date-fns/esm/getDate/index.js
function getDate(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var dayOfMonth = date.getDate();
  return dayOfMonth;
}

// node_modules/date-fns/esm/startOfWeek/index.js
function startOfWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions2 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate(dirtyDate);
  var day = date.getDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setDate(date.getDate() - diff);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/getWeekYear/index.js
function getWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  var defaultOptions2 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var firstWeekOfNextYear = /* @__PURE__ */ new Date(0);
  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setHours(0, 0, 0, 0);
  var startOfNextYear = startOfWeek(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = /* @__PURE__ */ new Date(0);
  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setHours(0, 0, 0, 0);
  var startOfThisYear = startOfWeek(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/startOfWeekYear/index.js
function startOfWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions2 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = getWeekYear(dirtyDate, options);
  var firstWeek = /* @__PURE__ */ new Date(0);
  firstWeek.setFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setHours(0, 0, 0, 0);
  var date = startOfWeek(firstWeek, options);
  return date;
}

// node_modules/date-fns/esm/getWeek/index.js
var MILLISECONDS_IN_WEEK3 = 6048e5;
function getWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK3) + 1;
}

// node_modules/date-fns/esm/getMonth/index.js
function getMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var month = date.getMonth();
  return month;
}

// node_modules/date-fns/esm/getQuarter/index.js
function getQuarter(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var quarter = Math.floor(date.getMonth() / 3) + 1;
  return quarter;
}

// node_modules/date-fns/esm/getYear/index.js
function getYear(dirtyDate) {
  requiredArgs(1, arguments);
  return toDate(dirtyDate).getFullYear();
}

// node_modules/date-fns/esm/getTime/index.js
function getTime(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  return timestamp;
}

// node_modules/date-fns/esm/setSeconds/index.js
function setSeconds(dirtyDate, dirtySeconds) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var seconds = toInteger(dirtySeconds);
  date.setSeconds(seconds);
  return date;
}

// node_modules/date-fns/esm/setMinutes/index.js
function setMinutes(dirtyDate, dirtyMinutes) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var minutes = toInteger(dirtyMinutes);
  date.setMinutes(minutes);
  return date;
}

// node_modules/date-fns/esm/setHours/index.js
function setHours(dirtyDate, dirtyHours) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var hours = toInteger(dirtyHours);
  date.setHours(hours);
  return date;
}

// node_modules/date-fns/esm/getDaysInMonth/index.js
function getDaysInMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  var monthIndex = date.getMonth();
  var lastDayOfMonth = /* @__PURE__ */ new Date(0);
  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
  lastDayOfMonth.setHours(0, 0, 0, 0);
  return lastDayOfMonth.getDate();
}

// node_modules/date-fns/esm/setMonth/index.js
function setMonth(dirtyDate, dirtyMonth) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var month = toInteger(dirtyMonth);
  var year = date.getFullYear();
  var day = date.getDate();
  var dateWithDesiredMonth = /* @__PURE__ */ new Date(0);
  dateWithDesiredMonth.setFullYear(year, month, 15);
  dateWithDesiredMonth.setHours(0, 0, 0, 0);
  var daysInMonth = getDaysInMonth(dateWithDesiredMonth);
  date.setMonth(month, Math.min(day, daysInMonth));
  return date;
}

// node_modules/date-fns/esm/setQuarter/index.js
function setQuarter(dirtyDate, dirtyQuarter) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var quarter = toInteger(dirtyQuarter);
  var oldQuarter = Math.floor(date.getMonth() / 3) + 1;
  var diff = quarter - oldQuarter;
  return setMonth(date, date.getMonth() + diff * 3);
}

// node_modules/date-fns/esm/setYear/index.js
function setYear(dirtyDate, dirtyYear) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var year = toInteger(dirtyYear);
  if (isNaN(date.getTime())) {
    return /* @__PURE__ */ new Date(NaN);
  }
  date.setFullYear(year);
  return date;
}

// node_modules/date-fns/esm/min/index.js
function min(dirtyDatesArray) {
  requiredArgs(1, arguments);
  var datesArray;
  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === "function") {
    datesArray = dirtyDatesArray;
  } else if (_typeof(dirtyDatesArray) === "object" && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    return /* @__PURE__ */ new Date(NaN);
  }
  var result;
  datesArray.forEach(function(dirtyDate) {
    var currentDate = toDate(dirtyDate);
    if (result === void 0 || result > currentDate || isNaN(currentDate.getDate())) {
      result = currentDate;
    }
  });
  return result || /* @__PURE__ */ new Date(NaN);
}

// node_modules/date-fns/esm/max/index.js
function max(dirtyDatesArray) {
  requiredArgs(1, arguments);
  var datesArray;
  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === "function") {
    datesArray = dirtyDatesArray;
  } else if (_typeof(dirtyDatesArray) === "object" && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    return /* @__PURE__ */ new Date(NaN);
  }
  var result;
  datesArray.forEach(function(dirtyDate) {
    var currentDate = toDate(dirtyDate);
    if (result === void 0 || result < currentDate || isNaN(Number(currentDate))) {
      result = currentDate;
    }
  });
  return result || /* @__PURE__ */ new Date(NaN);
}

// node_modules/date-fns/esm/startOfDay/index.js
function startOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/differenceInCalendarDays/index.js
var MILLISECONDS_IN_DAY2 = 864e5;
function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var startOfDayLeft = startOfDay(dirtyDateLeft);
  var startOfDayRight = startOfDay(dirtyDateRight);
  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);
  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight);
  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY2);
}

// node_modules/date-fns/esm/differenceInCalendarMonths/index.js
function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
  return yearDiff * 12 + monthDiff;
}

// node_modules/date-fns/esm/differenceInCalendarYears/index.js
function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() - dateRight.getFullYear();
}

// node_modules/date-fns/esm/startOfMonth/index.js
function startOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/startOfQuarter/index.js
function startOfQuarter(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var currentMonth = date.getMonth();
  var month = currentMonth - currentMonth % 3;
  date.setMonth(month, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/startOfYear/index.js
function startOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var cleanDate = toDate(dirtyDate);
  var date = /* @__PURE__ */ new Date(0);
  date.setFullYear(cleanDate.getFullYear(), 0, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}

// node_modules/date-fns/esm/endOfDay/index.js
function endOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  date.setHours(23, 59, 59, 999);
  return date;
}

// node_modules/date-fns/esm/isEqual/index.js
function isEqual(dirtyLeftDate, dirtyRightDate) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyLeftDate);
  var dateRight = toDate(dirtyRightDate);
  return dateLeft.getTime() === dateRight.getTime();
}

// node_modules/date-fns/esm/isSameDay/index.js
function isSameDay(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);
  var dateRightStartOfDay = startOfDay(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}

// node_modules/date-fns/esm/isSameMonth/index.js
function isSameMonth(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
}

// node_modules/date-fns/esm/isSameYear/index.js
function isSameYear(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear();
}

// node_modules/date-fns/esm/isSameQuarter/index.js
function isSameQuarter(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft);
  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight);
  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();
}

// node_modules/date-fns/esm/isAfter/index.js
function isAfter(dirtyDate, dirtyDateToCompare) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var dateToCompare = toDate(dirtyDateToCompare);
  return date.getTime() > dateToCompare.getTime();
}

// node_modules/date-fns/esm/isBefore/index.js
function isBefore(dirtyDate, dirtyDateToCompare) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var dateToCompare = toDate(dirtyDateToCompare);
  return date.getTime() < dateToCompare.getTime();
}

// node_modules/date-fns/esm/isWithinInterval/index.js
function isWithinInterval(dirtyDate, interval) {
  requiredArgs(2, arguments);
  var time = toDate(dirtyDate).getTime();
  var startTime = toDate(interval.start).getTime();
  var endTime = toDate(interval.end).getTime();
  if (!(startTime <= endTime)) {
    throw new RangeError("Invalid interval");
  }
  return time >= startTime && time <= endTime;
}

// node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(r, a3) {
  (null == a3 || a3 > r.length) && (a3 = r.length);
  for (var e3 = 0, n = Array(a3); e3 < a3; e3++) n[e3] = r[e3];
  return n;
}

// node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
function _unsupportedIterableToArray(r, a3) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a3);
    var t3 = {}.toString.call(r).slice(8, -1);
    return "Object" === t3 && r.constructor && (t3 = r.constructor.name), "Map" === t3 || "Set" === t3 ? Array.from(r) : "Arguments" === t3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t3) ? _arrayLikeToArray(r, a3) : void 0;
  }
}

// node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js
function _createForOfIteratorHelper(r, e3) {
  var t3 = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t3) {
    if (Array.isArray(r) || (t3 = _unsupportedIterableToArray(r)) || e3 && r && "number" == typeof r.length) {
      t3 && (r = t3);
      var _n = 0, F = function F2() {
      };
      return {
        s: F,
        n: function n() {
          return _n >= r.length ? {
            done: true
          } : {
            done: false,
            value: r[_n++]
          };
        },
        e: function e4(r2) {
          throw r2;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a3 = true, u2 = false;
  return {
    s: function s3() {
      t3 = t3.call(r);
    },
    n: function n() {
      var r2 = t3.next();
      return a3 = r2.done, r2;
    },
    e: function e4(r2) {
      u2 = true, o = r2;
    },
    f: function f() {
      try {
        a3 || null == t3["return"] || t3["return"]();
      } finally {
        if (u2) throw o;
      }
    }
  };
}

// node_modules/date-fns/esm/_lib/assign/index.js
function assign(target, object) {
  if (target == null) {
    throw new TypeError("assign requires that input parameter not be null or undefined");
  }
  for (var property in object) {
    if (Object.prototype.hasOwnProperty.call(object, property)) {
      ;
      target[property] = object[property];
    }
  }
  return target;
}

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(e3) {
  if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e3;
}

// node_modules/@babel/runtime/helpers/esm/inherits.js
function _inherits(t3, e3) {
  if ("function" != typeof e3 && null !== e3) throw new TypeError("Super expression must either be null or a function");
  t3.prototype = Object.create(e3 && e3.prototype, {
    constructor: {
      value: t3,
      writable: true,
      configurable: true
    }
  }), Object.defineProperty(t3, "prototype", {
    writable: false
  }), e3 && _setPrototypeOf(t3, e3);
}

// node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(t3) {
  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t4) {
    return t4.__proto__ || Object.getPrototypeOf(t4);
  }, _getPrototypeOf(t3);
}

// node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  try {
    var t3 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t4) {
  }
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
    return !!t3;
  })();
}

// node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js
function _possibleConstructorReturn(t3, e3) {
  if (e3 && ("object" == _typeof(e3) || "function" == typeof e3)) return e3;
  if (void 0 !== e3) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized(t3);
}

// node_modules/@babel/runtime/helpers/esm/createSuper.js
function _createSuper(t3) {
  var r = _isNativeReflectConstruct();
  return function() {
    var e3, o = _getPrototypeOf(t3);
    if (r) {
      var s3 = _getPrototypeOf(this).constructor;
      e3 = Reflect.construct(o, arguments, s3);
    } else e3 = o.apply(this, arguments);
    return _possibleConstructorReturn(this, e3);
  };
}

// node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(a3, n) {
  if (!(a3 instanceof n)) throw new TypeError("Cannot call a class as a function");
}

// node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(e3, r) {
  for (var t3 = 0; t3 < r.length; t3++) {
    var o = r[t3];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, toPropertyKey(o.key), o);
  }
}
function _createClass(e3, r, t3) {
  return r && _defineProperties(e3.prototype, r), t3 && _defineProperties(e3, t3), Object.defineProperty(e3, "prototype", {
    writable: false
  }), e3;
}

// node_modules/date-fns/esm/parse/_lib/Setter.js
var TIMEZONE_UNIT_PRIORITY = 10;
var Setter = function() {
  function Setter2() {
    _classCallCheck(this, Setter2);
    _defineProperty(this, "priority", void 0);
    _defineProperty(this, "subPriority", 0);
  }
  _createClass(Setter2, [{
    key: "validate",
    value: function validate(_utcDate, _options) {
      return true;
    }
  }]);
  return Setter2;
}();
var ValueSetter = function(_Setter) {
  _inherits(ValueSetter2, _Setter);
  var _super = _createSuper(ValueSetter2);
  function ValueSetter2(value, validateValue, setValue, priority, subPriority) {
    var _this;
    _classCallCheck(this, ValueSetter2);
    _this = _super.call(this);
    _this.value = value;
    _this.validateValue = validateValue;
    _this.setValue = setValue;
    _this.priority = priority;
    if (subPriority) {
      _this.subPriority = subPriority;
    }
    return _this;
  }
  _createClass(ValueSetter2, [{
    key: "validate",
    value: function validate(utcDate, options) {
      return this.validateValue(utcDate, this.value, options);
    }
  }, {
    key: "set",
    value: function set(utcDate, flags, options) {
      return this.setValue(utcDate, flags, this.value, options);
    }
  }]);
  return ValueSetter2;
}(Setter);
var DateToSystemTimezoneSetter = function(_Setter2) {
  _inherits(DateToSystemTimezoneSetter2, _Setter2);
  var _super2 = _createSuper(DateToSystemTimezoneSetter2);
  function DateToSystemTimezoneSetter2() {
    var _this2;
    _classCallCheck(this, DateToSystemTimezoneSetter2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this2 = _super2.call.apply(_super2, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this2), "priority", TIMEZONE_UNIT_PRIORITY);
    _defineProperty(_assertThisInitialized(_this2), "subPriority", -1);
    return _this2;
  }
  _createClass(DateToSystemTimezoneSetter2, [{
    key: "set",
    value: function set(date, flags) {
      if (flags.timestampIsSet) {
        return date;
      }
      var convertedDate = /* @__PURE__ */ new Date(0);
      convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
      convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());
      return convertedDate;
    }
  }]);
  return DateToSystemTimezoneSetter2;
}(Setter);

// node_modules/date-fns/esm/parse/_lib/Parser.js
var Parser = function() {
  function Parser2() {
    _classCallCheck(this, Parser2);
    _defineProperty(this, "incompatibleTokens", void 0);
    _defineProperty(this, "priority", void 0);
    _defineProperty(this, "subPriority", void 0);
  }
  _createClass(Parser2, [{
    key: "run",
    value: function run(dateString, token, match2, options) {
      var result = this.parse(dateString, token, match2, options);
      if (!result) {
        return null;
      }
      return {
        setter: new ValueSetter(result.value, this.validate, this.set, this.priority, this.subPriority),
        rest: result.rest
      };
    }
  }, {
    key: "validate",
    value: function validate(_utcDate, _value, _options) {
      return true;
    }
  }]);
  return Parser2;
}();

// node_modules/date-fns/esm/parse/_lib/parsers/EraParser.js
var EraParser = function(_Parser) {
  _inherits(EraParser2, _Parser);
  var _super = _createSuper(EraParser2);
  function EraParser2() {
    var _this;
    _classCallCheck(this, EraParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 140);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["R", "u", "t", "T"]);
    return _this;
  }
  _createClass(EraParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "G":
        case "GG":
        case "GGG":
          return match2.era(dateString, {
            width: "abbreviated"
          }) || match2.era(dateString, {
            width: "narrow"
          });
        case "GGGGG":
          return match2.era(dateString, {
            width: "narrow"
          });
        case "GGGG":
        default:
          return match2.era(dateString, {
            width: "wide"
          }) || match2.era(dateString, {
            width: "abbreviated"
          }) || match2.era(dateString, {
            width: "narrow"
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      flags.era = value;
      date.setUTCFullYear(value, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return EraParser2;
}(Parser);

// node_modules/date-fns/esm/constants/index.js
var daysInYear = 365.2425;
var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;
var millisecondsInMinute = 6e4;
var millisecondsInHour = 36e5;
var millisecondsInSecond = 1e3;
var minTime = -maxTime;
var secondsInHour = 3600;
var secondsInDay = secondsInHour * 24;
var secondsInWeek = secondsInDay * 7;
var secondsInYear = secondsInDay * daysInYear;
var secondsInMonth = secondsInYear / 12;
var secondsInQuarter = secondsInMonth * 3;

// node_modules/date-fns/esm/parse/_lib/constants.js
var numericPatterns = {
  month: /^(1[0-2]|0?\d)/,
  // 0 to 12
  date: /^(3[0-1]|[0-2]?\d)/,
  // 0 to 31
  dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
  // 0 to 366
  week: /^(5[0-3]|[0-4]?\d)/,
  // 0 to 53
  hour23h: /^(2[0-3]|[0-1]?\d)/,
  // 0 to 23
  hour24h: /^(2[0-4]|[0-1]?\d)/,
  // 0 to 24
  hour11h: /^(1[0-1]|0?\d)/,
  // 0 to 11
  hour12h: /^(1[0-2]|0?\d)/,
  // 0 to 12
  minute: /^[0-5]?\d/,
  // 0 to 59
  second: /^[0-5]?\d/,
  // 0 to 59
  singleDigit: /^\d/,
  // 0 to 9
  twoDigits: /^\d{1,2}/,
  // 0 to 99
  threeDigits: /^\d{1,3}/,
  // 0 to 999
  fourDigits: /^\d{1,4}/,
  // 0 to 9999
  anyDigitsSigned: /^-?\d+/,
  singleDigitSigned: /^-?\d/,
  // 0 to 9, -0 to -9
  twoDigitsSigned: /^-?\d{1,2}/,
  // 0 to 99, -0 to -99
  threeDigitsSigned: /^-?\d{1,3}/,
  // 0 to 999, -0 to -999
  fourDigitsSigned: /^-?\d{1,4}/
  // 0 to 9999, -0 to -9999
};
var timezonePatterns = {
  basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
  basic: /^([+-])(\d{2})(\d{2})|Z/,
  basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
  extended: /^([+-])(\d{2}):(\d{2})|Z/,
  extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
};

// node_modules/date-fns/esm/parse/_lib/utils.js
function mapValue(parseFnResult, mapFn) {
  if (!parseFnResult) {
    return parseFnResult;
  }
  return {
    value: mapFn(parseFnResult.value),
    rest: parseFnResult.rest
  };
}
function parseNumericPattern(pattern, dateString) {
  var matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  }
  return {
    value: parseInt(matchResult[0], 10),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseTimezonePattern(pattern, dateString) {
  var matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  }
  if (matchResult[0] === "Z") {
    return {
      value: 0,
      rest: dateString.slice(1)
    };
  }
  var sign = matchResult[1] === "+" ? 1 : -1;
  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
  return {
    value: sign * (hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * millisecondsInSecond),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseAnyDigitsSigned(dateString) {
  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);
}
function parseNDigits(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigit, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigits, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigits, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigits, dateString);
    default:
      return parseNumericPattern(new RegExp("^\\d{1," + n + "}"), dateString);
  }
}
function parseNDigitsSigned(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);
    default:
      return parseNumericPattern(new RegExp("^-?\\d{1," + n + "}"), dateString);
  }
}
function dayPeriodEnumToHours(dayPeriod) {
  switch (dayPeriod) {
    case "morning":
      return 4;
    case "evening":
      return 17;
    case "pm":
    case "noon":
    case "afternoon":
      return 12;
    case "am":
    case "midnight":
    case "night":
    default:
      return 0;
  }
}
function normalizeTwoDigitYear(twoDigitYear, currentYear) {
  var isCommonEra = currentYear > 0;
  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
  var result;
  if (absCurrentYear <= 50) {
    result = twoDigitYear || 100;
  } else {
    var rangeEnd = absCurrentYear + 50;
    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
  }
  return isCommonEra ? result : 1 - result;
}
function isLeapYearIndex(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}

// node_modules/date-fns/esm/parse/_lib/parsers/YearParser.js
var YearParser = function(_Parser) {
  _inherits(YearParser2, _Parser);
  var _super = _createSuper(YearParser2);
  function YearParser2() {
    var _this;
    _classCallCheck(this, YearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 130);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "u", "w", "I", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(YearParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      var valueCallback3 = function valueCallback4(year) {
        return {
          year,
          isTwoDigitYear: token === "yy"
        };
      };
      switch (token) {
        case "y":
          return mapValue(parseNDigits(4, dateString), valueCallback3);
        case "yo":
          return mapValue(match2.ordinalNumber(dateString, {
            unit: "year"
          }), valueCallback3);
        default:
          return mapValue(parseNDigits(token.length, dateString), valueCallback3);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value.isTwoDigitYear || value.year > 0;
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      var currentYear = date.getUTCFullYear();
      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
        date.setUTCHours(0, 0, 0, 0);
        return date;
      }
      var year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return YearParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekYearParser.js
var LocalWeekYearParser = function(_Parser) {
  _inherits(LocalWeekYearParser2, _Parser);
  var _super = _createSuper(LocalWeekYearParser2);
  function LocalWeekYearParser2() {
    var _this;
    _classCallCheck(this, LocalWeekYearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 130);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "Q", "q", "M", "L", "I", "d", "D", "i", "t", "T"]);
    return _this;
  }
  _createClass(LocalWeekYearParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      var valueCallback3 = function valueCallback4(year) {
        return {
          year,
          isTwoDigitYear: token === "YY"
        };
      };
      switch (token) {
        case "Y":
          return mapValue(parseNDigits(4, dateString), valueCallback3);
        case "Yo":
          return mapValue(match2.ordinalNumber(dateString, {
            unit: "year"
          }), valueCallback3);
        default:
          return mapValue(parseNDigits(token.length, dateString), valueCallback3);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value.isTwoDigitYear || value.year > 0;
    }
  }, {
    key: "set",
    value: function set(date, flags, value, options) {
      var currentYear = getUTCWeekYear(date, options);
      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);
        date.setUTCHours(0, 0, 0, 0);
        return startOfUTCWeek(date, options);
      }
      var year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);
      date.setUTCHours(0, 0, 0, 0);
      return startOfUTCWeek(date, options);
    }
  }]);
  return LocalWeekYearParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekYearParser.js
var ISOWeekYearParser = function(_Parser) {
  _inherits(ISOWeekYearParser2, _Parser);
  var _super = _createSuper(ISOWeekYearParser2);
  function ISOWeekYearParser2() {
    var _this;
    _classCallCheck(this, ISOWeekYearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 130);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["G", "y", "Y", "u", "Q", "q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(ISOWeekYearParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      if (token === "R") {
        return parseNDigitsSigned(4, dateString);
      }
      return parseNDigitsSigned(token.length, dateString);
    }
  }, {
    key: "set",
    value: function set(_date, _flags, value) {
      var firstWeekOfYear = /* @__PURE__ */ new Date(0);
      firstWeekOfYear.setUTCFullYear(value, 0, 4);
      firstWeekOfYear.setUTCHours(0, 0, 0, 0);
      return startOfUTCISOWeek(firstWeekOfYear);
    }
  }]);
  return ISOWeekYearParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/ExtendedYearParser.js
var ExtendedYearParser = function(_Parser) {
  _inherits(ExtendedYearParser2, _Parser);
  var _super = _createSuper(ExtendedYearParser2);
  function ExtendedYearParser2() {
    var _this;
    _classCallCheck(this, ExtendedYearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 130);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["G", "y", "Y", "R", "w", "I", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(ExtendedYearParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      if (token === "u") {
        return parseNDigitsSigned(4, dateString);
      }
      return parseNDigitsSigned(token.length, dateString);
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCFullYear(value, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return ExtendedYearParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/QuarterParser.js
var QuarterParser = function(_Parser) {
  _inherits(QuarterParser2, _Parser);
  var _super = _createSuper(QuarterParser2);
  function QuarterParser2() {
    var _this;
    _classCallCheck(this, QuarterParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 120);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(QuarterParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "Q":
        case "QQ":
          return parseNDigits(token.length, dateString);
        case "Qo":
          return match2.ordinalNumber(dateString, {
            unit: "quarter"
          });
        case "QQQ":
          return match2.quarter(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.quarter(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "QQQQQ":
          return match2.quarter(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "QQQQ":
        default:
          return match2.quarter(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.quarter(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.quarter(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 4;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return QuarterParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/StandAloneQuarterParser.js
var StandAloneQuarterParser = function(_Parser) {
  _inherits(StandAloneQuarterParser2, _Parser);
  var _super = _createSuper(StandAloneQuarterParser2);
  function StandAloneQuarterParser2() {
    var _this;
    _classCallCheck(this, StandAloneQuarterParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 120);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "Q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(StandAloneQuarterParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "q":
        case "qq":
          return parseNDigits(token.length, dateString);
        case "qo":
          return match2.ordinalNumber(dateString, {
            unit: "quarter"
          });
        case "qqq":
          return match2.quarter(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match2.quarter(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "qqqqq":
          return match2.quarter(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "qqqq":
        default:
          return match2.quarter(dateString, {
            width: "wide",
            context: "standalone"
          }) || match2.quarter(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match2.quarter(dateString, {
            width: "narrow",
            context: "standalone"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 4;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneQuarterParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/MonthParser.js
var MonthParser = function(_Parser) {
  _inherits(MonthParser2, _Parser);
  var _super = _createSuper(MonthParser2);
  function MonthParser2() {
    var _this;
    _classCallCheck(this, MonthParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "L", "w", "I", "D", "i", "e", "c", "t", "T"]);
    _defineProperty(_assertThisInitialized(_this), "priority", 110);
    return _this;
  }
  _createClass(MonthParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      var valueCallback3 = function valueCallback4(value) {
        return value - 1;
      };
      switch (token) {
        case "M":
          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback3);
        case "MM":
          return mapValue(parseNDigits(2, dateString), valueCallback3);
        case "Mo":
          return mapValue(match2.ordinalNumber(dateString, {
            unit: "month"
          }), valueCallback3);
        case "MMM":
          return match2.month(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.month(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "MMMMM":
          return match2.month(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "MMMM":
        default:
          return match2.month(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.month(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.month(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return MonthParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/StandAloneMonthParser.js
var StandAloneMonthParser = function(_Parser) {
  _inherits(StandAloneMonthParser2, _Parser);
  var _super = _createSuper(StandAloneMonthParser2);
  function StandAloneMonthParser2() {
    var _this;
    _classCallCheck(this, StandAloneMonthParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 110);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "M", "w", "I", "D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(StandAloneMonthParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      var valueCallback3 = function valueCallback4(value) {
        return value - 1;
      };
      switch (token) {
        case "L":
          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback3);
        case "LL":
          return mapValue(parseNDigits(2, dateString), valueCallback3);
        case "Lo":
          return mapValue(match2.ordinalNumber(dateString, {
            unit: "month"
          }), valueCallback3);
        case "LLL":
          return match2.month(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match2.month(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "LLLLL":
          return match2.month(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "LLLL":
        default:
          return match2.month(dateString, {
            width: "wide",
            context: "standalone"
          }) || match2.month(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match2.month(dateString, {
            width: "narrow",
            context: "standalone"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneMonthParser2;
}(Parser);

// node_modules/date-fns/esm/_lib/setUTCWeek/index.js
function setUTCWeek(dirtyDate, dirtyWeek, options) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var week = toInteger(dirtyWeek);
  var diff = getUTCWeek(date, options) - week;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date;
}

// node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekParser.js
var LocalWeekParser = function(_Parser) {
  _inherits(LocalWeekParser2, _Parser);
  var _super = _createSuper(LocalWeekParser2);
  function LocalWeekParser2() {
    var _this;
    _classCallCheck(this, LocalWeekParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 100);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "i", "t", "T"]);
    return _this;
  }
  _createClass(LocalWeekParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "w":
          return parseNumericPattern(numericPatterns.week, dateString);
        case "wo":
          return match2.ordinalNumber(dateString, {
            unit: "week"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 53;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      return startOfUTCWeek(setUTCWeek(date, value, options), options);
    }
  }]);
  return LocalWeekParser2;
}(Parser);

// node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js
function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var isoWeek = toInteger(dirtyISOWeek);
  var diff = getUTCISOWeek(date) - isoWeek;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date;
}

// node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekParser.js
var ISOWeekParser = function(_Parser) {
  _inherits(ISOWeekParser2, _Parser);
  var _super = _createSuper(ISOWeekParser2);
  function ISOWeekParser2() {
    var _this;
    _classCallCheck(this, ISOWeekParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 100);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(ISOWeekParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "I":
          return parseNumericPattern(numericPatterns.week, dateString);
        case "Io":
          return match2.ordinalNumber(dateString, {
            unit: "week"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 53;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      return startOfUTCISOWeek(setUTCISOWeek(date, value));
    }
  }]);
  return ISOWeekParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/DateParser.js
var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var DateParser = function(_Parser) {
  _inherits(DateParser2, _Parser);
  var _super = _createSuper(DateParser2);
  function DateParser2() {
    var _this;
    _classCallCheck(this, DateParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "subPriority", 1);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "w", "I", "D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(DateParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "d":
          return parseNumericPattern(numericPatterns.date, dateString);
        case "do":
          return match2.ordinalNumber(dateString, {
            unit: "date"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(date, value) {
      var year = date.getUTCFullYear();
      var isLeapYear = isLeapYearIndex(year);
      var month = date.getUTCMonth();
      if (isLeapYear) {
        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
      } else {
        return value >= 1 && value <= DAYS_IN_MONTH[month];
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCDate(value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DateParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/DayOfYearParser.js
var DayOfYearParser = function(_Parser) {
  _inherits(DayOfYearParser2, _Parser);
  var _super = _createSuper(DayOfYearParser2);
  function DayOfYearParser2() {
    var _this;
    _classCallCheck(this, DayOfYearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "subpriority", 1);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "M", "L", "w", "I", "d", "E", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(DayOfYearParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "D":
        case "DD":
          return parseNumericPattern(numericPatterns.dayOfYear, dateString);
        case "Do":
          return match2.ordinalNumber(dateString, {
            unit: "date"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(date, value) {
      var year = date.getUTCFullYear();
      var isLeapYear = isLeapYearIndex(year);
      if (isLeapYear) {
        return value >= 1 && value <= 366;
      } else {
        return value >= 1 && value <= 365;
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth(0, value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DayOfYearParser2;
}(Parser);

// node_modules/date-fns/esm/_lib/setUTCDay/index.js
function setUTCDay(dirtyDate, dirtyDay, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(2, arguments);
  var defaultOptions2 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date = toDate(dirtyDate);
  var day = toInteger(dirtyDay);
  var currentDay = date.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}

// node_modules/date-fns/esm/parse/_lib/parsers/DayParser.js
var DayParser = function(_Parser) {
  _inherits(DayParser2, _Parser);
  var _super = _createSuper(DayParser2);
  function DayParser2() {
    var _this;
    _classCallCheck(this, DayParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(DayParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "E":
        case "EE":
        case "EEE":
          return match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "EEEEE":
          return match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "EEEEEE":
          return match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "EEEE":
        default:
          return match2.day(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DayParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/LocalDayParser.js
var LocalDayParser = function(_Parser) {
  _inherits(LocalDayParser2, _Parser);
  var _super = _createSuper(LocalDayParser2);
  function LocalDayParser2() {
    var _this;
    _classCallCheck(this, LocalDayParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "c", "t", "T"]);
    return _this;
  }
  _createClass(LocalDayParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2, options) {
      var valueCallback3 = function valueCallback4(value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };
      switch (token) {
        case "e":
        case "ee":
          return mapValue(parseNDigits(token.length, dateString), valueCallback3);
        case "eo":
          return mapValue(match2.ordinalNumber(dateString, {
            unit: "day"
          }), valueCallback3);
        case "eee":
          return match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "eeeee":
          return match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "eeeeee":
          return match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "eeee":
        default:
          return match2.day(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return LocalDayParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/StandAloneLocalDayParser.js
var StandAloneLocalDayParser = function(_Parser) {
  _inherits(StandAloneLocalDayParser2, _Parser);
  var _super = _createSuper(StandAloneLocalDayParser2);
  function StandAloneLocalDayParser2() {
    var _this;
    _classCallCheck(this, StandAloneLocalDayParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "e", "t", "T"]);
    return _this;
  }
  _createClass(StandAloneLocalDayParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2, options) {
      var valueCallback3 = function valueCallback4(value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };
      switch (token) {
        case "c":
        case "cc":
          return mapValue(parseNDigits(token.length, dateString), valueCallback3);
        case "co":
          return mapValue(match2.ordinalNumber(dateString, {
            unit: "day"
          }), valueCallback3);
        case "ccc":
          return match2.day(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match2.day(dateString, {
            width: "short",
            context: "standalone"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "ccccc":
          return match2.day(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "cccccc":
          return match2.day(dateString, {
            width: "short",
            context: "standalone"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "cccc":
        default:
          return match2.day(dateString, {
            width: "wide",
            context: "standalone"
          }) || match2.day(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match2.day(dateString, {
            width: "short",
            context: "standalone"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "standalone"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneLocalDayParser2;
}(Parser);

// node_modules/date-fns/esm/_lib/setUTCISODay/index.js
function setUTCISODay(dirtyDate, dirtyDay) {
  requiredArgs(2, arguments);
  var day = toInteger(dirtyDay);
  if (day % 7 === 0) {
    day = day - 7;
  }
  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var currentDay = date.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}

// node_modules/date-fns/esm/parse/_lib/parsers/ISODayParser.js
var ISODayParser = function(_Parser) {
  _inherits(ISODayParser2, _Parser);
  var _super = _createSuper(ISODayParser2);
  function ISODayParser2() {
    var _this;
    _classCallCheck(this, ISODayParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "E", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(ISODayParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      var valueCallback3 = function valueCallback4(value) {
        if (value === 0) {
          return 7;
        }
        return value;
      };
      switch (token) {
        case "i":
        case "ii":
          return parseNDigits(token.length, dateString);
        case "io":
          return match2.ordinalNumber(dateString, {
            unit: "day"
          });
        case "iii":
          return mapValue(match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          }), valueCallback3);
        case "iiiii":
          return mapValue(match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          }), valueCallback3);
        case "iiiiii":
          return mapValue(match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          }), valueCallback3);
        case "iiii":
        default:
          return mapValue(match2.day(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          }), valueCallback3);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 7;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date = setUTCISODay(date, value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return ISODayParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/AMPMParser.js
var AMPMParser = function(_Parser) {
  _inherits(AMPMParser2, _Parser);
  var _super = _createSuper(AMPMParser2);
  function AMPMParser2() {
    var _this;
    _classCallCheck(this, AMPMParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 80);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["b", "B", "H", "k", "t", "T"]);
    return _this;
  }
  _createClass(AMPMParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "a":
        case "aa":
        case "aaa":
          return match2.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "aaaaa":
          return match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "aaaa":
        default:
          return match2.dayPeriod(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return AMPMParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/AMPMMidnightParser.js
var AMPMMidnightParser = function(_Parser) {
  _inherits(AMPMMidnightParser2, _Parser);
  var _super = _createSuper(AMPMMidnightParser2);
  function AMPMMidnightParser2() {
    var _this;
    _classCallCheck(this, AMPMMidnightParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 80);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "B", "H", "k", "t", "T"]);
    return _this;
  }
  _createClass(AMPMMidnightParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "b":
        case "bb":
        case "bbb":
          return match2.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "bbbbb":
          return match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "bbbb":
        default:
          return match2.dayPeriod(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return AMPMMidnightParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/DayPeriodParser.js
var DayPeriodParser = function(_Parser) {
  _inherits(DayPeriodParser2, _Parser);
  var _super = _createSuper(DayPeriodParser2);
  function DayPeriodParser2() {
    var _this;
    _classCallCheck(this, DayPeriodParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 80);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "b", "t", "T"]);
    return _this;
  }
  _createClass(DayPeriodParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "B":
        case "BB":
        case "BBB":
          return match2.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "BBBBB":
          return match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "BBBB":
        default:
          return match2.dayPeriod(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return DayPeriodParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/Hour1to12Parser.js
var Hour1to12Parser = function(_Parser) {
  _inherits(Hour1to12Parser2, _Parser);
  var _super = _createSuper(Hour1to12Parser2);
  function Hour1to12Parser2() {
    var _this;
    _classCallCheck(this, Hour1to12Parser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 70);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["H", "K", "k", "t", "T"]);
    return _this;
  }
  _createClass(Hour1to12Parser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "h":
          return parseNumericPattern(numericPatterns.hour12h, dateString);
        case "ho":
          return match2.ordinalNumber(dateString, {
            unit: "hour"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 12;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      var isPM = date.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else if (!isPM && value === 12) {
        date.setUTCHours(0, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }
      return date;
    }
  }]);
  return Hour1to12Parser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/Hour0to23Parser.js
var Hour0to23Parser = function(_Parser) {
  _inherits(Hour0to23Parser2, _Parser);
  var _super = _createSuper(Hour0to23Parser2);
  function Hour0to23Parser2() {
    var _this;
    _classCallCheck(this, Hour0to23Parser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 70);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "b", "h", "K", "k", "t", "T"]);
    return _this;
  }
  _createClass(Hour0to23Parser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "H":
          return parseNumericPattern(numericPatterns.hour23h, dateString);
        case "Ho":
          return match2.ordinalNumber(dateString, {
            unit: "hour"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 23;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(value, 0, 0, 0);
      return date;
    }
  }]);
  return Hour0to23Parser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/Hour0To11Parser.js
var Hour0To11Parser = function(_Parser) {
  _inherits(Hour0To11Parser2, _Parser);
  var _super = _createSuper(Hour0To11Parser2);
  function Hour0To11Parser2() {
    var _this;
    _classCallCheck(this, Hour0To11Parser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 70);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["h", "H", "k", "t", "T"]);
    return _this;
  }
  _createClass(Hour0To11Parser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "K":
          return parseNumericPattern(numericPatterns.hour11h, dateString);
        case "Ko":
          return match2.ordinalNumber(dateString, {
            unit: "hour"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      var isPM = date.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }
      return date;
    }
  }]);
  return Hour0To11Parser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/Hour1To24Parser.js
var Hour1To24Parser = function(_Parser) {
  _inherits(Hour1To24Parser2, _Parser);
  var _super = _createSuper(Hour1To24Parser2);
  function Hour1To24Parser2() {
    var _this;
    _classCallCheck(this, Hour1To24Parser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 70);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "b", "h", "H", "K", "t", "T"]);
    return _this;
  }
  _createClass(Hour1To24Parser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "k":
          return parseNumericPattern(numericPatterns.hour24h, dateString);
        case "ko":
          return match2.ordinalNumber(dateString, {
            unit: "hour"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 24;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      var hours = value <= 24 ? value % 24 : value;
      date.setUTCHours(hours, 0, 0, 0);
      return date;
    }
  }]);
  return Hour1To24Parser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/MinuteParser.js
var MinuteParser = function(_Parser) {
  _inherits(MinuteParser2, _Parser);
  var _super = _createSuper(MinuteParser2);
  function MinuteParser2() {
    var _this;
    _classCallCheck(this, MinuteParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 60);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T"]);
    return _this;
  }
  _createClass(MinuteParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "m":
          return parseNumericPattern(numericPatterns.minute, dateString);
        case "mo":
          return match2.ordinalNumber(dateString, {
            unit: "minute"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 59;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMinutes(value, 0, 0);
      return date;
    }
  }]);
  return MinuteParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/SecondParser.js
var SecondParser = function(_Parser) {
  _inherits(SecondParser2, _Parser);
  var _super = _createSuper(SecondParser2);
  function SecondParser2() {
    var _this;
    _classCallCheck(this, SecondParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 50);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T"]);
    return _this;
  }
  _createClass(SecondParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "s":
          return parseNumericPattern(numericPatterns.second, dateString);
        case "so":
          return match2.ordinalNumber(dateString, {
            unit: "second"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 59;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCSeconds(value, 0);
      return date;
    }
  }]);
  return SecondParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/FractionOfSecondParser.js
var FractionOfSecondParser = function(_Parser) {
  _inherits(FractionOfSecondParser2, _Parser);
  var _super = _createSuper(FractionOfSecondParser2);
  function FractionOfSecondParser2() {
    var _this;
    _classCallCheck(this, FractionOfSecondParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 30);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T"]);
    return _this;
  }
  _createClass(FractionOfSecondParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      var valueCallback3 = function valueCallback4(value) {
        return Math.floor(value * Math.pow(10, -token.length + 3));
      };
      return mapValue(parseNDigits(token.length, dateString), valueCallback3);
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMilliseconds(value);
      return date;
    }
  }]);
  return FractionOfSecondParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneWithZParser.js
var ISOTimezoneWithZParser = function(_Parser) {
  _inherits(ISOTimezoneWithZParser2, _Parser);
  var _super = _createSuper(ISOTimezoneWithZParser2);
  function ISOTimezoneWithZParser2() {
    var _this;
    _classCallCheck(this, ISOTimezoneWithZParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 10);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T", "x"]);
    return _this;
  }
  _createClass(ISOTimezoneWithZParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      switch (token) {
        case "X":
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);
        case "XX":
          return parseTimezonePattern(timezonePatterns.basic, dateString);
        case "XXXX":
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);
        case "XXXXX":
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);
        case "XXX":
        default:
          return parseTimezonePattern(timezonePatterns.extended, dateString);
      }
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      if (flags.timestampIsSet) {
        return date;
      }
      return new Date(date.getTime() - value);
    }
  }]);
  return ISOTimezoneWithZParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneParser.js
var ISOTimezoneParser = function(_Parser) {
  _inherits(ISOTimezoneParser2, _Parser);
  var _super = _createSuper(ISOTimezoneParser2);
  function ISOTimezoneParser2() {
    var _this;
    _classCallCheck(this, ISOTimezoneParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 10);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T", "X"]);
    return _this;
  }
  _createClass(ISOTimezoneParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      switch (token) {
        case "x":
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);
        case "xx":
          return parseTimezonePattern(timezonePatterns.basic, dateString);
        case "xxxx":
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);
        case "xxxxx":
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);
        case "xxx":
        default:
          return parseTimezonePattern(timezonePatterns.extended, dateString);
      }
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      if (flags.timestampIsSet) {
        return date;
      }
      return new Date(date.getTime() - value);
    }
  }]);
  return ISOTimezoneParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/TimestampSecondsParser.js
var TimestampSecondsParser = function(_Parser) {
  _inherits(TimestampSecondsParser2, _Parser);
  var _super = _createSuper(TimestampSecondsParser2);
  function TimestampSecondsParser2() {
    var _this;
    _classCallCheck(this, TimestampSecondsParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 40);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", "*");
    return _this;
  }
  _createClass(TimestampSecondsParser2, [{
    key: "parse",
    value: function parse2(dateString) {
      return parseAnyDigitsSigned(dateString);
    }
  }, {
    key: "set",
    value: function set(_date, _flags, value) {
      return [new Date(value * 1e3), {
        timestampIsSet: true
      }];
    }
  }]);
  return TimestampSecondsParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/TimestampMillisecondsParser.js
var TimestampMillisecondsParser = function(_Parser) {
  _inherits(TimestampMillisecondsParser2, _Parser);
  var _super = _createSuper(TimestampMillisecondsParser2);
  function TimestampMillisecondsParser2() {
    var _this;
    _classCallCheck(this, TimestampMillisecondsParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 20);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", "*");
    return _this;
  }
  _createClass(TimestampMillisecondsParser2, [{
    key: "parse",
    value: function parse2(dateString) {
      return parseAnyDigitsSigned(dateString);
    }
  }, {
    key: "set",
    value: function set(_date, _flags, value) {
      return [new Date(value), {
        timestampIsSet: true
      }];
    }
  }]);
  return TimestampMillisecondsParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/index.js
var parsers = {
  G: new EraParser(),
  y: new YearParser(),
  Y: new LocalWeekYearParser(),
  R: new ISOWeekYearParser(),
  u: new ExtendedYearParser(),
  Q: new QuarterParser(),
  q: new StandAloneQuarterParser(),
  M: new MonthParser(),
  L: new StandAloneMonthParser(),
  w: new LocalWeekParser(),
  I: new ISOWeekParser(),
  d: new DateParser(),
  D: new DayOfYearParser(),
  E: new DayParser(),
  e: new LocalDayParser(),
  c: new StandAloneLocalDayParser(),
  i: new ISODayParser(),
  a: new AMPMParser(),
  b: new AMPMMidnightParser(),
  B: new DayPeriodParser(),
  h: new Hour1to12Parser(),
  H: new Hour0to23Parser(),
  K: new Hour0To11Parser(),
  k: new Hour1To24Parser(),
  m: new MinuteParser(),
  s: new SecondParser(),
  S: new FractionOfSecondParser(),
  X: new ISOTimezoneWithZParser(),
  x: new ISOTimezoneParser(),
  t: new TimestampSecondsParser(),
  T: new TimestampMillisecondsParser()
};

// node_modules/date-fns/esm/parse/index.js
var formattingTokensRegExp2 = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
var longFormattingTokensRegExp2 = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp2 = /^'([^]*?)'?$/;
var doubleQuoteRegExp2 = /''/g;
var notWhitespaceRegExp = /\S/;
var unescapedLatinCharacterRegExp2 = /[a-zA-Z]/;
function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  requiredArgs(3, arguments);
  var dateString = String(dirtyDateString);
  var formatString = String(dirtyFormatString);
  var defaultOptions2 = getDefaultOptions();
  var locale2 = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions2.locale) !== null && _ref !== void 0 ? _ref : defaultLocale_default;
  if (!locale2.match) {
    throw new RangeError("locale must contain match property");
  }
  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions2.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions2.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions2.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  if (formatString === "") {
    if (dateString === "") {
      return toDate(dirtyReferenceDate);
    } else {
      return /* @__PURE__ */ new Date(NaN);
    }
  }
  var subFnOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale: locale2
  };
  var setters = [new DateToSystemTimezoneSetter()];
  var tokens = formatString.match(longFormattingTokensRegExp2).map(function(substring) {
    var firstCharacter = substring[0];
    if (firstCharacter in longFormatters_default) {
      var longFormatter = longFormatters_default[firstCharacter];
      return longFormatter(substring, locale2.formatLong);
    }
    return substring;
  }).join("").match(formattingTokensRegExp2);
  var usedTokens = [];
  var _iterator = _createForOfIteratorHelper(tokens), _step;
  try {
    var _loop = function _loop2() {
      var token = _step.value;
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(token)) {
        throwProtectedError(token, formatString, dirtyDateString);
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(token)) {
        throwProtectedError(token, formatString, dirtyDateString);
      }
      var firstCharacter = token[0];
      var parser = parsers[firstCharacter];
      if (parser) {
        var incompatibleTokens = parser.incompatibleTokens;
        if (Array.isArray(incompatibleTokens)) {
          var incompatibleToken = usedTokens.find(function(usedToken) {
            return incompatibleTokens.includes(usedToken.token) || usedToken.token === firstCharacter;
          });
          if (incompatibleToken) {
            throw new RangeError("The format string mustn't contain `".concat(incompatibleToken.fullToken, "` and `").concat(token, "` at the same time"));
          }
        } else if (parser.incompatibleTokens === "*" && usedTokens.length > 0) {
          throw new RangeError("The format string mustn't contain `".concat(token, "` and any other token at the same time"));
        }
        usedTokens.push({
          token: firstCharacter,
          fullToken: token
        });
        var parseResult = parser.run(dateString, token, locale2.match, subFnOptions);
        if (!parseResult) {
          return {
            v: /* @__PURE__ */ new Date(NaN)
          };
        }
        setters.push(parseResult.setter);
        dateString = parseResult.rest;
      } else {
        if (firstCharacter.match(unescapedLatinCharacterRegExp2)) {
          throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
        }
        if (token === "''") {
          token = "'";
        } else if (firstCharacter === "'") {
          token = cleanEscapedString2(token);
        }
        if (dateString.indexOf(token) === 0) {
          dateString = dateString.slice(token.length);
        } else {
          return {
            v: /* @__PURE__ */ new Date(NaN)
          };
        }
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _ret = _loop();
      if (_typeof(_ret) === "object") return _ret.v;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
    return /* @__PURE__ */ new Date(NaN);
  }
  var uniquePrioritySetters = setters.map(function(setter2) {
    return setter2.priority;
  }).sort(function(a3, b2) {
    return b2 - a3;
  }).filter(function(priority, index, array) {
    return array.indexOf(priority) === index;
  }).map(function(priority) {
    return setters.filter(function(setter2) {
      return setter2.priority === priority;
    }).sort(function(a3, b2) {
      return b2.subPriority - a3.subPriority;
    });
  }).map(function(setterArray) {
    return setterArray[0];
  });
  var date = toDate(dirtyReferenceDate);
  if (isNaN(date.getTime())) {
    return /* @__PURE__ */ new Date(NaN);
  }
  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));
  var flags = {};
  var _iterator2 = _createForOfIteratorHelper(uniquePrioritySetters), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var setter = _step2.value;
      if (!setter.validate(utcDate, subFnOptions)) {
        return /* @__PURE__ */ new Date(NaN);
      }
      var result = setter.set(utcDate, flags, subFnOptions);
      if (Array.isArray(result)) {
        utcDate = result[0];
        assign(flags, result[1]);
      } else {
        utcDate = result;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return utcDate;
}
function cleanEscapedString2(input) {
  return input.match(escapedStringRegExp2)[1].replace(doubleQuoteRegExp2, "'");
}

// node_modules/date-fns/esm/parseISO/index.js
function parseISO(argument, options) {
  var _options$additionalDi;
  requiredArgs(1, arguments);
  var additionalDigits = toInteger((_options$additionalDi = options === null || options === void 0 ? void 0 : options.additionalDigits) !== null && _options$additionalDi !== void 0 ? _options$additionalDi : 2);
  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {
    throw new RangeError("additionalDigits must be 0, 1 or 2");
  }
  if (!(typeof argument === "string" || Object.prototype.toString.call(argument) === "[object String]")) {
    return /* @__PURE__ */ new Date(NaN);
  }
  var dateStrings = splitDateString(argument);
  var date;
  if (dateStrings.date) {
    var parseYearResult = parseYear(dateStrings.date, additionalDigits);
    date = parseDate(parseYearResult.restDateString, parseYearResult.year);
  }
  if (!date || isNaN(date.getTime())) {
    return /* @__PURE__ */ new Date(NaN);
  }
  var timestamp = date.getTime();
  var time = 0;
  var offset2;
  if (dateStrings.time) {
    time = parseTime(dateStrings.time);
    if (isNaN(time)) {
      return /* @__PURE__ */ new Date(NaN);
    }
  }
  if (dateStrings.timezone) {
    offset2 = parseTimezone(dateStrings.timezone);
    if (isNaN(offset2)) {
      return /* @__PURE__ */ new Date(NaN);
    }
  } else {
    var dirtyDate = new Date(timestamp + time);
    var result = /* @__PURE__ */ new Date(0);
    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());
    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());
    return result;
  }
  return new Date(timestamp + time + offset2);
}
var patterns = {
  dateTimeDelimiter: /[T ]/,
  timeZoneDelimiter: /[Z ]/i,
  timezone: /([Z+-].*)$/
};
var dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
var timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
var timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
function splitDateString(dateString) {
  var dateStrings = {};
  var array = dateString.split(patterns.dateTimeDelimiter);
  var timeString;
  if (array.length > 2) {
    return dateStrings;
  }
  if (/:/.test(array[0])) {
    timeString = array[0];
  } else {
    dateStrings.date = array[0];
    timeString = array[1];
    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
      timeString = dateString.substr(dateStrings.date.length, dateString.length);
    }
  }
  if (timeString) {
    var token = patterns.timezone.exec(timeString);
    if (token) {
      dateStrings.time = timeString.replace(token[1], "");
      dateStrings.timezone = token[1];
    } else {
      dateStrings.time = timeString;
    }
  }
  return dateStrings;
}
function parseYear(dateString, additionalDigits) {
  var regex = new RegExp("^(?:(\\d{4}|[+-]\\d{" + (4 + additionalDigits) + "})|(\\d{2}|[+-]\\d{" + (2 + additionalDigits) + "})$)");
  var captures = dateString.match(regex);
  if (!captures) return {
    year: NaN,
    restDateString: ""
  };
  var year = captures[1] ? parseInt(captures[1]) : null;
  var century = captures[2] ? parseInt(captures[2]) : null;
  return {
    year: century === null ? year : century * 100,
    restDateString: dateString.slice((captures[1] || captures[2]).length)
  };
}
function parseDate(dateString, year) {
  if (year === null) return /* @__PURE__ */ new Date(NaN);
  var captures = dateString.match(dateRegex);
  if (!captures) return /* @__PURE__ */ new Date(NaN);
  var isWeekDate = !!captures[4];
  var dayOfYear = parseDateUnit(captures[1]);
  var month = parseDateUnit(captures[2]) - 1;
  var day = parseDateUnit(captures[3]);
  var week = parseDateUnit(captures[4]);
  var dayOfWeek = parseDateUnit(captures[5]) - 1;
  if (isWeekDate) {
    if (!validateWeekDate(year, week, dayOfWeek)) {
      return /* @__PURE__ */ new Date(NaN);
    }
    return dayOfISOWeekYear(year, week, dayOfWeek);
  } else {
    var date = /* @__PURE__ */ new Date(0);
    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {
      return /* @__PURE__ */ new Date(NaN);
    }
    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
    return date;
  }
}
function parseDateUnit(value) {
  return value ? parseInt(value) : 1;
}
function parseTime(timeString) {
  var captures = timeString.match(timeRegex);
  if (!captures) return NaN;
  var hours = parseTimeUnit(captures[1]);
  var minutes = parseTimeUnit(captures[2]);
  var seconds = parseTimeUnit(captures[3]);
  if (!validateTime(hours, minutes, seconds)) {
    return NaN;
  }
  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1e3;
}
function parseTimeUnit(value) {
  return value && parseFloat(value.replace(",", ".")) || 0;
}
function parseTimezone(timezoneString) {
  if (timezoneString === "Z") return 0;
  var captures = timezoneString.match(timezoneRegex);
  if (!captures) return 0;
  var sign = captures[1] === "+" ? -1 : 1;
  var hours = parseInt(captures[2]);
  var minutes = captures[3] && parseInt(captures[3]) || 0;
  if (!validateTimezone(hours, minutes)) {
    return NaN;
  }
  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);
}
function dayOfISOWeekYear(isoWeekYear, week, day) {
  var date = /* @__PURE__ */ new Date(0);
  date.setUTCFullYear(isoWeekYear, 0, 4);
  var fourthOfJanuaryDay = date.getUTCDay() || 7;
  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}
var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function isLeapYearIndex2(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}
function validateDate(year, month, date) {
  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex2(year) ? 29 : 28));
}
function validateDayOfYearDate(year, dayOfYear) {
  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex2(year) ? 366 : 365);
}
function validateWeekDate(_year, week, day) {
  return week >= 1 && week <= 53 && day >= 0 && day <= 6;
}
function validateTime(hours, minutes, seconds) {
  if (hours === 24) {
    return minutes === 0 && seconds === 0;
  }
  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
}
function validateTimezone(_hours, minutes) {
  return minutes >= 0 && minutes <= 59;
}

// node_modules/shards-react/node_modules/react-datepicker/node_modules/react-onclickoutside/dist/react-onclickoutside.es.js
var import_react = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
function _inheritsLoose2(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf2(subClass, superClass);
}
function _setPrototypeOf2(o, p) {
  _setPrototypeOf2 = Object.setPrototypeOf || function _setPrototypeOf4(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf2(o, p);
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _assertThisInitialized2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function isNodeFound(current, componentNode, ignoreClass) {
  if (current === componentNode) {
    return true;
  }
  if (current.correspondingElement) {
    return current.correspondingElement.classList.contains(ignoreClass);
  }
  return current.classList.contains(ignoreClass);
}
function findHighest(current, componentNode, ignoreClass) {
  if (current === componentNode) {
    return true;
  }
  while (current.parentNode || current.host) {
    if (current.parentNode && isNodeFound(current, componentNode, ignoreClass)) {
      return true;
    }
    current = current.parentNode || current.host;
  }
  return current;
}
function clickedScrollbar(evt) {
  return document.documentElement.clientWidth <= evt.clientX || document.documentElement.clientHeight <= evt.clientY;
}
var testPassiveEventSupport = function testPassiveEventSupport2() {
  if (typeof window === "undefined" || typeof window.addEventListener !== "function") {
    return;
  }
  var passive = false;
  var options = Object.defineProperty({}, "passive", {
    get: function get() {
      passive = true;
    }
  });
  var noop = function noop2() {
  };
  window.addEventListener("testPassiveEventSupport", noop, options);
  window.removeEventListener("testPassiveEventSupport", noop, options);
  return passive;
};
function autoInc(seed) {
  if (seed === void 0) {
    seed = 0;
  }
  return function() {
    return ++seed;
  };
}
var uid = autoInc();
var passiveEventSupport;
var handlersMap = {};
var enabledInstances = {};
var touchEvents = ["touchstart", "touchmove"];
var IGNORE_CLASS_NAME = "ignore-react-onclickoutside";
function getEventHandlerOptions(instance, eventName) {
  var handlerOptions = {};
  var isTouchEvent = touchEvents.indexOf(eventName) !== -1;
  if (isTouchEvent && passiveEventSupport) {
    handlerOptions.passive = !instance.props.preventDefault;
  }
  return handlerOptions;
}
function onClickOutsideHOC(WrappedComponent, config) {
  var _class, _temp;
  var componentName = WrappedComponent.displayName || WrappedComponent.name || "Component";
  return _temp = _class = function(_Component) {
    _inheritsLoose2(onClickOutside, _Component);
    function onClickOutside(props) {
      var _this;
      _this = _Component.call(this, props) || this;
      _this.__outsideClickHandler = function(event) {
        if (typeof _this.__clickOutsideHandlerProp === "function") {
          _this.__clickOutsideHandlerProp(event);
          return;
        }
        var instance = _this.getInstance();
        if (typeof instance.props.handleClickOutside === "function") {
          instance.props.handleClickOutside(event);
          return;
        }
        if (typeof instance.handleClickOutside === "function") {
          instance.handleClickOutside(event);
          return;
        }
        throw new Error("WrappedComponent: " + componentName + " lacks a handleClickOutside(event) function for processing outside click events.");
      };
      _this.__getComponentNode = function() {
        var instance = _this.getInstance();
        if (config && typeof config.setClickOutsideRef === "function") {
          return config.setClickOutsideRef()(instance);
        }
        if (typeof instance.setClickOutsideRef === "function") {
          return instance.setClickOutsideRef();
        }
        return (0, import_react_dom.findDOMNode)(instance);
      };
      _this.enableOnClickOutside = function() {
        if (typeof document === "undefined" || enabledInstances[_this._uid]) {
          return;
        }
        if (typeof passiveEventSupport === "undefined") {
          passiveEventSupport = testPassiveEventSupport();
        }
        enabledInstances[_this._uid] = true;
        var events = _this.props.eventTypes;
        if (!events.forEach) {
          events = [events];
        }
        handlersMap[_this._uid] = function(event) {
          if (_this.componentNode === null) return;
          if (_this.initTimeStamp > event.timeStamp) return;
          if (_this.props.preventDefault) {
            event.preventDefault();
          }
          if (_this.props.stopPropagation) {
            event.stopPropagation();
          }
          if (_this.props.excludeScrollbar && clickedScrollbar(event)) return;
          var current = event.composed && event.composedPath && event.composedPath().shift() || event.target;
          if (findHighest(current, _this.componentNode, _this.props.outsideClickIgnoreClass) !== document) {
            return;
          }
          _this.__outsideClickHandler(event);
        };
        events.forEach(function(eventName) {
          document.addEventListener(eventName, handlersMap[_this._uid], getEventHandlerOptions(_assertThisInitialized2(_this), eventName));
        });
      };
      _this.disableOnClickOutside = function() {
        delete enabledInstances[_this._uid];
        var fn = handlersMap[_this._uid];
        if (fn && typeof document !== "undefined") {
          var events = _this.props.eventTypes;
          if (!events.forEach) {
            events = [events];
          }
          events.forEach(function(eventName) {
            return document.removeEventListener(eventName, fn, getEventHandlerOptions(_assertThisInitialized2(_this), eventName));
          });
          delete handlersMap[_this._uid];
        }
      };
      _this.getRef = function(ref) {
        return _this.instanceRef = ref;
      };
      _this._uid = uid();
      _this.initTimeStamp = performance.now();
      return _this;
    }
    var _proto = onClickOutside.prototype;
    _proto.getInstance = function getInstance() {
      if (WrappedComponent.prototype && !WrappedComponent.prototype.isReactComponent) {
        return this;
      }
      var ref = this.instanceRef;
      return ref.getInstance ? ref.getInstance() : ref;
    };
    _proto.componentDidMount = function componentDidMount() {
      if (typeof document === "undefined" || !document.createElement) {
        return;
      }
      var instance = this.getInstance();
      if (config && typeof config.handleClickOutside === "function") {
        this.__clickOutsideHandlerProp = config.handleClickOutside(instance);
        if (typeof this.__clickOutsideHandlerProp !== "function") {
          throw new Error("WrappedComponent: " + componentName + " lacks a function for processing outside click events specified by the handleClickOutside config option.");
        }
      }
      this.componentNode = this.__getComponentNode();
      if (this.props.disableOnClickOutside) return;
      this.enableOnClickOutside();
    };
    _proto.componentDidUpdate = function componentDidUpdate() {
      this.componentNode = this.__getComponentNode();
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      this.disableOnClickOutside();
    };
    _proto.render = function render() {
      var _this$props = this.props;
      _this$props.excludeScrollbar;
      var props = _objectWithoutPropertiesLoose2(_this$props, ["excludeScrollbar"]);
      if (WrappedComponent.prototype && WrappedComponent.prototype.isReactComponent) {
        props.ref = this.getRef;
      } else {
        props.wrappedRef = this.getRef;
      }
      props.disableOnClickOutside = this.disableOnClickOutside;
      props.enableOnClickOutside = this.enableOnClickOutside;
      return (0, import_react.createElement)(WrappedComponent, props);
    };
    return onClickOutside;
  }(import_react.Component), _class.displayName = "OnClickOutside(" + componentName + ")", _class.defaultProps = {
    eventTypes: ["mousedown", "touchstart"],
    excludeScrollbar: config && config.excludeScrollbar || false,
    outsideClickIgnoreClass: IGNORE_CLASS_NAME,
    preventDefault: false,
    stopPropagation: false
  }, _class.getClass = function() {
    return WrappedComponent.getClass ? WrappedComponent.getClass() : WrappedComponent;
  }, _temp;
}
var react_onclickoutside_es_default = onClickOutsideHOC;

// node_modules/shards-react/node_modules/react-popper/lib/esm/Popper.js
var import_deep_equal = __toESM(require_deep_equal());
var React2 = __toESM(require_react());

// node_modules/popper.js/dist/esm/popper.js
var isBrowser = typeof window !== "undefined" && typeof document !== "undefined" && typeof navigator !== "undefined";
var timeoutDuration = function() {
  var longerTimeoutBrowsers = ["Edge", "Trident", "Firefox"];
  for (var i2 = 0; i2 < longerTimeoutBrowsers.length; i2 += 1) {
    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i2]) >= 0) {
      return 1;
    }
  }
  return 0;
}();
function microtaskDebounce(fn) {
  var called = false;
  return function() {
    if (called) {
      return;
    }
    called = true;
    window.Promise.resolve().then(function() {
      called = false;
      fn();
    });
  };
}
function taskDebounce(fn) {
  var scheduled = false;
  return function() {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function() {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}
var supportsMicroTasks = isBrowser && window.Promise;
var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;
function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === "[object Function]";
}
function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  }
  var window2 = element.ownerDocument.defaultView;
  var css2 = window2.getComputedStyle(element, null);
  return property ? css2[property] : css2;
}
function getParentNode(element) {
  if (element.nodeName === "HTML") {
    return element;
  }
  return element.parentNode || element.host;
}
function getScrollParent(element) {
  if (!element) {
    return document.body;
  }
  switch (element.nodeName) {
    case "HTML":
    case "BODY":
      return element.ownerDocument.body;
    case "#document":
      return element.body;
  }
  var _getStyleComputedProp = getStyleComputedProperty(element), overflow = _getStyleComputedProp.overflow, overflowX = _getStyleComputedProp.overflowX, overflowY = _getStyleComputedProp.overflowY;
  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }
  return getScrollParent(getParentNode(element));
}
function getReferenceNode(reference) {
  return reference && reference.referenceNode ? reference.referenceNode : reference;
}
var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);
function isIE(version) {
  if (version === 11) {
    return isIE11;
  }
  if (version === 10) {
    return isIE10;
  }
  return isIE11 || isIE10;
}
function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }
  var noOffsetParent = isIE(10) ? document.body : null;
  var offsetParent = element.offsetParent || null;
  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }
  var nodeName = offsetParent && offsetParent.nodeName;
  if (!nodeName || nodeName === "BODY" || nodeName === "HTML") {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  }
  if (["TH", "TD", "TABLE"].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, "position") === "static") {
    return getOffsetParent(offsetParent);
  }
  return offsetParent;
}
function isOffsetContainer(element) {
  var nodeName = element.nodeName;
  if (nodeName === "BODY") {
    return false;
  }
  return nodeName === "HTML" || getOffsetParent(element.firstElementChild) === element;
}
function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }
  return node;
}
function findCommonOffsetParent(element1, element2) {
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  }
  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1;
  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer;
  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }
    return getOffsetParent(commonAncestorContainer);
  }
  var element1root = getRoot(element1);
  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}
function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "top";
  var upperSide = side === "top" ? "scrollTop" : "scrollLeft";
  var nodeName = element.nodeName;
  if (nodeName === "BODY" || nodeName === "HTML") {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }
  return element[upperSide];
}
function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  var scrollTop = getScroll(element, "top");
  var scrollLeft = getScroll(element, "left");
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}
function getBordersSize(styles, axis) {
  var sideA = axis === "x" ? "Left" : "Top";
  var sideB = sideA === "Left" ? "Right" : "Bottom";
  return parseFloat(styles["border" + sideA + "Width"]) + parseFloat(styles["border" + sideB + "Width"]);
}
function getSize(axis, body, html, computedStyle) {
  return Math.max(body["offset" + axis], body["scroll" + axis], html["client" + axis], html["offset" + axis], html["scroll" + axis], isIE(10) ? parseInt(html["offset" + axis]) + parseInt(computedStyle["margin" + (axis === "Height" ? "Top" : "Left")]) + parseInt(computedStyle["margin" + (axis === "Height" ? "Bottom" : "Right")]) : 0);
}
function getWindowSizes(document2) {
  var body = document2.body;
  var html = document2.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);
  return {
    height: getSize("Height", body, html, computedStyle),
    width: getSize("Width", body, html, computedStyle)
  };
}
var classCallCheck = function(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
var createClass = /* @__PURE__ */ function() {
  function defineProperties(target, props) {
    for (var i2 = 0; i2 < props.length; i2++) {
      var descriptor = props[i2];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var defineProperty = function(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
};
var _extends2 = Object.assign || function(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
function getClientRect(offsets) {
  return _extends2({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}
function getBoundingClientRect(element) {
  var rect = {};
  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, "top");
      var scrollLeft = getScroll(element, "left");
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e3) {
  }
  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };
  var sizes = element.nodeName === "HTML" ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.width;
  var height = sizes.height || element.clientHeight || result.height;
  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height;
  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, "x");
    vertScrollbar -= getBordersSize(styles, "y");
    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }
  return getClientRect(result);
}
function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  var isIE102 = isIE(10);
  var isHTML = parent.nodeName === "HTML";
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);
  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth);
  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }
  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;
  if (!isIE102 && isHTML) {
    var marginTop = parseFloat(styles.marginTop);
    var marginLeft = parseFloat(styles.marginLeft);
    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }
  if (isIE102 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== "BODY") {
    offsets = includeScroll(offsets, parent);
  }
  return offsets;
}
function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);
  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, "left") : 0;
  var offset2 = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width,
    height
  };
  return getClientRect(offset2);
}
function isFixed(element) {
  var nodeName = element.nodeName;
  if (nodeName === "BODY" || nodeName === "HTML") {
    return false;
  }
  if (getStyleComputedProperty(element, "position") === "fixed") {
    return true;
  }
  var parentNode = getParentNode(element);
  if (!parentNode) {
    return false;
  }
  return isFixed(parentNode);
}
function getFixedPositionOffsetParent(element) {
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }
  var el = element.parentElement;
  while (el && getStyleComputedProperty(el, "transform") === "none") {
    el = el.parentElement;
  }
  return el || document.documentElement;
}
function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
  var boundaries = { top: 0, left: 0 };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  if (boundariesElement === "viewport") {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    var boundariesNode = void 0;
    if (boundariesElement === "scrollParent") {
      boundariesNode = getScrollParent(getParentNode(reference));
      if (boundariesNode.nodeName === "BODY") {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === "window") {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }
    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);
    if (boundariesNode.nodeName === "HTML" && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument), height = _getWindowSizes.height, width = _getWindowSizes.width;
      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      boundaries = offsets;
    }
  }
  padding = padding || 0;
  var isPaddingNumber = typeof padding === "number";
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;
  return boundaries;
}
function getArea(_ref) {
  var width = _ref.width, height = _ref.height;
  return width * height;
}
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 0;
  if (placement.indexOf("auto") === -1) {
    return placement;
  }
  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);
  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };
  var sortedAreas = Object.keys(rects).map(function(key) {
    return _extends2({
      key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function(a3, b2) {
    return b2.area - a3.area;
  });
  var filteredAreas = sortedAreas.filter(function(_ref2) {
    var width = _ref2.width, height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });
  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
  var variation = placement.split("-")[1];
  return computedPlacement + (variation ? "-" + variation : "");
}
function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}
function getOuterSizes(element) {
  var window2 = element.ownerDocument.defaultView;
  var styles = window2.getComputedStyle(element);
  var x2 = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y3 = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y3,
    height: element.offsetHeight + x2
  };
  return result;
}
function getOppositePlacement(placement) {
  var hash = { left: "right", right: "left", bottom: "top", top: "bottom" };
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash[matched];
  });
}
function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split("-")[0];
  var popperRect = getOuterSizes(popper);
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };
  var isHoriz = ["right", "left"].indexOf(placement) !== -1;
  var mainSide = isHoriz ? "top" : "left";
  var secondarySide = isHoriz ? "left" : "top";
  var measurement = isHoriz ? "height" : "width";
  var secondaryMeasurement = !isHoriz ? "height" : "width";
  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }
  return popperOffsets;
}
function find(arr, check) {
  if (Array.prototype.find) {
    return arr.find(check);
  }
  return arr.filter(check)[0];
}
function findIndex2(arr, prop, value) {
  if (Array.prototype.findIndex) {
    return arr.findIndex(function(cur) {
      return cur[prop] === value;
    });
  }
  var match2 = find(arr, function(obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match2);
}
function runModifiers(modifiers2, data, ends) {
  var modifiersToRun = ends === void 0 ? modifiers2 : modifiers2.slice(0, findIndex2(modifiers2, "name", ends));
  modifiersToRun.forEach(function(modifier) {
    if (modifier["function"]) {
      console.warn("`modifier.function` is deprecated, use `modifier.fn`!");
    }
    var fn = modifier["function"] || modifier.fn;
    if (modifier.enabled && isFunction(fn)) {
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);
      data = fn(data, modifier);
    }
  });
  return data;
}
function update() {
  if (this.state.isDestroyed) {
    return;
  }
  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };
  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);
  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);
  data.originalPlacement = data.placement;
  data.positionFixed = this.options.positionFixed;
  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
  data.offsets.popper.position = this.options.positionFixed ? "fixed" : "absolute";
  data = runModifiers(this.modifiers, data);
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}
function isModifierEnabled(modifiers2, modifierName) {
  return modifiers2.some(function(_ref) {
    var name = _ref.name, enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}
function getSupportedPropertyName(property) {
  var prefixes = [false, "ms", "Webkit", "Moz", "O"];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);
  for (var i2 = 0; i2 < prefixes.length; i2++) {
    var prefix = prefixes[i2];
    var toCheck = prefix ? "" + prefix + upperProp : property;
    if (typeof document.body.style[toCheck] !== "undefined") {
      return toCheck;
    }
  }
  return null;
}
function destroy() {
  this.state.isDestroyed = true;
  if (isModifierEnabled(this.modifiers, "applyStyle")) {
    this.popper.removeAttribute("x-placement");
    this.popper.style.position = "";
    this.popper.style.top = "";
    this.popper.style.left = "";
    this.popper.style.right = "";
    this.popper.style.bottom = "";
    this.popper.style.willChange = "";
    this.popper.style[getSupportedPropertyName("transform")] = "";
  }
  this.disableEventListeners();
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}
function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}
function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === "BODY";
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, { passive: true });
  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}
function setupEventListeners(reference, options, state, updateBound) {
  state.updateBound = updateBound;
  getWindow(reference).addEventListener("resize", state.updateBound, { passive: true });
  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, "scroll", state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;
  return state;
}
function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}
function removeEventListeners(reference, state) {
  getWindow(reference).removeEventListener("resize", state.updateBound);
  state.scrollParents.forEach(function(target) {
    target.removeEventListener("scroll", state.updateBound);
  });
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}
function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}
function isNumeric(n) {
  return n !== "" && !isNaN(parseFloat(n)) && isFinite(n);
}
function setStyles(element, styles) {
  Object.keys(styles).forEach(function(prop) {
    var unit = "";
    if (["width", "height", "top", "right", "bottom", "left"].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = "px";
    }
    element.style[prop] = styles[prop] + unit;
  });
}
function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function(prop) {
    var value = attributes[prop];
    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}
function applyStyle(data) {
  setStyles(data.instance.popper, data.styles);
  setAttributes(data.instance.popper, data.attributes);
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }
  return data;
}
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);
  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
  popper.setAttribute("x-placement", placement);
  setStyles(popper, { position: options.positionFixed ? "fixed" : "absolute" });
  return options;
}
function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var round = Math.round, floor = Math.floor;
  var noRound = function noRound2(v) {
    return v;
  };
  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);
  var isVertical = ["left", "right"].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf("-") !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;
  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;
  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}
var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);
function computeStyle(data, options) {
  var x2 = options.x, y3 = options.y;
  var popper = data.offsets.popper;
  var legacyGpuAccelerationOption = find(data.instance.modifiers, function(modifier) {
    return modifier.name === "applyStyle";
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== void 0) {
    console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== void 0 ? legacyGpuAccelerationOption : options.gpuAcceleration;
  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent);
  var styles = {
    position: popper.position
  };
  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);
  var sideA = x2 === "bottom" ? "top" : "bottom";
  var sideB = y3 === "right" ? "left" : "right";
  var prefixedProperty = getSupportedPropertyName("transform");
  var left = void 0, top = void 0;
  if (sideA === "bottom") {
    if (offsetParent.nodeName === "HTML") {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }
  if (sideB === "right") {
    if (offsetParent.nodeName === "HTML") {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = "translate3d(" + left + "px, " + top + "px, 0)";
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = "transform";
  } else {
    var invertTop = sideA === "bottom" ? -1 : 1;
    var invertLeft = sideB === "right" ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ", " + sideB;
  }
  var attributes = {
    "x-placement": data.placement
  };
  data.attributes = _extends2({}, attributes, data.attributes);
  data.styles = _extends2({}, styles, data.styles);
  data.arrowStyles = _extends2({}, data.offsets.arrow, data.arrowStyles);
  return data;
}
function isModifierRequired(modifiers2, requestingName, requestedName) {
  var requesting = find(modifiers2, function(_ref) {
    var name = _ref.name;
    return name === requestingName;
  });
  var isRequired = !!requesting && modifiers2.some(function(modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });
  if (!isRequired) {
    var _requesting = "`" + requestingName + "`";
    var requested = "`" + requestedName + "`";
    console.warn(requested + " modifier is required by " + _requesting + " modifier in order to work, be sure to include it before " + _requesting + "!");
  }
  return isRequired;
}
function arrow(data, options) {
  var _data$offsets$arrow;
  if (!isModifierRequired(data.instance.modifiers, "arrow", "keepTogether")) {
    return data;
  }
  var arrowElement = options.element;
  if (typeof arrowElement === "string") {
    arrowElement = data.instance.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return data;
    }
  } else {
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn("WARNING: `arrow.element` must be child of its popper element!");
      return data;
    }
  }
  var placement = data.placement.split("-")[0];
  var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var isVertical = ["left", "right"].indexOf(placement) !== -1;
  var len = isVertical ? "height" : "width";
  var sideCapitalized = isVertical ? "Top" : "Left";
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? "left" : "top";
  var opSide = isVertical ? "bottom" : "right";
  var arrowElementSize = getOuterSizes(arrowElement)[len];
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }
  data.offsets.popper = getClientRect(data.offsets.popper);
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;
  var css2 = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css2["margin" + sideCapitalized]);
  var popperBorderSide = parseFloat(css2["border" + sideCapitalized + "Width"]);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ""), _data$offsets$arrow);
  return data;
}
function getOppositeVariation(variation) {
  if (variation === "end") {
    return "start";
  } else if (variation === "start") {
    return "end";
  }
  return variation;
}
var placements = ["auto-start", "auto", "auto-end", "top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-end", "bottom", "bottom-start", "left-end", "left", "left-start"];
var validPlacements = placements.slice(3);
function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}
var BEHAVIORS = {
  FLIP: "flip",
  CLOCKWISE: "clockwise",
  COUNTERCLOCKWISE: "counterclockwise"
};
function flip(data, options) {
  if (isModifierEnabled(data.instance.modifiers, "inner")) {
    return data;
  }
  if (data.flipped && data.placement === data.originalPlacement) {
    return data;
  }
  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
  var placement = data.placement.split("-")[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split("-")[1] || "";
  var flipOrder = [];
  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;
    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }
  flipOrder.forEach(function(step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }
    placement = data.placement.split("-")[0];
    placementOpposite = getOppositePlacement(placement);
    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;
    var floor = Math.floor;
    var overlapsRef = placement === "left" && floor(popperOffsets.right) > floor(refOffsets.left) || placement === "right" && floor(popperOffsets.left) < floor(refOffsets.right) || placement === "top" && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === "bottom" && floor(popperOffsets.top) < floor(refOffsets.bottom);
    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);
    var overflowsBoundaries = placement === "left" && overflowsLeft || placement === "right" && overflowsRight || placement === "top" && overflowsTop || placement === "bottom" && overflowsBottom;
    var isVertical = ["top", "bottom"].indexOf(placement) !== -1;
    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === "start" && overflowsLeft || isVertical && variation === "end" && overflowsRight || !isVertical && variation === "start" && overflowsTop || !isVertical && variation === "end" && overflowsBottom);
    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === "start" && overflowsRight || isVertical && variation === "end" && overflowsLeft || !isVertical && variation === "start" && overflowsBottom || !isVertical && variation === "end" && overflowsTop);
    var flippedVariation = flippedVariationByRef || flippedVariationByContent;
    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      data.flipped = true;
      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }
      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }
      data.placement = placement + (variation ? "-" + variation : "");
      data.offsets.popper = _extends2({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
      data = runModifiers(data.instance.modifiers, data, "flip");
    }
  });
  return data;
}
function keepTogether(data) {
  var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var placement = data.placement.split("-")[0];
  var floor = Math.floor;
  var isVertical = ["top", "bottom"].indexOf(placement) !== -1;
  var side = isVertical ? "right" : "bottom";
  var opSide = isVertical ? "left" : "top";
  var measurement = isVertical ? "width" : "height";
  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }
  return data;
}
function toValue(str, measurement, popperOffsets, referenceOffsets) {
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2];
  if (!value) {
    return str;
  }
  if (unit.indexOf("%") === 0) {
    var element = void 0;
    switch (unit) {
      case "%p":
        element = popperOffsets;
        break;
      case "%":
      case "%r":
      default:
        element = referenceOffsets;
    }
    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === "vh" || unit === "vw") {
    var size = void 0;
    if (unit === "vh") {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    return value;
  }
}
function parseOffset(offset2, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];
  var useHeight = ["right", "left"].indexOf(basePlacement) !== -1;
  var fragments = offset2.split(/(\+|\-)/).map(function(frag) {
    return frag.trim();
  });
  var divider = fragments.indexOf(find(fragments, function(frag) {
    return frag.search(/,|\s/) !== -1;
  }));
  if (fragments[divider] && fragments[divider].indexOf(",") === -1) {
    console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");
  }
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];
  ops = ops.map(function(op, index) {
    var measurement = (index === 1 ? !useHeight : useHeight) ? "height" : "width";
    var mergeWithPrevious = false;
    return op.reduce(function(a3, b2) {
      if (a3[a3.length - 1] === "" && ["+", "-"].indexOf(b2) !== -1) {
        a3[a3.length - 1] = b2;
        mergeWithPrevious = true;
        return a3;
      } else if (mergeWithPrevious) {
        a3[a3.length - 1] += b2;
        mergeWithPrevious = false;
        return a3;
      } else {
        return a3.concat(b2);
      }
    }, []).map(function(str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });
  ops.forEach(function(op, index) {
    op.forEach(function(frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === "-" ? -1 : 1);
      }
    });
  });
  return offsets;
}
function offset(data, _ref) {
  var offset2 = _ref.offset;
  var placement = data.placement, _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var basePlacement = placement.split("-")[0];
  var offsets = void 0;
  if (isNumeric(+offset2)) {
    offsets = [+offset2, 0];
  } else {
    offsets = parseOffset(offset2, popper, reference, basePlacement);
  }
  if (basePlacement === "left") {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === "right") {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === "top") {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === "bottom") {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }
  data.popper = popper;
  return data;
}
function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);
  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  }
  var transformProp = getSupportedPropertyName("transform");
  var popperStyles = data.instance.popper.style;
  var top = popperStyles.top, left = popperStyles.left, transform = popperStyles[transformProp];
  popperStyles.top = "";
  popperStyles.left = "";
  popperStyles[transformProp] = "";
  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);
  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;
  options.boundaries = boundaries;
  var order = options.priority;
  var popper = data.offsets.popper;
  var check = {
    primary: function primary(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === "right" ? "left" : "top";
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === "right" ? popper.width : popper.height));
      }
      return defineProperty({}, mainSide, value);
    }
  };
  order.forEach(function(placement) {
    var side = ["left", "top"].indexOf(placement) !== -1 ? "primary" : "secondary";
    popper = _extends2({}, popper, check[side](placement));
  });
  data.offsets.popper = popper;
  return data;
}
function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split("-")[0];
  var shiftvariation = placement.split("-")[1];
  if (shiftvariation) {
    var _data$offsets = data.offsets, reference = _data$offsets.reference, popper = _data$offsets.popper;
    var isVertical = ["bottom", "top"].indexOf(basePlacement) !== -1;
    var side = isVertical ? "left" : "top";
    var measurement = isVertical ? "width" : "height";
    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };
    data.offsets.popper = _extends2({}, popper, shiftOffsets[shiftvariation]);
  }
  return data;
}
function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, "hide", "preventOverflow")) {
    return data;
  }
  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function(modifier) {
    return modifier.name === "preventOverflow";
  }).boundaries;
  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    if (data.hide === true) {
      return data;
    }
    data.hide = true;
    data.attributes["x-out-of-boundaries"] = "";
  } else {
    if (data.hide === false) {
      return data;
    }
    data.hide = false;
    data.attributes["x-out-of-boundaries"] = false;
  }
  return data;
}
function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split("-")[0];
  var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var isHoriz = ["left", "right"].indexOf(basePlacement) !== -1;
  var subtractLength = ["top", "left"].indexOf(basePlacement) === -1;
  popper[isHoriz ? "left" : "top"] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? "width" : "height"] : 0);
  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);
  return data;
}
var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: shift
  },
  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: offset,
    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },
  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: preventOverflow,
    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ["left", "right", "top", "bottom"],
    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: "scrollParent"
  },
  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: keepTogether
  },
  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: arrow,
    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: "[x-arrow]"
  },
  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: flip,
    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: "flip",
    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: "viewport",
    /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariations: false,
    /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariationsByContent: false
  },
  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,
    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,
    /** @prop {ModifierFn} */
    fn: inner
  },
  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: hide
  },
  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: computeStyle,
    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,
    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: "bottom",
    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: "right"
  },
  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: applyStyle,
    /** @prop {Function} */
    onLoad: applyStyleOnLoad,
    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: void 0
  }
};
var Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: "bottom",
  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,
  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,
  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,
  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {
  },
  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {
  },
  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers
};
var Popper = function() {
  function Popper3(reference, popper) {
    var _this = this;
    var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    classCallCheck(this, Popper3);
    this.scheduleUpdate = function() {
      return requestAnimationFrame(_this.update);
    };
    this.update = debounce(this.update.bind(this));
    this.options = _extends2({}, Popper3.Defaults, options);
    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    };
    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper;
    this.options.modifiers = {};
    Object.keys(_extends2({}, Popper3.Defaults.modifiers, options.modifiers)).forEach(function(name) {
      _this.options.modifiers[name] = _extends2({}, Popper3.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    });
    this.modifiers = Object.keys(this.options.modifiers).map(function(name) {
      return _extends2({
        name
      }, _this.options.modifiers[name]);
    }).sort(function(a3, b2) {
      return a3.order - b2.order;
    });
    this.modifiers.forEach(function(modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    });
    this.update();
    var eventsEnabled = this.options.eventsEnabled;
    if (eventsEnabled) {
      this.enableEventListeners();
    }
    this.state.eventsEnabled = eventsEnabled;
  }
  createClass(Popper3, [{
    key: "update",
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: "destroy",
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: "enableEventListeners",
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: "disableEventListeners",
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }
    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */
    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */
  }]);
  return Popper3;
}();
Popper.Utils = (typeof window !== "undefined" ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;
var popper_default = Popper;

// node_modules/shards-react/node_modules/react-popper/lib/esm/Manager.js
var React = __toESM(require_react());
var import_create_react_context = __toESM(require_lib());
var ManagerReferenceNodeContext = (0, import_create_react_context.default)();
var ManagerReferenceNodeSetterContext = (0, import_create_react_context.default)();
var Manager = function(_React$Component) {
  _inheritsLoose(Manager2, _React$Component);
  function Manager2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "referenceNode", void 0);
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "setReferenceNode", function(newReferenceNode) {
      if (newReferenceNode && _this.referenceNode !== newReferenceNode) {
        _this.referenceNode = newReferenceNode;
        _this.forceUpdate();
      }
    });
    return _this;
  }
  var _proto = Manager2.prototype;
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.referenceNode = null;
  };
  _proto.render = function render() {
    return React.createElement(ManagerReferenceNodeContext.Provider, {
      value: this.referenceNode
    }, React.createElement(ManagerReferenceNodeSetterContext.Provider, {
      value: this.setReferenceNode
    }, this.props.children));
  };
  return Manager2;
}(React.Component);

// node_modules/shards-react/node_modules/react-popper/lib/esm/utils.js
var unwrapArray = function unwrapArray2(arg) {
  return Array.isArray(arg) ? arg[0] : arg;
};
var safeInvoke = function safeInvoke2(fn) {
  if (typeof fn === "function") {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return fn.apply(void 0, args);
  }
};
var shallowEqual = function shallowEqual2(objA, objB) {
  var aKeys = Object.keys(objA);
  var bKeys = Object.keys(objB);
  if (bKeys.length !== aKeys.length) {
    return false;
  }
  for (var i2 = 0; i2 < bKeys.length; i2++) {
    var key = aKeys[i2];
    if (objA[key] !== objB[key]) {
      return false;
    }
  }
  return true;
};
var setRef = function setRef2(ref, node) {
  if (typeof ref === "function") {
    return safeInvoke(ref, node);
  } else if (ref != null) {
    ref.current = node;
  }
};

// node_modules/shards-react/node_modules/react-popper/lib/esm/Popper.js
var initialStyle = {
  position: "absolute",
  top: 0,
  left: 0,
  opacity: 0,
  pointerEvents: "none"
};
var initialArrowStyle = {};
var InnerPopper = function(_React$Component) {
  _inheritsLoose(InnerPopper2, _React$Component);
  function InnerPopper2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      data: void 0,
      placement: void 0
    });
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "popperInstance", void 0);
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "popperNode", null);
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "arrowNode", null);
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "setPopperNode", function(popperNode) {
      if (!popperNode || _this.popperNode === popperNode) return;
      setRef(_this.props.innerRef, popperNode);
      _this.popperNode = popperNode;
      _this.updatePopperInstance();
    });
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "setArrowNode", function(arrowNode) {
      _this.arrowNode = arrowNode;
    });
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "updateStateModifier", {
      enabled: true,
      order: 900,
      fn: function fn(data) {
        var placement = data.placement;
        _this.setState({
          data,
          placement
        });
        return data;
      }
    });
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getOptions", function() {
      return {
        placement: _this.props.placement,
        eventsEnabled: _this.props.eventsEnabled,
        positionFixed: _this.props.positionFixed,
        modifiers: _extends({}, _this.props.modifiers, {
          arrow: _extends({}, _this.props.modifiers && _this.props.modifiers.arrow, {
            enabled: !!_this.arrowNode,
            element: _this.arrowNode
          }),
          applyStyle: {
            enabled: false
          },
          updateStateModifier: _this.updateStateModifier
        })
      };
    });
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getPopperStyle", function() {
      return !_this.popperNode || !_this.state.data ? initialStyle : _extends({
        position: _this.state.data.offsets.popper.position
      }, _this.state.data.styles);
    });
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getPopperPlacement", function() {
      return !_this.state.data ? void 0 : _this.state.placement;
    });
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getArrowStyle", function() {
      return !_this.arrowNode || !_this.state.data ? initialArrowStyle : _this.state.data.arrowStyles;
    });
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getOutOfBoundariesState", function() {
      return _this.state.data ? _this.state.data.hide : void 0;
    });
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "destroyPopperInstance", function() {
      if (!_this.popperInstance) return;
      _this.popperInstance.destroy();
      _this.popperInstance = null;
    });
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "updatePopperInstance", function() {
      _this.destroyPopperInstance();
      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)), popperNode = _assertThisInitialize.popperNode;
      var referenceElement = _this.props.referenceElement;
      if (!referenceElement || !popperNode) return;
      _this.popperInstance = new popper_default(referenceElement, popperNode, _this.getOptions());
    });
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "scheduleUpdate", function() {
      if (_this.popperInstance) {
        _this.popperInstance.scheduleUpdate();
      }
    });
    return _this;
  }
  var _proto = InnerPopper2.prototype;
  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    if (this.props.placement !== prevProps.placement || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed || !(0, import_deep_equal.default)(this.props.modifiers, prevProps.modifiers, {
      strict: true
    })) {
      if (true) {
        if (this.props.modifiers !== prevProps.modifiers && this.props.modifiers != null && prevProps.modifiers != null && shallowEqual(this.props.modifiers, prevProps.modifiers)) {
          console.warn("'modifiers' prop reference updated even though all values appear the same.\nConsider memoizing the 'modifiers' object to avoid needless rendering.");
        }
      }
      this.updatePopperInstance();
    } else if (this.props.eventsEnabled !== prevProps.eventsEnabled && this.popperInstance) {
      this.props.eventsEnabled ? this.popperInstance.enableEventListeners() : this.popperInstance.disableEventListeners();
    }
    if (prevState.placement !== this.state.placement) {
      this.scheduleUpdate();
    }
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    setRef(this.props.innerRef, null);
    this.destroyPopperInstance();
  };
  _proto.render = function render() {
    return unwrapArray(this.props.children)({
      ref: this.setPopperNode,
      style: this.getPopperStyle(),
      placement: this.getPopperPlacement(),
      outOfBoundaries: this.getOutOfBoundariesState(),
      scheduleUpdate: this.scheduleUpdate,
      arrowProps: {
        ref: this.setArrowNode,
        style: this.getArrowStyle()
      }
    });
  };
  return InnerPopper2;
}(React2.Component);
_defineProperty(InnerPopper, "defaultProps", {
  placement: "bottom",
  eventsEnabled: true,
  referenceElement: void 0,
  positionFixed: false
});
var placements2 = popper_default.placements;
function Popper2(_ref) {
  var referenceElement = _ref.referenceElement, props = _objectWithoutPropertiesLoose(_ref, ["referenceElement"]);
  return React2.createElement(ManagerReferenceNodeContext.Consumer, null, function(referenceNode) {
    return React2.createElement(InnerPopper, _extends({
      referenceElement: referenceElement !== void 0 ? referenceElement : referenceNode
    }, props));
  });
}

// node_modules/shards-react/node_modules/react-popper/lib/esm/Reference.js
var React3 = __toESM(require_react());
var import_warning = __toESM(require_warning());
var InnerReference = function(_React$Component) {
  _inheritsLoose(InnerReference2, _React$Component);
  function InnerReference2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "refHandler", function(node) {
      setRef(_this.props.innerRef, node);
      safeInvoke(_this.props.setReferenceNode, node);
    });
    return _this;
  }
  var _proto = InnerReference2.prototype;
  _proto.componentWillUnmount = function componentWillUnmount() {
    setRef(this.props.innerRef, null);
  };
  _proto.render = function render() {
    (0, import_warning.default)(Boolean(this.props.setReferenceNode), "`Reference` should not be used outside of a `Manager` component.");
    return unwrapArray(this.props.children)({
      ref: this.refHandler
    });
  };
  return InnerReference2;
}(React3.Component);
function Reference(props) {
  return React3.createElement(ManagerReferenceNodeSetterContext.Consumer, null, function(setReferenceNode) {
    return React3.createElement(InnerReference, _extends({
      setReferenceNode
    }, props));
  });
}

// node_modules/shards-react/node_modules/react-datepicker/dist/es/index.js
function ne(e3) {
  return (ne = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
    return typeof e4;
  } : function(e4) {
    return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
  })(e3);
}
function oe(e3, t3) {
  if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
}
function ae(e3, t3) {
  for (var r = 0; r < t3.length; r++) {
    var n = t3[r];
    n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(e3, n.key, n);
  }
}
function se(e3, t3, r) {
  return t3 && ae(e3.prototype, t3), r && ae(e3, r), e3;
}
function pe(e3, t3, r) {
  return t3 in e3 ? Object.defineProperty(e3, t3, { value: r, enumerable: true, configurable: true, writable: true }) : e3[t3] = r, e3;
}
function ie() {
  return (ie = Object.assign || function(e3) {
    for (var t3 = 1; t3 < arguments.length; t3++) {
      var r = arguments[t3];
      for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e3[n] = r[n]);
    }
    return e3;
  }).apply(this, arguments);
}
function ce(e3, t3) {
  var r = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e3);
    t3 && (n = n.filter(function(t4) {
      return Object.getOwnPropertyDescriptor(e3, t4).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function le(e3) {
  for (var t3 = 1; t3 < arguments.length; t3++) {
    var r = null != arguments[t3] ? arguments[t3] : {};
    t3 % 2 ? ce(Object(r), true).forEach(function(t4) {
      pe(e3, t4, r[t4]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(r)) : ce(Object(r)).forEach(function(t4) {
      Object.defineProperty(e3, t4, Object.getOwnPropertyDescriptor(r, t4));
    });
  }
  return e3;
}
function de(e3, t3) {
  if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
  e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && he(e3, t3);
}
function ue(e3) {
  return (ue = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
    return e4.__proto__ || Object.getPrototypeOf(e4);
  })(e3);
}
function he(e3, t3) {
  return (he = Object.setPrototypeOf || function(e4, t4) {
    return e4.__proto__ = t4, e4;
  })(e3, t3);
}
function me(e3) {
  if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e3;
}
function fe(e3, t3) {
  return !t3 || "object" != typeof t3 && "function" != typeof t3 ? me(e3) : t3;
}
function ve(e3) {
  var t3 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if ("function" == typeof Proxy) return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (e4) {
      return false;
    }
  }();
  return function() {
    var r, n = ue(e3);
    if (t3) {
      var o = ue(this).constructor;
      r = Reflect.construct(n, arguments, o);
    } else r = n.apply(this, arguments);
    return fe(this, r);
  };
}
function ye(e3, t3) {
  switch (e3) {
    case "P":
      return t3.date({ width: "short" });
    case "PP":
      return t3.date({ width: "medium" });
    case "PPP":
      return t3.date({ width: "long" });
    case "PPPP":
    default:
      return t3.date({ width: "full" });
  }
}
function De(e3, t3) {
  switch (e3) {
    case "p":
      return t3.time({ width: "short" });
    case "pp":
      return t3.time({ width: "medium" });
    case "ppp":
      return t3.time({ width: "long" });
    case "pppp":
    default:
      return t3.time({ width: "full" });
  }
}
var we = { p: De, P: function(e3, t3) {
  var r, n = e3.match(/(P+)(p+)?/), o = n[1], a3 = n[2];
  if (!a3) return ye(e3, t3);
  switch (o) {
    case "P":
      r = t3.dateTime({ width: "short" });
      break;
    case "PP":
      r = t3.dateTime({ width: "medium" });
      break;
    case "PPP":
      r = t3.dateTime({ width: "long" });
      break;
    case "PPPP":
    default:
      r = t3.dateTime({ width: "full" });
  }
  return r.replace("{{date}}", ye(o, t3)).replace("{{time}}", De(a3, t3));
} };
var ke = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
function ge(e3) {
  var t3 = e3 ? "string" == typeof e3 || e3 instanceof String ? parseISO(e3) : toDate(e3) : /* @__PURE__ */ new Date();
  return Ce(t3) ? t3 : null;
}
function be(e3, t3, r, n) {
  var a3 = null, s3 = je(r) || Be(), p = true;
  return Array.isArray(t3) ? (t3.forEach(function(t4) {
    var r2 = parse(e3, t4, /* @__PURE__ */ new Date(), { locale: s3 });
    n && (p = Ce(r2) && e3 === format(r2, t4, { awareOfUnicodeTokens: true })), Ce(r2) && p && (a3 = r2);
  }), a3) : (a3 = parse(e3, t3, /* @__PURE__ */ new Date(), { locale: s3 }), n ? p = Ce(a3) && e3 === format(a3, t3, { awareOfUnicodeTokens: true }) : Ce(a3) || (t3 = t3.match(ke).map(function(e4) {
    var t4 = e4[0];
    return "p" === t4 || "P" === t4 ? s3 ? (0, we[t4])(e4, s3.formatLong) : t4 : e4;
  }).join(""), e3.length > 0 && (a3 = parse(e3, t3.slice(0, e3.length), /* @__PURE__ */ new Date())), Ce(a3) || (a3 = new Date(e3))), Ce(a3) && p ? a3 : null);
}
function Ce(e3) {
  return isValid(e3) && isAfter(e3, /* @__PURE__ */ new Date("1/1/1000"));
}
function _e(e3, t3, r) {
  if ("en" === r) return format(e3, t3, { awareOfUnicodeTokens: true });
  var n = je(r);
  return r && !n && console.warn('A locale object was not found for the provided string ["'.concat(r, '"].')), !n && Be() && je(Be()) && (n = je(Be())), format(e3, t3, { locale: n || null, awareOfUnicodeTokens: true });
}
function Se(e3, t3) {
  var r = t3.hour, n = void 0 === r ? 0 : r, o = t3.minute, a3 = void 0 === o ? 0 : o, s3 = t3.second;
  return setHours(setMinutes(setSeconds(e3, void 0 === s3 ? 0 : s3), a3), n);
}
function Me(e3, t3) {
  var r = t3 && je(t3) || Be() && je(Be());
  return getWeek(e3, r ? { locale: r } : null);
}
function Pe(e3, t3) {
  return _e(e3, "ddd", t3);
}
function Ee(e3) {
  return startOfDay(e3);
}
function Ne(e3, t3) {
  var r = je(t3 || Be());
  return startOfWeek(e3, { locale: r });
}
function Oe(e3) {
  return startOfMonth(e3);
}
function xe(e3) {
  return startOfQuarter(e3);
}
function Ye(e3, t3) {
  return e3 && t3 ? isSameYear(e3, t3) : !e3 && !t3;
}
function Te(e3, t3) {
  return e3 && t3 ? isSameMonth(e3, t3) : !e3 && !t3;
}
function Le(e3, t3) {
  return e3 && t3 ? isSameQuarter(e3, t3) : !e3 && !t3;
}
function Ie(e3, t3) {
  return e3 && t3 ? isSameDay(e3, t3) : !e3 && !t3;
}
function Fe(e3, t3) {
  return e3 && t3 ? isEqual(e3, t3) : !e3 && !t3;
}
function Re(e3, t3, r) {
  var n, o = startOfDay(t3), a3 = endOfDay(r);
  try {
    n = isWithinInterval(e3, { start: o, end: a3 });
  } catch (e4) {
    n = false;
  }
  return n;
}
function Be() {
  return ("undefined" != typeof window ? window : global).__localeId__;
}
function je(e3) {
  if ("string" == typeof e3) {
    var t3 = "undefined" != typeof window ? window : global;
    return t3.__localeData__ ? t3.__localeData__[e3] : null;
  }
  return e3;
}
function Ke(e3, t3) {
  return _e(setMonth(ge(), e3), "LLLL", t3);
}
function He(e3, t3) {
  return _e(setMonth(ge(), e3), "LLL", t3);
}
function Qe(e3, t3) {
  return _e(setQuarter(ge(), e3), "QQQ", t3);
}
function Ve(e3) {
  var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = t3.minDate, n = t3.maxDate, o = t3.excludeDates, a3 = t3.includeDates, s3 = t3.filterDate;
  return Je(e3, { minDate: r, maxDate: n }) || o && o.some(function(t4) {
    return Ie(e3, t4);
  }) || a3 && !a3.some(function(t4) {
    return Ie(e3, t4);
  }) || s3 && !s3(ge(e3)) || false;
}
function qe(e3) {
  var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = t3.excludeDates;
  return r && r.some(function(t4) {
    return Ie(e3, t4);
  }) || false;
}
function Ue(e3) {
  var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = t3.minDate, n = t3.maxDate, o = t3.excludeDates, a3 = t3.includeDates, s3 = t3.filterDate;
  return Je(e3, { minDate: r, maxDate: n }) || o && o.some(function(t4) {
    return Te(e3, t4);
  }) || a3 && !a3.some(function(t4) {
    return Te(e3, t4);
  }) || s3 && !s3(ge(e3)) || false;
}
function $e(e3, t3, r, n) {
  var o = getYear(e3), a3 = getMonth(e3), s3 = getYear(t3), p = getMonth(t3), i2 = getYear(n);
  return o === s3 && o === i2 ? a3 <= r && r <= p : o < s3 ? i2 === o && a3 <= r || i2 === s3 && p >= r || i2 < s3 && i2 > o : void 0;
}
function ze(e3) {
  var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = t3.minDate, n = t3.maxDate, o = t3.excludeDates, a3 = t3.includeDates, s3 = t3.filterDate;
  return Je(e3, { minDate: r, maxDate: n }) || o && o.some(function(t4) {
    return Le(e3, t4);
  }) || a3 && !a3.some(function(t4) {
    return Le(e3, t4);
  }) || s3 && !s3(ge(e3)) || false;
}
function Ge(e3, t3, r, n) {
  var o = getYear(e3), a3 = getQuarter(e3), s3 = getYear(t3), p = getQuarter(t3), i2 = getYear(n);
  return o === s3 && o === i2 ? a3 <= r && r <= p : o < s3 ? i2 === o && a3 <= r || i2 === s3 && p >= r || i2 < s3 && i2 > o : void 0;
}
function Je(e3) {
  var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = t3.minDate, n = t3.maxDate;
  return r && differenceInCalendarDays(e3, r) < 0 || n && differenceInCalendarDays(e3, n) > 0;
}
function Xe(e3, t3) {
  for (var r = t3.length, n = 0; n < r; n++) if (getHours(t3[n]) === getHours(e3) && getMinutes(t3[n]) === getMinutes(e3)) return true;
  return false;
}
function Ze(e3, t3) {
  var r = t3.minTime, n = t3.maxTime;
  if (!r || !n) throw new Error("Both minTime and maxTime props required");
  var o, a3 = ge(), s3 = setHours(setMinutes(a3, getMinutes(e3)), getHours(e3)), p = setHours(setMinutes(a3, getMinutes(r)), getHours(r)), i2 = setHours(setMinutes(a3, getMinutes(n)), getHours(n));
  try {
    o = !isWithinInterval(s3, { start: p, end: i2 });
  } catch (e4) {
    o = false;
  }
  return o;
}
function et(e3) {
  var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = t3.minDate, n = t3.includeDates, o = subMonths(e3, 1);
  return r && differenceInCalendarMonths(r, o) > 0 || n && n.every(function(e4) {
    return differenceInCalendarMonths(e4, o) > 0;
  }) || false;
}
function tt(e3) {
  var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = t3.maxDate, n = t3.includeDates, o = addMonths(e3, 1);
  return r && differenceInCalendarMonths(o, r) > 0 || n && n.every(function(e4) {
    return differenceInCalendarMonths(o, e4) > 0;
  }) || false;
}
function rt(e3) {
  var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = t3.minDate, n = t3.includeDates, o = subYears(e3, 1);
  return r && differenceInCalendarYears(r, o) > 0 || n && n.every(function(e4) {
    return differenceInCalendarYears(e4, o) > 0;
  }) || false;
}
function nt(e3) {
  var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = t3.maxDate, n = t3.includeDates, o = addYears(e3, 1);
  return r && differenceInCalendarYears(o, r) > 0 || n && n.every(function(e4) {
    return differenceInCalendarYears(o, e4) > 0;
  }) || false;
}
function ot(e3) {
  var t3 = e3.minDate, r = e3.includeDates;
  if (r && t3) {
    var n = r.filter(function(e4) {
      return differenceInCalendarDays(e4, t3) >= 0;
    });
    return min(n);
  }
  return r ? min(r) : t3;
}
function at(e3) {
  var t3 = e3.maxDate, r = e3.includeDates;
  if (r && t3) {
    var n = r.filter(function(e4) {
      return differenceInCalendarDays(e4, t3) <= 0;
    });
    return max(n);
  }
  return r ? max(r) : t3;
}
function st() {
  for (var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "react-datepicker__day--highlighted", n = /* @__PURE__ */ new Map(), o = 0, a3 = e3.length; o < a3; o++) {
    var s3 = e3[o];
    if (isDate(s3)) {
      var p = _e(s3, "MM.dd.yyyy"), i2 = n.get(p) || [];
      i2.includes(t3) || (i2.push(t3), n.set(p, i2));
    } else if ("object" === ne(s3)) {
      var c2 = Object.keys(s3), l = c2[0], d3 = s3[c2[0]];
      if ("string" == typeof l && d3.constructor === Array) for (var u2 = 0, h3 = d3.length; u2 < h3; u2++) {
        var m3 = _e(d3[u2], "MM.dd.yyyy"), f = n.get(m3) || [];
        f.includes(l) || (f.push(l), n.set(m3, f));
      }
    }
  }
  return n;
}
function pt(e3, t3, r, n, o) {
  for (var p = o.length, i2 = [], c2 = 0; c2 < p; c2++) {
    var l = addMinutes(addHours(e3, getHours(o[c2])), getMinutes(o[c2])), d3 = addMinutes(e3, (r + 1) * n);
    isAfter(l, t3) && isBefore(l, d3) && i2.push(o[c2]);
  }
  return i2;
}
function it(e3) {
  return e3 < 10 ? "0".concat(e3) : "".concat(e3);
}
function ct(e3, t3, r, n) {
  for (var o = [], a3 = 0; a3 < 2 * t3 + 1; a3++) {
    var s3 = e3 + t3 - a3, p = true;
    r && (p = getYear(r) <= s3), n && p && (p = getYear(n) >= s3), p && o.push(s3);
  }
  return o;
}
var lt = react_onclickoutside_es_default(function(r) {
  de(o, import_react2.default.Component);
  var n = ve(o);
  function o(t3) {
    var r2;
    oe(this, o), pe(me(r2 = n.call(this, t3)), "renderOptions", function() {
      var t4 = r2.props.year, n2 = r2.state.yearsList.map(function(n3) {
        return import_react2.default.createElement("div", { className: t4 === n3 ? "react-datepicker__year-option react-datepicker__year-option--selected_year" : "react-datepicker__year-option", key: n3, onClick: r2.onChange.bind(me(r2), n3) }, t4 === n3 ? import_react2.default.createElement("span", { className: "react-datepicker__year-option--selected" }, "✓") : "", n3);
      }), o2 = r2.props.minDate ? getYear(r2.props.minDate) : null, a4 = r2.props.maxDate ? getYear(r2.props.maxDate) : null;
      return a4 && r2.state.yearsList.find(function(e3) {
        return e3 === a4;
      }) || n2.unshift(import_react2.default.createElement("div", { className: "react-datepicker__year-option", key: "upcoming", onClick: r2.incrementYears }, import_react2.default.createElement("a", { className: "react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-upcoming" }))), o2 && r2.state.yearsList.find(function(e3) {
        return e3 === o2;
      }) || n2.push(import_react2.default.createElement("div", { className: "react-datepicker__year-option", key: "previous", onClick: r2.decrementYears }, import_react2.default.createElement("a", { className: "react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-previous" }))), n2;
    }), pe(me(r2), "onChange", function(e3) {
      r2.props.onChange(e3);
    }), pe(me(r2), "handleClickOutside", function() {
      r2.props.onCancel();
    }), pe(me(r2), "shiftYears", function(e3) {
      var t4 = r2.state.yearsList.map(function(t5) {
        return t5 + e3;
      });
      r2.setState({ yearsList: t4 });
    }), pe(me(r2), "incrementYears", function() {
      return r2.shiftYears(1);
    }), pe(me(r2), "decrementYears", function() {
      return r2.shiftYears(-1);
    });
    var a3 = t3.yearDropdownItemNumber, s3 = t3.scrollableYearDropdown, p = a3 || (s3 ? 10 : 5);
    return r2.state = { yearsList: ct(r2.props.year, p, r2.props.minDate, r2.props.maxDate) }, r2;
  }
  return se(o, [{ key: "render", value: function() {
    var r2 = (0, import_classnames.default)({ "react-datepicker__year-dropdown": true, "react-datepicker__year-dropdown--scrollable": this.props.scrollableYearDropdown });
    return import_react2.default.createElement("div", { className: r2 }, this.renderOptions());
  } }]), o;
}());
var dt = function(t3) {
  de(n, import_react2.default.Component);
  var r = ve(n);
  function n() {
    var t4;
    oe(this, n);
    for (var o = arguments.length, a3 = new Array(o), s3 = 0; s3 < o; s3++) a3[s3] = arguments[s3];
    return pe(me(t4 = r.call.apply(r, [this].concat(a3))), "state", { dropdownVisible: false }), pe(me(t4), "renderSelectOptions", function() {
      for (var r2 = t4.props.minDate ? getYear(t4.props.minDate) : 1900, n2 = t4.props.maxDate ? getYear(t4.props.maxDate) : 2100, o2 = [], a4 = r2; a4 <= n2; a4++) o2.push(import_react2.default.createElement("option", { key: a4, value: a4 }, a4));
      return o2;
    }), pe(me(t4), "onSelectChange", function(e3) {
      t4.onChange(e3.target.value);
    }), pe(me(t4), "renderSelectMode", function() {
      return import_react2.default.createElement("select", { value: t4.props.year, className: "react-datepicker__year-select", onChange: t4.onSelectChange }, t4.renderSelectOptions());
    }), pe(me(t4), "renderReadView", function(r2) {
      return import_react2.default.createElement("div", { key: "read", style: { visibility: r2 ? "visible" : "hidden" }, className: "react-datepicker__year-read-view", onClick: function(e3) {
        return t4.toggleDropdown(e3);
      } }, import_react2.default.createElement("span", { className: "react-datepicker__year-read-view--down-arrow" }), import_react2.default.createElement("span", { className: "react-datepicker__year-read-view--selected-year" }, t4.props.year));
    }), pe(me(t4), "renderDropdown", function() {
      return import_react2.default.createElement(lt, { key: "dropdown", year: t4.props.year, onChange: t4.onChange, onCancel: t4.toggleDropdown, minDate: t4.props.minDate, maxDate: t4.props.maxDate, scrollableYearDropdown: t4.props.scrollableYearDropdown, yearDropdownItemNumber: t4.props.yearDropdownItemNumber });
    }), pe(me(t4), "renderScrollMode", function() {
      var e3 = t4.state.dropdownVisible, r2 = [t4.renderReadView(!e3)];
      return e3 && r2.unshift(t4.renderDropdown()), r2;
    }), pe(me(t4), "onChange", function(e3) {
      t4.toggleDropdown(), e3 !== t4.props.year && t4.props.onChange(e3);
    }), pe(me(t4), "toggleDropdown", function(e3) {
      t4.setState({ dropdownVisible: !t4.state.dropdownVisible }, function() {
        t4.props.adjustDateOnChange && t4.handleYearChange(t4.props.date, e3);
      });
    }), pe(me(t4), "handleYearChange", function(e3, r2) {
      t4.onSelect(e3, r2), t4.setOpen();
    }), pe(me(t4), "onSelect", function(e3, r2) {
      t4.props.onSelect && t4.props.onSelect(e3, r2);
    }), pe(me(t4), "setOpen", function() {
      t4.props.setOpen && t4.props.setOpen(true);
    }), t4;
  }
  return se(n, [{ key: "render", value: function() {
    var t4;
    switch (this.props.dropdownMode) {
      case "scroll":
        t4 = this.renderScrollMode();
        break;
      case "select":
        t4 = this.renderSelectMode();
    }
    return import_react2.default.createElement("div", { className: "react-datepicker__year-dropdown-container react-datepicker__year-dropdown-container--".concat(this.props.dropdownMode) }, t4);
  } }]), n;
}();
var ut = react_onclickoutside_es_default(function(t3) {
  de(n, import_react2.default.Component);
  var r = ve(n);
  function n() {
    var t4;
    oe(this, n);
    for (var o = arguments.length, a3 = new Array(o), s3 = 0; s3 < o; s3++) a3[s3] = arguments[s3];
    return pe(me(t4 = r.call.apply(r, [this].concat(a3))), "renderOptions", function() {
      return t4.props.monthNames.map(function(r2, n2) {
        return import_react2.default.createElement("div", { className: t4.props.month === n2 ? "react-datepicker__month-option react-datepicker__month-option--selected_month" : "react-datepicker__month-option", key: r2, onClick: t4.onChange.bind(me(t4), n2) }, t4.props.month === n2 ? import_react2.default.createElement("span", { className: "react-datepicker__month-option--selected" }, "✓") : "", r2);
      });
    }), pe(me(t4), "onChange", function(e3) {
      return t4.props.onChange(e3);
    }), pe(me(t4), "handleClickOutside", function() {
      return t4.props.onCancel();
    }), t4;
  }
  return se(n, [{ key: "render", value: function() {
    return import_react2.default.createElement("div", { className: "react-datepicker__month-dropdown" }, this.renderOptions());
  } }]), n;
}());
var ht = function(t3) {
  de(n, import_react2.default.Component);
  var r = ve(n);
  function n() {
    var t4;
    oe(this, n);
    for (var o = arguments.length, a3 = new Array(o), s3 = 0; s3 < o; s3++) a3[s3] = arguments[s3];
    return pe(me(t4 = r.call.apply(r, [this].concat(a3))), "state", { dropdownVisible: false }), pe(me(t4), "renderSelectOptions", function(t5) {
      return t5.map(function(t6, r2) {
        return import_react2.default.createElement("option", { key: r2, value: r2 }, t6);
      });
    }), pe(me(t4), "renderSelectMode", function(r2) {
      return import_react2.default.createElement("select", { value: t4.props.month, className: "react-datepicker__month-select", onChange: function(e3) {
        return t4.onChange(e3.target.value);
      } }, t4.renderSelectOptions(r2));
    }), pe(me(t4), "renderReadView", function(r2, n2) {
      return import_react2.default.createElement("div", { key: "read", style: { visibility: r2 ? "visible" : "hidden" }, className: "react-datepicker__month-read-view", onClick: t4.toggleDropdown }, import_react2.default.createElement("span", { className: "react-datepicker__month-read-view--down-arrow" }), import_react2.default.createElement("span", { className: "react-datepicker__month-read-view--selected-month" }, n2[t4.props.month]));
    }), pe(me(t4), "renderDropdown", function(r2) {
      return import_react2.default.createElement(ut, { key: "dropdown", month: t4.props.month, monthNames: r2, onChange: t4.onChange, onCancel: t4.toggleDropdown });
    }), pe(me(t4), "renderScrollMode", function(e3) {
      var r2 = t4.state.dropdownVisible, n2 = [t4.renderReadView(!r2, e3)];
      return r2 && n2.unshift(t4.renderDropdown(e3)), n2;
    }), pe(me(t4), "onChange", function(e3) {
      t4.toggleDropdown(), e3 !== t4.props.month && t4.props.onChange(e3);
    }), pe(me(t4), "toggleDropdown", function() {
      return t4.setState({ dropdownVisible: !t4.state.dropdownVisible });
    }), t4;
  }
  return se(n, [{ key: "render", value: function() {
    var t4, r2 = this, n2 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(this.props.useShortMonthInDropdown ? function(e3) {
      return He(e3, r2.props.locale);
    } : function(e3) {
      return Ke(e3, r2.props.locale);
    });
    switch (this.props.dropdownMode) {
      case "scroll":
        t4 = this.renderScrollMode(n2);
        break;
      case "select":
        t4 = this.renderSelectMode(n2);
    }
    return import_react2.default.createElement("div", { className: "react-datepicker__month-dropdown-container react-datepicker__month-dropdown-container--".concat(this.props.dropdownMode) }, t4);
  } }]), n;
}();
function mt(e3, t3) {
  for (var r = [], n = Oe(e3), o = Oe(t3); !isAfter(n, o); ) r.push(ge(n)), n = addMonths(n, 1);
  return r;
}
var ft = react_onclickoutside_es_default(function(r) {
  de(o, import_react2.default.Component);
  var n = ve(o);
  function o(t3) {
    var r2;
    return oe(this, o), pe(me(r2 = n.call(this, t3)), "renderOptions", function() {
      return r2.state.monthYearsList.map(function(t4) {
        var n2 = getTime(t4), o2 = Ye(r2.props.date, t4) && Te(r2.props.date, t4);
        return import_react2.default.createElement("div", { className: o2 ? "react-datepicker__month-year-option --selected_month-year" : "react-datepicker__month-year-option", key: n2, onClick: r2.onChange.bind(me(r2), n2) }, o2 ? import_react2.default.createElement("span", { className: "react-datepicker__month-year-option--selected" }, "✓") : "", _e(t4, r2.props.dateFormat));
      });
    }), pe(me(r2), "onChange", function(e3) {
      return r2.props.onChange(e3);
    }), pe(me(r2), "handleClickOutside", function() {
      r2.props.onCancel();
    }), r2.state = { monthYearsList: mt(r2.props.minDate, r2.props.maxDate) }, r2;
  }
  return se(o, [{ key: "render", value: function() {
    var r2 = (0, import_classnames.default)({ "react-datepicker__month-year-dropdown": true, "react-datepicker__month-year-dropdown--scrollable": this.props.scrollableMonthYearDropdown });
    return import_react2.default.createElement("div", { className: r2 }, this.renderOptions());
  } }]), o;
}());
var vt = function(t3) {
  de(n, import_react2.default.Component);
  var r = ve(n);
  function n() {
    var t4;
    oe(this, n);
    for (var o = arguments.length, a3 = new Array(o), s3 = 0; s3 < o; s3++) a3[s3] = arguments[s3];
    return pe(me(t4 = r.call.apply(r, [this].concat(a3))), "state", { dropdownVisible: false }), pe(me(t4), "renderSelectOptions", function() {
      for (var r2 = Oe(t4.props.minDate), n2 = Oe(t4.props.maxDate), o2 = []; !isAfter(r2, n2); ) {
        var a4 = getTime(r2);
        o2.push(import_react2.default.createElement("option", { key: a4, value: a4 }, _e(r2, t4.props.dateFormat, t4.props.locale))), r2 = addMonths(r2, 1);
      }
      return o2;
    }), pe(me(t4), "onSelectChange", function(e3) {
      t4.onChange(e3.target.value);
    }), pe(me(t4), "renderSelectMode", function() {
      return import_react2.default.createElement("select", { value: getTime(Oe(t4.props.date)), className: "react-datepicker__month-year-select", onChange: t4.onSelectChange }, t4.renderSelectOptions());
    }), pe(me(t4), "renderReadView", function(r2) {
      var n2 = _e(t4.props.date, t4.props.dateFormat, t4.props.locale);
      return import_react2.default.createElement("div", { key: "read", style: { visibility: r2 ? "visible" : "hidden" }, className: "react-datepicker__month-year-read-view", onClick: function(e3) {
        return t4.toggleDropdown(e3);
      } }, import_react2.default.createElement("span", { className: "react-datepicker__month-year-read-view--down-arrow" }), import_react2.default.createElement("span", { className: "react-datepicker__month-year-read-view--selected-month-year" }, n2));
    }), pe(me(t4), "renderDropdown", function() {
      return import_react2.default.createElement(ft, { key: "dropdown", date: t4.props.date, dateFormat: t4.props.dateFormat, onChange: t4.onChange, onCancel: t4.toggleDropdown, minDate: t4.props.minDate, maxDate: t4.props.maxDate, scrollableMonthYearDropdown: t4.props.scrollableMonthYearDropdown });
    }), pe(me(t4), "renderScrollMode", function() {
      var e3 = t4.state.dropdownVisible, r2 = [t4.renderReadView(!e3)];
      return e3 && r2.unshift(t4.renderDropdown()), r2;
    }), pe(me(t4), "onChange", function(e3) {
      t4.toggleDropdown();
      var r2 = ge(parseInt(e3));
      Ye(t4.props.date, r2) && Te(t4.props.date, r2) || t4.props.onChange(r2);
    }), pe(me(t4), "toggleDropdown", function() {
      return t4.setState({ dropdownVisible: !t4.state.dropdownVisible });
    }), t4;
  }
  return se(n, [{ key: "render", value: function() {
    var t4;
    switch (this.props.dropdownMode) {
      case "scroll":
        t4 = this.renderScrollMode();
        break;
      case "select":
        t4 = this.renderSelectMode();
    }
    return import_react2.default.createElement("div", { className: "react-datepicker__month-year-dropdown-container react-datepicker__month-year-dropdown-container--".concat(this.props.dropdownMode) }, t4);
  } }]), n;
}();
var yt = function(r) {
  de(o, import_react2.default.Component);
  var n = ve(o);
  function o() {
    var r2;
    oe(this, o);
    for (var a3 = arguments.length, s3 = new Array(a3), p = 0; p < a3; p++) s3[p] = arguments[p];
    return pe(me(r2 = n.call.apply(n, [this].concat(s3))), "dayEl", import_react2.default.createRef()), pe(me(r2), "handleClick", function(e3) {
      !r2.isDisabled() && r2.props.onClick && r2.props.onClick(e3);
    }), pe(me(r2), "handleMouseEnter", function(e3) {
      !r2.isDisabled() && r2.props.onMouseEnter && r2.props.onMouseEnter(e3);
    }), pe(me(r2), "handleOnKeyDown", function(e3) {
      " " === e3.key && (e3.preventDefault(), e3.key = "Enter"), r2.props.handleOnKeyDown(e3);
    }), pe(me(r2), "isSameDay", function(e3) {
      return Ie(r2.props.day, e3);
    }), pe(me(r2), "isKeyboardSelected", function() {
      return !r2.props.disabledKeyboardNavigation && !r2.props.inline && !r2.isSameDay(r2.props.selected) && r2.isSameDay(r2.props.preSelection);
    }), pe(me(r2), "isDisabled", function() {
      return Ve(r2.props.day, r2.props);
    }), pe(me(r2), "isExcluded", function() {
      return qe(r2.props.day, r2.props);
    }), pe(me(r2), "getHighLightedClass", function(e3) {
      var t3 = r2.props, n2 = t3.day, o2 = t3.highlightDates;
      if (!o2) return false;
      var a4 = _e(n2, "MM.dd.yyyy");
      return o2.get(a4);
    }), pe(me(r2), "isInRange", function() {
      var e3 = r2.props, t3 = e3.day, n2 = e3.startDate, o2 = e3.endDate;
      return !(!n2 || !o2) && Re(t3, n2, o2);
    }), pe(me(r2), "isInSelectingRange", function() {
      var e3 = r2.props, t3 = e3.day, n2 = e3.selectsStart, o2 = e3.selectsEnd, a4 = e3.selectingDate, s4 = e3.startDate, p2 = e3.endDate;
      return !(!n2 && !o2 || !a4 || r2.isDisabled()) && (n2 && p2 && (isBefore(a4, p2) || Fe(a4, p2)) ? Re(t3, a4, p2) : !(!o2 || !s4 || !isAfter(a4, s4) && !Fe(a4, s4)) && Re(t3, s4, a4));
    }), pe(me(r2), "isSelectingRangeStart", function() {
      if (!r2.isInSelectingRange()) return false;
      var e3 = r2.props, t3 = e3.day, n2 = e3.selectingDate, o2 = e3.startDate;
      return Ie(t3, e3.selectsStart ? n2 : o2);
    }), pe(me(r2), "isSelectingRangeEnd", function() {
      if (!r2.isInSelectingRange()) return false;
      var e3 = r2.props, t3 = e3.day, n2 = e3.selectingDate, o2 = e3.endDate;
      return Ie(t3, e3.selectsEnd ? n2 : o2);
    }), pe(me(r2), "isRangeStart", function() {
      var e3 = r2.props, t3 = e3.day, n2 = e3.startDate, o2 = e3.endDate;
      return !(!n2 || !o2) && Ie(n2, t3);
    }), pe(me(r2), "isRangeEnd", function() {
      var e3 = r2.props, t3 = e3.day, n2 = e3.startDate, o2 = e3.endDate;
      return !(!n2 || !o2) && Ie(o2, t3);
    }), pe(me(r2), "isWeekend", function() {
      var e3 = getDay(r2.props.day);
      return 0 === e3 || 6 === e3;
    }), pe(me(r2), "isOutsideMonth", function() {
      return void 0 !== r2.props.month && r2.props.month !== getMonth(r2.props.day);
    }), pe(me(r2), "getClassNames", function(e3) {
      var n2 = r2.props.dayClassName ? r2.props.dayClassName(e3) : void 0;
      return (0, import_classnames.default)("react-datepicker__day", n2, "react-datepicker__day--" + Pe(r2.props.day), { "react-datepicker__day--disabled": r2.isDisabled(), "react-datepicker__day--excluded": r2.isExcluded(), "react-datepicker__day--selected": r2.isSameDay(r2.props.selected), "react-datepicker__day--keyboard-selected": r2.isKeyboardSelected(), "react-datepicker__day--range-start": r2.isRangeStart(), "react-datepicker__day--range-end": r2.isRangeEnd(), "react-datepicker__day--in-range": r2.isInRange(), "react-datepicker__day--in-selecting-range": r2.isInSelectingRange(), "react-datepicker__day--selecting-range-start": r2.isSelectingRangeStart(), "react-datepicker__day--selecting-range-end": r2.isSelectingRangeEnd(), "react-datepicker__day--today": r2.isSameDay(ge()), "react-datepicker__day--weekend": r2.isWeekend(), "react-datepicker__day--outside-month": r2.isOutsideMonth() }, r2.getHighLightedClass("react-datepicker__day--highlighted"));
    }), pe(me(r2), "getAriaLabel", function() {
      var e3 = r2.props, t3 = e3.day, n2 = e3.ariaLabelPrefixWhenEnabled, o2 = void 0 === n2 ? "Choose" : n2, a4 = e3.ariaLabelPrefixWhenDisabled, s4 = void 0 === a4 ? "Not available" : a4, p2 = r2.isDisabled() || r2.isExcluded() ? s4 : o2;
      return "".concat(p2, " ").concat(_e(t3, "PPPP"));
    }), pe(me(r2), "getTabIndex", function(e3, t3) {
      var n2 = e3 || r2.props.selected, o2 = t3 || r2.props.preSelection;
      return r2.isKeyboardSelected() || r2.isSameDay(n2) && Ie(o2, n2) ? 0 : -1;
    }), pe(me(r2), "handleFocusDay", function() {
      var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t3 = false;
      0 === r2.getTabIndex() && !e3.isInputFocused && r2.isSameDay(r2.props.preSelection) && (document.activeElement && document.activeElement !== document.body || (t3 = true), r2.props.containerRef && r2.props.containerRef.current && r2.props.containerRef.current.contains(document.activeElement) && document.activeElement.classList.contains("react-datepicker__day") && (t3 = true)), t3 && r2.dayEl.current.focus();
    }), pe(me(r2), "render", function() {
      return import_react2.default.createElement("div", { ref: r2.dayEl, className: r2.getClassNames(r2.props.day), onKeyDown: r2.handleOnKeyDown, onClick: r2.handleClick, onMouseEnter: r2.handleMouseEnter, tabIndex: r2.getTabIndex(), "aria-label": r2.getAriaLabel(), role: "button", "aria-disabled": r2.isDisabled() }, r2.props.renderDayContents ? r2.props.renderDayContents(getDate(r2.props.day), r2.props.day) : getDate(r2.props.day));
    }), r2;
  }
  return se(o, [{ key: "componentDidMount", value: function() {
    this.handleFocusDay();
  } }, { key: "componentDidUpdate", value: function(e3) {
    this.handleFocusDay(e3);
  } }]), o;
}();
var Dt = function(r) {
  de(o, import_react2.default.Component);
  var n = ve(o);
  function o() {
    var e3;
    oe(this, o);
    for (var t3 = arguments.length, r2 = new Array(t3), a3 = 0; a3 < t3; a3++) r2[a3] = arguments[a3];
    return pe(me(e3 = n.call.apply(n, [this].concat(r2))), "handleClick", function(t4) {
      e3.props.onClick && e3.props.onClick(t4);
    }), e3;
  }
  return se(o, [{ key: "render", value: function() {
    var r2 = this.props, n2 = r2.weekNumber, o2 = r2.ariaLabelPrefix, a3 = void 0 === o2 ? "week " : o2, s3 = { "react-datepicker__week-number": true, "react-datepicker__week-number--clickable": !!r2.onClick };
    return import_react2.default.createElement("div", { className: (0, import_classnames.default)(s3), "aria-label": "".concat(a3, " ").concat(this.props.weekNumber), onClick: this.handleClick }, n2);
  } }]), o;
}();
var wt = function(t3) {
  de(n, import_react2.default.Component);
  var r = ve(n);
  function n() {
    var t4;
    oe(this, n);
    for (var o = arguments.length, a3 = new Array(o), s3 = 0; s3 < o; s3++) a3[s3] = arguments[s3];
    return pe(me(t4 = r.call.apply(r, [this].concat(a3))), "handleDayClick", function(e3, r2) {
      t4.props.onDayClick && t4.props.onDayClick(e3, r2);
    }), pe(me(t4), "handleDayMouseEnter", function(e3) {
      t4.props.onDayMouseEnter && t4.props.onDayMouseEnter(e3);
    }), pe(me(t4), "handleWeekClick", function(e3, r2, n2) {
      "function" == typeof t4.props.onWeekSelect && t4.props.onWeekSelect(e3, r2, n2), t4.props.shouldCloseOnSelect && t4.props.setOpen(false);
    }), pe(me(t4), "formatWeekNumber", function(e3) {
      return t4.props.formatWeekNumber ? t4.props.formatWeekNumber(e3) : Me(e3, t4.props.locale);
    }), pe(me(t4), "renderDays", function() {
      var r2 = Ne(t4.props.day, t4.props.locale), n2 = [], o2 = t4.formatWeekNumber(r2);
      if (t4.props.showWeekNumber) {
        var a4 = t4.props.onWeekSelect ? t4.handleWeekClick.bind(me(t4), r2, o2) : void 0;
        n2.push(import_react2.default.createElement(Dt, { key: "W", weekNumber: o2, onClick: a4, ariaLabelPrefix: t4.props.ariaLabelPrefix }));
      }
      return n2.concat([0, 1, 2, 3, 4, 5, 6].map(function(n3) {
        var o3 = addDays(r2, n3);
        return import_react2.default.createElement(yt, { ariaLabelPrefixWhenEnabled: t4.props.chooseDayAriaLabelPrefix, ariaLabelPrefixWhenDisabled: t4.props.disabledDayAriaLabelPrefix, key: o3.valueOf(), day: o3, month: t4.props.month, onClick: t4.handleDayClick.bind(me(t4), o3), onMouseEnter: t4.handleDayMouseEnter.bind(me(t4), o3), minDate: t4.props.minDate, maxDate: t4.props.maxDate, excludeDates: t4.props.excludeDates, includeDates: t4.props.includeDates, inline: t4.props.inline, highlightDates: t4.props.highlightDates, selectingDate: t4.props.selectingDate, filterDate: t4.props.filterDate, preSelection: t4.props.preSelection, selected: t4.props.selected, selectsStart: t4.props.selectsStart, selectsEnd: t4.props.selectsEnd, startDate: t4.props.startDate, endDate: t4.props.endDate, dayClassName: t4.props.dayClassName, renderDayContents: t4.props.renderDayContents, disabledKeyboardNavigation: t4.props.disabledKeyboardNavigation, handleOnKeyDown: t4.props.handleOnKeyDown, isInputFocused: t4.props.isInputFocused, containerRef: t4.props.containerRef });
      }));
    }), t4;
  }
  return se(n, [{ key: "render", value: function() {
    return import_react2.default.createElement("div", { className: "react-datepicker__week" }, this.renderDays());
  } }], [{ key: "defaultProps", get: function() {
    return { shouldCloseOnSelect: true };
  } }]), n;
}();
var kt = function(r) {
  de(o, import_react2.default.Component);
  var n = ve(o);
  function o() {
    var r2;
    oe(this, o);
    for (var a3 = arguments.length, s3 = new Array(a3), c2 = 0; c2 < a3; c2++) s3[c2] = arguments[c2];
    return pe(me(r2 = n.call.apply(n, [this].concat(s3))), "handleDayClick", function(e3, t3) {
      r2.props.onDayClick && r2.props.onDayClick(e3, t3, r2.props.orderInDisplay);
    }), pe(me(r2), "handleDayMouseEnter", function(e3) {
      r2.props.onDayMouseEnter && r2.props.onDayMouseEnter(e3);
    }), pe(me(r2), "handleMouseLeave", function() {
      r2.props.onMouseLeave && r2.props.onMouseLeave();
    }), pe(me(r2), "isRangeStartMonth", function(e3) {
      var t3 = r2.props, n2 = t3.day, o2 = t3.startDate, a4 = t3.endDate;
      return !(!o2 || !a4) && Te(setMonth(n2, e3), o2);
    }), pe(me(r2), "isRangeStartQuarter", function(e3) {
      var t3 = r2.props, n2 = t3.day, o2 = t3.startDate, a4 = t3.endDate;
      return !(!o2 || !a4) && Le(setQuarter(n2, e3), o2);
    }), pe(me(r2), "isRangeEndMonth", function(e3) {
      var t3 = r2.props, n2 = t3.day, o2 = t3.startDate, a4 = t3.endDate;
      return !(!o2 || !a4) && Te(setMonth(n2, e3), a4);
    }), pe(me(r2), "isRangeEndQuarter", function(e3) {
      var t3 = r2.props, n2 = t3.day, o2 = t3.startDate, a4 = t3.endDate;
      return !(!o2 || !a4) && Le(setQuarter(n2, e3), a4);
    }), pe(me(r2), "isWeekInMonth", function(e3) {
      var t3 = r2.props.day, n2 = addDays(e3, 6);
      return Te(e3, t3) || Te(n2, t3);
    }), pe(me(r2), "renderWeeks", function() {
      for (var t3 = [], n2 = r2.props.fixedHeight, o2 = Ne(Oe(r2.props.day), r2.props.locale), a4 = 0, s4 = false; t3.push(import_react2.default.createElement(wt, { ariaLabelPrefix: r2.props.weekAriaLabelPrefix, chooseDayAriaLabelPrefix: r2.props.chooseDayAriaLabelPrefix, disabledDayAriaLabelPrefix: r2.props.disabledDayAriaLabelPrefix, key: a4, day: o2, month: getMonth(r2.props.day), onDayClick: r2.handleDayClick, onDayMouseEnter: r2.handleDayMouseEnter, onWeekSelect: r2.props.onWeekSelect, formatWeekNumber: r2.props.formatWeekNumber, locale: r2.props.locale, minDate: r2.props.minDate, maxDate: r2.props.maxDate, excludeDates: r2.props.excludeDates, includeDates: r2.props.includeDates, inline: r2.props.inline, highlightDates: r2.props.highlightDates, selectingDate: r2.props.selectingDate, filterDate: r2.props.filterDate, preSelection: r2.props.preSelection, selected: r2.props.selected, selectsStart: r2.props.selectsStart, selectsEnd: r2.props.selectsEnd, showWeekNumber: r2.props.showWeekNumbers, startDate: r2.props.startDate, endDate: r2.props.endDate, dayClassName: r2.props.dayClassName, setOpen: r2.props.setOpen, shouldCloseOnSelect: r2.props.shouldCloseOnSelect, disabledKeyboardNavigation: r2.props.disabledKeyboardNavigation, renderDayContents: r2.props.renderDayContents, handleOnKeyDown: r2.props.handleOnKeyDown, isInputFocused: r2.props.isInputFocused, containerRef: r2.props.containerRef })), !s4; ) {
        a4++, o2 = addWeeks(o2, 1);
        var p = n2 && a4 >= 6, c3 = !n2 && !r2.isWeekInMonth(o2);
        if (p || c3) {
          if (!r2.props.peekNextMonth) break;
          s4 = true;
        }
      }
      return t3;
    }), pe(me(r2), "onMonthClick", function(e3, t3) {
      r2.handleDayClick(Oe(setMonth(r2.props.day, t3)), e3);
    }), pe(me(r2), "onQuarterClick", function(e3, t3) {
      r2.handleDayClick(xe(setQuarter(r2.props.day, t3)), e3);
    }), pe(me(r2), "getMonthClassNames", function(e3) {
      var n2 = r2.props, o2 = n2.day, a4 = n2.startDate, s4 = n2.endDate, p = n2.selected, i2 = n2.minDate, c3 = n2.maxDate;
      return (0, import_classnames.default)("react-datepicker__month-text", "react-datepicker__month-".concat(e3), { "react-datepicker__month--disabled": (i2 || c3) && Ue(setMonth(o2, e3), r2.props), "react-datepicker__month--selected": getMonth(o2) === e3 && getYear(o2) === getYear(p), "react-datepicker__month--in-range": $e(a4, s4, e3, o2), "react-datepicker__month--range-start": r2.isRangeStartMonth(e3), "react-datepicker__month--range-end": r2.isRangeEndMonth(e3) });
    }), pe(me(r2), "getQuarterClassNames", function(e3) {
      var n2 = r2.props, o2 = n2.day, a4 = n2.startDate, s4 = n2.endDate, p = n2.selected, i2 = n2.minDate, c3 = n2.maxDate;
      return (0, import_classnames.default)("react-datepicker__quarter-text", "react-datepicker__quarter-".concat(e3), { "react-datepicker__quarter--disabled": (i2 || c3) && ze(setQuarter(o2, e3), r2.props), "react-datepicker__quarter--selected": getQuarter(o2) === e3 && getYear(o2) === getYear(p), "react-datepicker__quarter--in-range": Ge(a4, s4, e3, o2), "react-datepicker__quarter--range-start": r2.isRangeStartQuarter(e3), "react-datepicker__quarter--range-end": r2.isRangeEndQuarter(e3) });
    }), pe(me(r2), "renderMonths", function() {
      var t3 = r2.props, n2 = t3.showFullMonthYearPicker, o2 = t3.locale;
      return [[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10, 11]].map(function(t4, a4) {
        return import_react2.default.createElement("div", { className: "react-datepicker__month-wrapper", key: a4 }, t4.map(function(t5, a5) {
          return import_react2.default.createElement("div", { key: a5, onClick: function(e3) {
            r2.onMonthClick(e3, t5);
          }, className: r2.getMonthClassNames(t5) }, n2 ? Ke(t5, o2) : He(t5, o2));
        }));
      });
    }), pe(me(r2), "renderQuarters", function() {
      return import_react2.default.createElement("div", { className: "react-datepicker__quarter-wrapper" }, [1, 2, 3, 4].map(function(t3, n2) {
        return import_react2.default.createElement("div", { key: n2, onClick: function(e3) {
          r2.onQuarterClick(e3, t3);
        }, className: r2.getQuarterClassNames(t3) }, Qe(t3, r2.props.locale));
      }));
    }), pe(me(r2), "getClassNames", function() {
      var e3 = r2.props, n2 = e3.selectingDate, o2 = e3.selectsStart, a4 = e3.selectsEnd, s4 = e3.showMonthYearPicker, p = e3.showQuarterYearPicker;
      return (0, import_classnames.default)("react-datepicker__month", { "react-datepicker__month--selecting-range": n2 && (o2 || a4) }, { "react-datepicker__monthPicker": s4 }, { "react-datepicker__quarterPicker": p });
    }), r2;
  }
  return se(o, [{ key: "render", value: function() {
    var t3 = this.props, r2 = t3.showMonthYearPicker, n2 = t3.showQuarterYearPicker, o2 = t3.day, a3 = t3.ariaLabelPrefix, s3 = void 0 === a3 ? "month " : a3;
    return import_react2.default.createElement("div", { className: this.getClassNames(), onMouseLeave: this.handleMouseLeave, "aria-label": "".concat(s3, " ").concat(_e(o2, "yyyy-MM")) }, r2 ? this.renderMonths() : n2 ? this.renderQuarters() : this.renderWeeks());
  } }]), o;
}();
var gt = function(t3) {
  de(n, import_react2.default.Component);
  var r = ve(n);
  function n() {
    var t4;
    oe(this, n);
    for (var o = arguments.length, s3 = new Array(o), p = 0; p < o; p++) s3[p] = arguments[p];
    return pe(me(t4 = r.call.apply(r, [this].concat(s3))), "state", { height: null }), pe(me(t4), "handleClick", function(e3) {
      (t4.props.minTime || t4.props.maxTime) && Ze(e3, t4.props) || t4.props.excludeTimes && Xe(e3, t4.props.excludeTimes) || t4.props.includeTimes && !Xe(e3, t4.props.includeTimes) || t4.props.onChange(e3);
    }), pe(me(t4), "liClasses", function(e3, r2, n2) {
      var o2 = ["react-datepicker__time-list-item", t4.props.timeClassName ? t4.props.timeClassName(e3, r2, n2) : void 0];
      return t4.props.selected && r2 === getHours(e3) && n2 === getMinutes(e3) && o2.push("react-datepicker__time-list-item--selected"), ((t4.props.minTime || t4.props.maxTime) && Ze(e3, t4.props) || t4.props.excludeTimes && Xe(e3, t4.props.excludeTimes) || t4.props.includeTimes && !Xe(e3, t4.props.includeTimes)) && o2.push("react-datepicker__time-list-item--disabled"), t4.props.injectTimes && (60 * getHours(e3) + getMinutes(e3)) % t4.props.intervals != 0 && o2.push("react-datepicker__time-list-item--injected"), o2.join(" ");
    }), pe(me(t4), "renderTimes", function() {
      for (var r2 = [], n2 = t4.props.format ? t4.props.format : "p", o2 = t4.props.intervals, s4 = t4.props.selected || t4.props.openToDate || ge(), p2 = getHours(s4), i2 = getMinutes(s4), c2 = Ee(ge()), l = 1440 / o2, d3 = t4.props.injectTimes && t4.props.injectTimes.sort(function(e3, t5) {
        return e3 - t5;
      }), u2 = 0; u2 < l; u2++) {
        var h3 = addMinutes(c2, u2 * o2);
        if (r2.push(h3), d3) {
          var m3 = pt(c2, h3, u2, o2, d3);
          r2 = r2.concat(m3);
        }
      }
      return r2.map(function(r3, o3) {
        return import_react2.default.createElement("li", { key: o3, onClick: t4.handleClick.bind(me(t4), r3), className: t4.liClasses(r3, p2, i2), ref: function(e3) {
          p2 === getHours(r3) && i2 >= getMinutes(r3) && (t4.centerLi = e3);
        } }, _e(r3, n2, t4.props.locale));
      });
    }), t4;
  }
  return se(n, [{ key: "componentDidMount", value: function() {
    this.list.scrollTop = n.calcCenterPosition(this.props.monthRef ? this.props.monthRef.clientHeight - this.header.clientHeight : this.list.clientHeight, this.centerLi), this.props.monthRef && this.header && this.setState({ height: this.props.monthRef.clientHeight - this.header.clientHeight });
  } }, { key: "render", value: function() {
    var t4 = this, r2 = this.state.height;
    return import_react2.default.createElement("div", { className: "react-datepicker__time-container ".concat(this.props.todayButton ? "react-datepicker__time-container--with-today-button" : "") }, import_react2.default.createElement("div", { className: "react-datepicker__header react-datepicker__header--time", ref: function(e3) {
      t4.header = e3;
    } }, import_react2.default.createElement("div", { className: "react-datepicker-time__header" }, this.props.timeCaption)), import_react2.default.createElement("div", { className: "react-datepicker__time" }, import_react2.default.createElement("div", { className: "react-datepicker__time-box" }, import_react2.default.createElement("ul", { className: "react-datepicker__time-list", ref: function(e3) {
      t4.list = e3;
    }, style: r2 ? { height: r2 } : {} }, this.renderTimes()))));
  } }], [{ key: "defaultProps", get: function() {
    return { intervals: 30, onTimeChange: function() {
    }, todayButton: null, timeCaption: "Time" };
  } }]), n;
}();
pe(gt, "calcCenterPosition", function(e3, t3) {
  return t3.offsetTop - (e3 / 2 - t3.clientHeight / 2);
});
var bt = function(t3) {
  de(n, import_react2.default.Component);
  var r = ve(n);
  function n(e3) {
    var t4;
    return oe(this, n), pe(me(t4 = r.call(this, e3)), "handleYearClick", function(e4, r2) {
      t4.props.onDayClick && t4.props.onDayClick(e4, r2);
    }), pe(me(t4), "onYearClick", function(e4, r2) {
      var n2;
      t4.handleYearClick((n2 = setYear(t4.props.date, r2), startOfYear(n2)), e4);
    }), t4;
  }
  return se(n, [{ key: "render", value: function() {
    for (var t4 = this, r2 = [], n2 = this.props.date, o = function(n3, o2) {
      r2.push(import_react2.default.createElement("div", { onClick: function(e3) {
        t4.onYearClick(e3, n3);
      }, className: "react-datepicker__year-container-text", key: n3 }, n3));
    }, a3 = getYear(n2) - 11, s3 = 0; a3 <= getYear(n2); a3++, s3++) o(a3);
    return import_react2.default.createElement("div", { className: "react-datepicker__year-container" }, r2);
  } }]), n;
}();
var Ct = function(t3) {
  de(n, import_react2.default.Component);
  var r = ve(n);
  function n(t4) {
    var o;
    return oe(this, n), pe(me(o = r.call(this, t4)), "onTimeChange", function(e3) {
      o.setState({ time: e3 });
      var t5 = /* @__PURE__ */ new Date();
      t5.setHours(e3.split(":")[0]), t5.setMinutes(e3.split(":")[1]), o.props.onChange(t5);
    }), pe(me(o), "renderTimeInput", function() {
      var t5 = o.state.time, r2 = o.props, n2 = r2.timeString, a3 = r2.customTimeInput;
      return a3 ? import_react2.default.cloneElement(a3, { value: t5, onChange: o.onTimeChange }) : import_react2.default.createElement("input", { type: "time", className: "react-datepicker-time__input", placeholder: "Time", name: "time-input", required: true, value: t5, onChange: function(e3) {
        o.onTimeChange(e3.target.value || n2);
      } });
    }), o.state = { time: o.props.timeString }, o;
  }
  return se(n, [{ key: "render", value: function() {
    return import_react2.default.createElement("div", { className: "react-datepicker__input-time-container" }, import_react2.default.createElement("div", { className: "react-datepicker-time__caption" }, this.props.timeInputLabel), import_react2.default.createElement("div", { className: "react-datepicker-time__input-container" }, import_react2.default.createElement("div", { className: "react-datepicker-time__input" }, this.renderTimeInput())));
  } }]), n;
}();
function _t(t3) {
  var r = t3.className, n = t3.children, o = t3.showPopperArrow, a3 = t3.arrowProps, s3 = void 0 === a3 ? {} : a3;
  return import_react2.default.createElement("div", { className: r }, o && import_react2.default.createElement("div", ie({ className: "react-datepicker__triangle" }, s3)), n);
}
var St = ["react-datepicker__year-select", "react-datepicker__month-select", "react-datepicker__month-year-select"];
var Mt = function(r) {
  de(o, import_react2.default.Component);
  var n = ve(o);
  function o(r2) {
    var a3;
    return oe(this, o), pe(me(a3 = n.call(this, r2)), "handleClickOutside", function(e3) {
      a3.props.onClickOutside(e3);
    }), pe(me(a3), "setClickOutsideRef", function() {
      return a3.containerRef.current;
    }), pe(me(a3), "handleDropdownFocus", function(e3) {
      (function() {
        var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t3 = (e4.className || "").split(/\s+/);
        return St.some(function(e5) {
          return t3.indexOf(e5) >= 0;
        });
      })(e3.target) && a3.props.onDropdownFocus();
    }), pe(me(a3), "getDateInView", function() {
      var e3 = a3.props, t3 = e3.preSelection, r3 = e3.selected, n2 = e3.openToDate, o2 = ot(a3.props), s3 = at(a3.props), p = ge(), i2 = n2 || r3 || t3;
      return i2 || (o2 && isBefore(p, o2) ? o2 : s3 && isAfter(p, s3) ? s3 : p);
    }), pe(me(a3), "increaseMonth", function() {
      a3.setState(function(e3) {
        var t3 = e3.date;
        return { date: addMonths(t3, 1) };
      }, function() {
        return a3.handleMonthChange(a3.state.date);
      });
    }), pe(me(a3), "decreaseMonth", function() {
      a3.setState(function(e3) {
        var t3 = e3.date;
        return { date: subMonths(t3, 1) };
      }, function() {
        return a3.handleMonthChange(a3.state.date);
      });
    }), pe(me(a3), "handleDayClick", function(e3, t3, r3) {
      return a3.props.onSelect(e3, t3, r3);
    }), pe(me(a3), "handleDayMouseEnter", function(e3) {
      a3.setState({ selectingDate: e3 }), a3.props.onDayMouseEnter && a3.props.onDayMouseEnter(e3);
    }), pe(me(a3), "handleMonthMouseLeave", function() {
      a3.setState({ selectingDate: null }), a3.props.onMonthMouseLeave && a3.props.onMonthMouseLeave();
    }), pe(me(a3), "handleYearChange", function(e3) {
      a3.props.onYearChange && a3.props.onYearChange(e3);
    }), pe(me(a3), "handleMonthChange", function(e3) {
      a3.props.onMonthChange && a3.props.onMonthChange(e3), a3.props.adjustDateOnChange && (a3.props.onSelect && a3.props.onSelect(e3), a3.props.setOpen && a3.props.setOpen(true)), a3.props.setPreSelection && a3.props.setPreSelection(e3);
    }), pe(me(a3), "handleMonthYearChange", function(e3) {
      a3.handleYearChange(e3), a3.handleMonthChange(e3);
    }), pe(me(a3), "changeYear", function(e3) {
      a3.setState(function(t3) {
        var r3 = t3.date;
        return { date: setYear(r3, e3) };
      }, function() {
        return a3.handleYearChange(a3.state.date);
      });
    }), pe(me(a3), "changeMonth", function(e3) {
      a3.setState(function(t3) {
        var r3 = t3.date;
        return { date: setMonth(r3, e3) };
      }, function() {
        return a3.handleMonthChange(a3.state.date);
      });
    }), pe(me(a3), "changeMonthYear", function(e3) {
      a3.setState(function(t3) {
        var r3 = t3.date;
        return { date: setYear(setMonth(r3, getMonth(e3)), getYear(e3)) };
      }, function() {
        return a3.handleMonthYearChange(a3.state.date);
      });
    }), pe(me(a3), "header", function() {
      var r3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : a3.state.date, n2 = Ne(r3, a3.props.locale), o2 = [];
      return a3.props.showWeekNumbers && o2.push(import_react2.default.createElement("div", { key: "W", className: "react-datepicker__day-name" }, a3.props.weekLabel || "#")), o2.concat([0, 1, 2, 3, 4, 5, 6].map(function(r4) {
        var o3 = addDays(n2, r4), s3 = a3.formatWeekday(o3, a3.props.locale), i2 = a3.props.weekDayClassName ? a3.props.weekDayClassName(o3) : void 0;
        return import_react2.default.createElement("div", { key: r4, className: (0, import_classnames.default)("react-datepicker__day-name", i2) }, s3);
      }));
    }), pe(me(a3), "formatWeekday", function(e3, t3) {
      return a3.props.formatWeekDay ? function(e4, t4, r3) {
        return t4(_e(e4, "EEEE", r3));
      }(e3, a3.props.formatWeekDay, t3) : a3.props.useWeekdaysShort ? function(e4, t4) {
        return _e(e4, "EEE", t4);
      }(e3, t3) : function(e4, t4) {
        return _e(e4, "EEEEEE", t4);
      }(e3, t3);
    }), pe(me(a3), "decreaseYear", function() {
      a3.setState(function(e3) {
        var t3 = e3.date;
        return { date: subYears(t3, a3.props.showYearPicker ? 11 : 1) };
      }, function() {
        return a3.handleYearChange(a3.state.date);
      });
    }), pe(me(a3), "renderPreviousButton", function() {
      if (!a3.props.renderCustomHeader) {
        var t3 = a3.props.showMonthYearPicker ? rt(a3.state.date, a3.props) : et(a3.state.date, a3.props);
        if ((a3.props.forceShowMonthNavigation || a3.props.showDisabledMonthNavigation || !t3) && !a3.props.showTimeSelectOnly) {
          var r3 = ["react-datepicker__navigation", "react-datepicker__navigation--previous"], n2 = a3.decreaseMonth;
          (a3.props.showMonthYearPicker || a3.props.showQuarterYearPicker || a3.props.showYearPicker) && (n2 = a3.decreaseYear), t3 && a3.props.showDisabledMonthNavigation && (r3.push("react-datepicker__navigation--previous--disabled"), n2 = null);
          var o2 = a3.props.showMonthYearPicker || a3.props.showQuarterYearPicker, s3 = a3.props, p = s3.previousMonthAriaLabel, i2 = void 0 === p ? "Previous Month" : p, c2 = s3.previousYearAriaLabel, l = void 0 === c2 ? "Previous Year" : c2;
          return import_react2.default.createElement("button", { type: "button", className: r3.join(" "), onClick: n2, "aria-label": o2 ? l : i2 }, o2 ? a3.props.previousYearButtonLabel : a3.props.previousMonthButtonLabel);
        }
      }
    }), pe(me(a3), "increaseYear", function() {
      a3.setState(function(e3) {
        var t3 = e3.date;
        return { date: addYears(t3, a3.props.showYearPicker ? 11 : 1) };
      }, function() {
        return a3.handleYearChange(a3.state.date);
      });
    }), pe(me(a3), "renderNextButton", function() {
      if (!a3.props.renderCustomHeader) {
        var t3 = a3.props.showMonthYearPicker ? nt(a3.state.date, a3.props) : tt(a3.state.date, a3.props);
        if ((a3.props.forceShowMonthNavigation || a3.props.showDisabledMonthNavigation || !t3) && !a3.props.showTimeSelectOnly) {
          var r3 = ["react-datepicker__navigation", "react-datepicker__navigation--next"];
          a3.props.showTimeSelect && r3.push("react-datepicker__navigation--next--with-time"), a3.props.todayButton && r3.push("react-datepicker__navigation--next--with-today-button");
          var n2 = a3.increaseMonth;
          (a3.props.showMonthYearPicker || a3.props.showQuarterYearPicker || a3.props.showYearPicker) && (n2 = a3.increaseYear), t3 && a3.props.showDisabledMonthNavigation && (r3.push("react-datepicker__navigation--next--disabled"), n2 = null);
          var o2 = a3.props.showMonthYearPicker || a3.props.showQuarterYearPicker, s3 = a3.props, p = s3.nextMonthAriaLabel, i2 = void 0 === p ? "Next Month" : p, c2 = s3.nextYearAriaLabel, l = void 0 === c2 ? "Next Year" : c2;
          return import_react2.default.createElement("button", { type: "button", className: r3.join(" "), onClick: n2, "aria-label": o2 ? l : i2 }, o2 ? a3.props.nextYearButtonLabel : a3.props.nextMonthButtonLabel);
        }
      }
    }), pe(me(a3), "renderCurrentMonth", function() {
      var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : a3.state.date, r3 = ["react-datepicker__current-month"];
      return a3.props.showYearDropdown && r3.push("react-datepicker__current-month--hasYearDropdown"), a3.props.showMonthDropdown && r3.push("react-datepicker__current-month--hasMonthDropdown"), a3.props.showMonthYearDropdown && r3.push("react-datepicker__current-month--hasMonthYearDropdown"), import_react2.default.createElement("div", { className: r3.join(" ") }, _e(t3, a3.props.dateFormat, a3.props.locale));
    }), pe(me(a3), "renderYearDropdown", function() {
      var t3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
      if (a3.props.showYearDropdown && !t3) return import_react2.default.createElement(dt, { adjustDateOnChange: a3.props.adjustDateOnChange, date: a3.state.date, onSelect: a3.props.onSelect, setOpen: a3.props.setOpen, dropdownMode: a3.props.dropdownMode, onChange: a3.changeYear, minDate: a3.props.minDate, maxDate: a3.props.maxDate, year: getYear(a3.state.date), scrollableYearDropdown: a3.props.scrollableYearDropdown, yearDropdownItemNumber: a3.props.yearDropdownItemNumber });
    }), pe(me(a3), "renderMonthDropdown", function() {
      var t3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
      if (a3.props.showMonthDropdown && !t3) return import_react2.default.createElement(ht, { dropdownMode: a3.props.dropdownMode, locale: a3.props.locale, onChange: a3.changeMonth, month: getMonth(a3.state.date), useShortMonthInDropdown: a3.props.useShortMonthInDropdown });
    }), pe(me(a3), "renderMonthYearDropdown", function() {
      var t3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
      if (a3.props.showMonthYearDropdown && !t3) return import_react2.default.createElement(vt, { dropdownMode: a3.props.dropdownMode, locale: a3.props.locale, dateFormat: a3.props.dateFormat, onChange: a3.changeMonthYear, minDate: a3.props.minDate, maxDate: a3.props.maxDate, date: a3.state.date, scrollableMonthYearDropdown: a3.props.scrollableMonthYearDropdown });
    }), pe(me(a3), "renderTodayButton", function() {
      if (a3.props.todayButton && !a3.props.showTimeSelectOnly) return import_react2.default.createElement("div", { className: "react-datepicker__today-button", onClick: function(e3) {
        return a3.props.onSelect(startOfDay(ge()), e3);
      } }, a3.props.todayButton);
    }), pe(me(a3), "renderDefaultHeader", function(t3) {
      var r3 = t3.monthDate, n2 = t3.i;
      return import_react2.default.createElement("div", { className: "react-datepicker__header" }, a3.renderCurrentMonth(r3), import_react2.default.createElement("div", { className: "react-datepicker__header__dropdown react-datepicker__header__dropdown--".concat(a3.props.dropdownMode), onFocus: a3.handleDropdownFocus }, a3.renderMonthDropdown(0 !== n2), a3.renderMonthYearDropdown(0 !== n2), a3.renderYearDropdown(0 !== n2)), import_react2.default.createElement("div", { className: "react-datepicker__day-names" }, a3.header(r3)));
    }), pe(me(a3), "renderCustomHeader", function() {
      var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r3 = t3.monthDate, n2 = t3.i;
      if (0 !== n2 && void 0 !== n2) return null;
      var o2 = et(a3.state.date, a3.props), s3 = tt(a3.state.date, a3.props), p = rt(a3.state.date, a3.props), i2 = nt(a3.state.date, a3.props), c2 = !a3.props.showMonthYearPicker && !a3.props.showQuarterYearPicker && !a3.props.showYearPicker;
      return import_react2.default.createElement("div", { className: "react-datepicker__header react-datepicker__header--custom", onFocus: a3.props.onDropdownFocus }, a3.props.renderCustomHeader(le(le({}, a3.state), {}, { changeMonth: a3.changeMonth, changeYear: a3.changeYear, decreaseMonth: a3.decreaseMonth, increaseMonth: a3.increaseMonth, decreaseYear: a3.decreaseYear, increaseYear: a3.increaseYear, prevMonthButtonDisabled: o2, nextMonthButtonDisabled: s3, prevYearButtonDisabled: p, nextYearButtonDisabled: i2 })), c2 && import_react2.default.createElement("div", { className: "react-datepicker__day-names" }, a3.header(r3)));
    }), pe(me(a3), "renderYearHeader", function() {
      return import_react2.default.createElement("div", { className: "react-datepicker__header react-datepicker-year-header" }, a3.props.showYearPicker ? "".concat(getYear(a3.state.date) - 11, " - ").concat(getYear(a3.state.date)) : getYear(a3.state.date));
    }), pe(me(a3), "renderHeader", function(e3) {
      switch (true) {
        case void 0 !== a3.props.renderCustomHeader:
          return a3.renderCustomHeader(e3);
        case (a3.props.showMonthYearPicker || a3.props.showQuarterYearPicker || a3.props.showYearPicker):
          return a3.renderYearHeader(e3);
        default:
          return a3.renderDefaultHeader(e3);
      }
    }), pe(me(a3), "renderMonths", function() {
      if (!a3.props.showTimeSelectOnly && !a3.props.showYearPicker) {
        for (var t3 = [], r3 = a3.props.showPreviousMonths ? a3.props.monthsShown - 1 : 0, n2 = subMonths(a3.state.date, r3), o2 = 0; o2 < a3.props.monthsShown; ++o2) {
          var s3 = o2 - a3.props.monthSelectedIn, p = addMonths(n2, s3), i2 = "month-".concat(o2);
          t3.push(import_react2.default.createElement("div", { key: i2, ref: function(e3) {
            a3.monthContainer = e3;
          }, className: "react-datepicker__month-container" }, a3.renderHeader({ monthDate: p, i: o2 }), import_react2.default.createElement(kt, { chooseDayAriaLabelPrefix: a3.props.chooseDayAriaLabelPrefix, disabledDayAriaLabelPrefix: a3.props.disabledDayAriaLabelPrefix, weekAriaLabelPrefix: a3.props.weekAriaLabelPrefix, onChange: a3.changeMonthYear, day: p, dayClassName: a3.props.dayClassName, monthClassName: a3.props.monthClassName, onDayClick: a3.handleDayClick, handleOnKeyDown: a3.props.handleOnKeyDown, onDayMouseEnter: a3.handleDayMouseEnter, onMouseLeave: a3.handleMonthMouseLeave, onWeekSelect: a3.props.onWeekSelect, orderInDisplay: o2, formatWeekNumber: a3.props.formatWeekNumber, locale: a3.props.locale, minDate: a3.props.minDate, maxDate: a3.props.maxDate, excludeDates: a3.props.excludeDates, highlightDates: a3.props.highlightDates, selectingDate: a3.state.selectingDate, includeDates: a3.props.includeDates, inline: a3.props.inline, fixedHeight: a3.props.fixedHeight, filterDate: a3.props.filterDate, preSelection: a3.props.preSelection, selected: a3.props.selected, selectsStart: a3.props.selectsStart, selectsEnd: a3.props.selectsEnd, showWeekNumbers: a3.props.showWeekNumbers, startDate: a3.props.startDate, endDate: a3.props.endDate, peekNextMonth: a3.props.peekNextMonth, setOpen: a3.props.setOpen, shouldCloseOnSelect: a3.props.shouldCloseOnSelect, renderDayContents: a3.props.renderDayContents, disabledKeyboardNavigation: a3.props.disabledKeyboardNavigation, showMonthYearPicker: a3.props.showMonthYearPicker, showFullMonthYearPicker: a3.props.showFullMonthYearPicker, showYearPicker: a3.props.showYearPicker, showQuarterYearPicker: a3.props.showQuarterYearPicker, isInputFocused: a3.props.isInputFocused, containerRef: a3.containerRef })));
        }
        return t3;
      }
    }), pe(me(a3), "renderYears", function() {
      if (!a3.props.showTimeSelectOnly) return a3.props.showYearPicker ? import_react2.default.createElement("div", { className: "react-datepicker__year" }, a3.renderHeader(), import_react2.default.createElement(bt, { onDayClick: a3.handleDayClick, date: a3.state.date })) : void 0;
    }), pe(me(a3), "renderTimeSection", function() {
      if (a3.props.showTimeSelect && (a3.state.monthContainer || a3.props.showTimeSelectOnly)) return import_react2.default.createElement(gt, { selected: a3.props.selected, openToDate: a3.props.openToDate, onChange: a3.props.onTimeChange, timeClassName: a3.props.timeClassName, format: a3.props.timeFormat, includeTimes: a3.props.includeTimes, intervals: a3.props.timeIntervals, minTime: a3.props.minTime, maxTime: a3.props.maxTime, excludeTimes: a3.props.excludeTimes, timeCaption: a3.props.timeCaption, todayButton: a3.props.todayButton, showMonthDropdown: a3.props.showMonthDropdown, showMonthYearDropdown: a3.props.showMonthYearDropdown, showYearDropdown: a3.props.showYearDropdown, withPortal: a3.props.withPortal, monthRef: a3.state.monthContainer, injectTimes: a3.props.injectTimes, locale: a3.props.locale });
    }), pe(me(a3), "renderInputTimeSection", function() {
      var t3 = new Date(a3.props.selected), r3 = "".concat(it(t3.getHours()), ":").concat(it(t3.getMinutes()));
      if (a3.props.showTimeInput) return import_react2.default.createElement(Ct, { timeString: r3, timeInputLabel: a3.props.timeInputLabel, onChange: a3.props.onTimeChange, customTimeInput: a3.props.customTimeInput });
    }), a3.containerRef = import_react2.default.createRef(), a3.state = { date: a3.getDateInView(), selectingDate: null, monthContainer: null }, a3;
  }
  return se(o, null, [{ key: "defaultProps", get: function() {
    return { onDropdownFocus: function() {
    }, monthsShown: 1, monthSelectedIn: 0, forceShowMonthNavigation: false, timeCaption: "Time", previousYearButtonLabel: "Previous Year", nextYearButtonLabel: "Next Year", previousMonthButtonLabel: "Previous Month", nextMonthButtonLabel: "Next Month", customTimeInput: null };
  } }]), se(o, [{ key: "componentDidMount", value: function() {
    var e3 = this;
    this.props.showTimeSelect && (this.assignMonthContainer = void e3.setState({ monthContainer: e3.monthContainer }));
  } }, { key: "componentDidUpdate", value: function(e3) {
    this.props.preSelection && !Ie(this.props.preSelection, e3.preSelection) ? this.setState({ date: this.props.preSelection }) : this.props.openToDate && !Ie(this.props.openToDate, e3.openToDate) && this.setState({ date: this.props.openToDate });
  } }, { key: "render", value: function() {
    var r2 = this.props.container || _t;
    return import_react2.default.createElement("div", { ref: this.containerRef }, import_react2.default.createElement(r2, { className: (0, import_classnames.default)("react-datepicker", this.props.className, { "react-datepicker--time-only": this.props.showTimeSelectOnly }), showPopperArrow: this.props.showPopperArrow }, this.renderPreviousButton(), this.renderNextButton(), this.renderMonths(), this.renderYears(), this.renderTodayButton(), this.renderTimeSection(), this.renderInputTimeSection(), this.props.children));
  } }]), o;
}();
var Pt = function(e3) {
  return !e3.disabled && -1 !== e3.tabIndex;
};
var Et = function(t3) {
  de(n, import_react2.default.Component);
  var r = ve(n);
  function n(t4) {
    var o;
    return oe(this, n), pe(me(o = r.call(this, t4)), "getTabChildren", function() {
      return Array.prototype.slice.call(o.tabLoopRef.current.querySelectorAll("[tabindex], a, button, input, select, textarea"), 1, -1).filter(Pt);
    }), pe(me(o), "handleFocusStart", function(e3) {
      var t5 = o.getTabChildren();
      t5 && t5.length > 1 && t5[t5.length - 1].focus();
    }), pe(me(o), "handleFocusEnd", function(e3) {
      var t5 = o.getTabChildren();
      t5 && t5.length > 1 && t5[0].focus();
    }), o.tabLoopRef = import_react2.default.createRef(), o;
  }
  return se(n, null, [{ key: "defaultProps", get: function() {
    return { enableTabLoop: true };
  } }]), se(n, [{ key: "render", value: function() {
    return this.props.enableTabLoop ? import_react2.default.createElement("div", { className: "react-datepicker__tab-loop", ref: this.tabLoopRef }, import_react2.default.createElement("div", { className: "react-datepicker__tab-loop__start", tabIndex: "0", onFocus: this.handleFocusStart }), this.props.children, import_react2.default.createElement("div", { className: "react-datepicker__tab-loop__end", tabIndex: "0", onFocus: this.handleFocusEnd })) : this.props.children;
  } }]), n;
}();
var Nt = function(r) {
  de(o, import_react2.default.Component);
  var n = ve(o);
  function o() {
    return oe(this, o), n.apply(this, arguments);
  }
  return se(o, [{ key: "render", value: function() {
    var r2, n2 = this.props, o2 = n2.className, a3 = n2.wrapperClassName, s3 = n2.hidePopper, p = n2.popperComponent, i2 = n2.popperModifiers, c2 = n2.popperPlacement, l = n2.popperProps, d3 = n2.targetComponent, u2 = n2.enableTabLoop, h3 = n2.popperOnKeyDown;
    if (!s3) {
      var m3 = (0, import_classnames.default)("react-datepicker-popper", o2);
      r2 = import_react2.default.createElement(Popper2, ie({ modifiers: i2, placement: c2 }, l), function(t3) {
        var r3 = t3.ref, n3 = t3.style, o3 = t3.placement, a4 = t3.arrowProps;
        return import_react2.default.createElement(Et, { enableTabLoop: u2 }, import_react2.default.createElement("div", ie({ ref: r3, style: n3 }, { className: m3, "data-placement": o3, onKeyDown: h3 }), import_react2.default.cloneElement(p, { arrowProps: a4 })));
      });
    }
    this.props.popperContainer && (r2 = import_react2.default.createElement(this.props.popperContainer, {}, r2));
    var f = (0, import_classnames.default)("react-datepicker-wrapper", a3);
    return import_react2.default.createElement(Manager, { className: "react-datepicker-manager" }, import_react2.default.createElement(Reference, null, function(t3) {
      var r3 = t3.ref;
      return import_react2.default.createElement("div", { ref: r3, className: f }, d3);
    }), r2);
  } }], [{ key: "defaultProps", get: function() {
    return { hidePopper: true, popperModifiers: { preventOverflow: { enabled: true, escapeWithReference: true, boundariesElement: "viewport" } }, popperProps: {}, popperPlacement: "bottom-start" };
  } }]), o;
}();
var Ot = react_onclickoutside_es_default(Mt);
var xt = function(n) {
  de(a3, import_react2.default.Component);
  var o = ve(a3);
  function a3(n2) {
    var s3;
    return oe(this, a3), pe(me(s3 = o.call(this, n2)), "getPreSelection", function() {
      return s3.props.openToDate ? s3.props.openToDate : s3.props.selectsEnd && s3.props.startDate ? s3.props.startDate : s3.props.selectsStart && s3.props.endDate ? s3.props.endDate : ge();
    }), pe(me(s3), "calcInitialState", function() {
      var e3 = s3.getPreSelection(), t3 = ot(s3.props), r = at(s3.props), n3 = t3 && isBefore(e3, t3) ? t3 : r && isAfter(e3, r) ? r : e3;
      return { open: s3.props.startOpen || false, preventFocus: false, preSelection: s3.props.selected ? s3.props.selected : n3, highlightDates: st(s3.props.highlightDates), focused: false };
    }), pe(me(s3), "clearPreventFocusTimeout", function() {
      s3.preventFocusTimeout && clearTimeout(s3.preventFocusTimeout);
    }), pe(me(s3), "setFocus", function() {
      s3.input && s3.input.focus && s3.input.focus();
    }), pe(me(s3), "setBlur", function() {
      s3.input && s3.input.blur && s3.input.blur(), s3.cancelFocusInput();
    }), pe(me(s3), "setOpen", function(e3) {
      var t3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
      s3.setState({ open: e3, preSelection: e3 && s3.state.open ? s3.state.preSelection : s3.calcInitialState().preSelection, lastPreSelectChange: Tt }, function() {
        e3 || s3.setState(function(e4) {
          return { focused: !!t3 && e4.focused };
        }, function() {
          !t3 && s3.setBlur(), s3.setState({ inputValue: null });
        });
      });
    }), pe(me(s3), "inputOk", function() {
      return isDate(s3.state.preSelection);
    }), pe(me(s3), "isCalendarOpen", function() {
      return void 0 === s3.props.open ? s3.state.open && !s3.props.disabled && !s3.props.readOnly : s3.props.open;
    }), pe(me(s3), "handleFocus", function(e3) {
      s3.state.preventFocus || (s3.props.onFocus(e3), s3.props.preventOpenOnFocus || s3.props.readOnly || s3.setOpen(true)), s3.setState({ focused: true });
    }), pe(me(s3), "cancelFocusInput", function() {
      clearTimeout(s3.inputFocusTimeout), s3.inputFocusTimeout = null;
    }), pe(me(s3), "deferFocusInput", function() {
      s3.cancelFocusInput(), s3.inputFocusTimeout = setTimeout(function() {
        return s3.setFocus();
      }, 1);
    }), pe(me(s3), "handleDropdownFocus", function() {
      s3.cancelFocusInput();
    }), pe(me(s3), "handleBlur", function(e3) {
      (!s3.state.open || s3.props.withPortal || s3.props.showTimeInput) && s3.props.onBlur(e3), s3.setState({ focused: false });
    }), pe(me(s3), "handleCalendarClickOutside", function(e3) {
      s3.props.inline || s3.setOpen(false), s3.props.onClickOutside(e3), s3.props.withPortal && e3.preventDefault();
    }), pe(me(s3), "handleChange", function() {
      for (var e3 = arguments.length, t3 = new Array(e3), r = 0; r < e3; r++) t3[r] = arguments[r];
      var n3 = t3[0];
      if (!s3.props.onChangeRaw || (s3.props.onChangeRaw.apply(me(s3), t3), "function" == typeof n3.isDefaultPrevented && !n3.isDefaultPrevented())) {
        s3.setState({ inputValue: n3.target.value, lastPreSelectChange: Yt });
        var o2 = be(n3.target.value, s3.props.dateFormat, s3.props.locale, s3.props.strictParsing);
        !o2 && n3.target.value || s3.setSelected(o2, n3, true);
      }
    }), pe(me(s3), "handleSelect", function(e3, t3, r) {
      s3.setState({ preventFocus: true }, function() {
        return s3.preventFocusTimeout = setTimeout(function() {
          return s3.setState({ preventFocus: false });
        }, 50), s3.preventFocusTimeout;
      }), s3.setSelected(e3, t3, false, r), !s3.props.shouldCloseOnSelect || s3.props.showTimeSelect ? s3.setPreSelection(e3) : s3.props.inline || s3.setOpen(false);
    }), pe(me(s3), "setSelected", function(e3, t3, r, n3) {
      var o2 = e3;
      null !== o2 && Ve(o2, s3.props) || (Fe(s3.props.selected, o2) && !s3.props.allowSameDay || (null !== o2 && (!s3.props.selected || r && (s3.props.showTimeSelect || s3.props.showTimeSelectOnly || s3.props.showTimeInput) || (o2 = Se(o2, { hour: getHours(s3.props.selected), minute: getMinutes(s3.props.selected), second: getSeconds(s3.props.selected) })), s3.props.inline || s3.setState({ preSelection: o2 }), s3.props.inline && s3.props.monthsShown > 1 && !s3.props.inlineFocusSelectedMonth && s3.setState({ monthSelectedIn: n3 })), s3.props.onChange(o2, t3)), s3.props.onSelect(o2, t3), r || s3.setState({ inputValue: null }));
    }), pe(me(s3), "setPreSelection", function(e3) {
      var t3 = void 0 !== s3.props.minDate, r = void 0 !== s3.props.maxDate, n3 = true;
      e3 && (t3 && r ? n3 = Re(e3, s3.props.minDate, s3.props.maxDate) : t3 ? n3 = isAfter(e3, s3.props.minDate) : r && (n3 = isBefore(e3, s3.props.maxDate))), n3 && s3.setState({ preSelection: e3 });
    }), pe(me(s3), "handleTimeChange", function(e3) {
      var t3 = Se(s3.props.selected ? s3.props.selected : s3.getPreSelection(), { hour: getHours(e3), minute: getMinutes(e3) });
      s3.setState({ preSelection: t3 }), s3.props.onChange(t3), s3.props.shouldCloseOnSelect && s3.setOpen(false), s3.props.showTimeInput && s3.setOpen(true), s3.setState({ inputValue: null });
    }), pe(me(s3), "onInputClick", function() {
      s3.props.disabled || s3.props.readOnly || s3.setOpen(true), s3.props.onInputClick();
    }), pe(me(s3), "onInputKeyDown", function(e3) {
      s3.props.onKeyDown(e3);
      var t3 = e3.key;
      if (s3.state.open || s3.props.inline || s3.props.preventOpenOnFocus) {
        if (s3.state.open) {
          if ("ArrowDown" === t3 || "ArrowUp" === t3) {
            e3.preventDefault();
            var r = s3.calendar.componentNode && s3.calendar.componentNode.querySelector('.react-datepicker__day[tabindex="0"]');
            return void (r && r.focus());
          }
          var n3 = ge(s3.state.preSelection);
          "Enter" === t3 ? (e3.preventDefault(), s3.inputOk() && s3.state.lastPreSelectChange === Tt ? (s3.handleSelect(n3, e3), !s3.props.shouldCloseOnSelect && s3.setPreSelection(n3)) : s3.setOpen(false)) : "Escape" === t3 && (e3.preventDefault(), s3.setOpen(false)), s3.inputOk() || s3.props.onInputError({ code: 1, msg: "Date input not valid." });
        }
      } else "ArrowDown" !== t3 && "ArrowUp" !== t3 && "Enter" !== t3 || s3.onInputClick();
    }), pe(me(s3), "onDayKeyDown", function(e3) {
      s3.props.onKeyDown(e3);
      var t3 = e3.key, r = ge(s3.state.preSelection);
      if ("Enter" === t3) e3.preventDefault(), s3.handleSelect(r, e3), !s3.props.shouldCloseOnSelect && s3.setPreSelection(r);
      else if ("Escape" === t3) e3.preventDefault(), s3.setOpen(false), s3.inputOk() || s3.props.onInputError({ code: 1, msg: "Date input not valid." });
      else if (!s3.props.disabledKeyboardNavigation) {
        var n3;
        switch (t3) {
          case "ArrowLeft":
            n3 = subDays(r, 1);
            break;
          case "ArrowRight":
            n3 = addDays(r, 1);
            break;
          case "ArrowUp":
            n3 = subWeeks(r, 1);
            break;
          case "ArrowDown":
            n3 = addWeeks(r, 1);
            break;
          case "PageUp":
            n3 = subMonths(r, 1);
            break;
          case "PageDown":
            n3 = addMonths(r, 1);
            break;
          case "Home":
            n3 = subYears(r, 1);
            break;
          case "End":
            n3 = addYears(r, 1);
        }
        if (!n3) return void (s3.props.onInputError && s3.props.onInputError({ code: 1, msg: "Date input not valid." }));
        e3.preventDefault(), s3.setState({ lastPreSelectChange: Tt }), s3.props.adjustDateOnChange && s3.setSelected(n3), s3.setPreSelection(n3);
      }
    }), pe(me(s3), "onPopperKeyDown", function(e3) {
      "Escape" === e3.key && (e3.preventDefault(), s3.setState({ preventFocus: true }, function() {
        s3.setOpen(false), setTimeout(function() {
          s3.setFocus(), s3.setState({ preventFocus: false });
        });
      }));
    }), pe(me(s3), "onClearClick", function(e3) {
      e3 && e3.preventDefault && e3.preventDefault(), s3.props.onChange(null, e3), s3.setState({ inputValue: null });
    }), pe(me(s3), "clear", function() {
      s3.onClearClick();
    }), pe(me(s3), "renderCalendar", function() {
      return s3.props.inline || s3.isCalendarOpen() ? import_react2.default.createElement(Ot, { ref: function(e3) {
        s3.calendar = e3;
      }, locale: s3.props.locale, chooseDayAriaLabelPrefix: s3.props.chooseDayAriaLabelPrefix, disabledDayAriaLabelPrefix: s3.props.disabledDayAriaLabelPrefix, weekAriaLabelPrefix: s3.props.weekAriaLabelPrefix, adjustDateOnChange: s3.props.adjustDateOnChange, setOpen: s3.setOpen, shouldCloseOnSelect: s3.props.shouldCloseOnSelect, dateFormat: s3.props.dateFormatCalendar, useWeekdaysShort: s3.props.useWeekdaysShort, formatWeekDay: s3.props.formatWeekDay, dropdownMode: s3.props.dropdownMode, selected: s3.props.selected, preSelection: s3.state.preSelection, onSelect: s3.handleSelect, onWeekSelect: s3.props.onWeekSelect, openToDate: s3.props.openToDate, minDate: s3.props.minDate, maxDate: s3.props.maxDate, selectsStart: s3.props.selectsStart, selectsEnd: s3.props.selectsEnd, startDate: s3.props.startDate, endDate: s3.props.endDate, excludeDates: s3.props.excludeDates, filterDate: s3.props.filterDate, onClickOutside: s3.handleCalendarClickOutside, formatWeekNumber: s3.props.formatWeekNumber, highlightDates: s3.state.highlightDates, includeDates: s3.props.includeDates, includeTimes: s3.props.includeTimes, injectTimes: s3.props.injectTimes, inline: s3.props.inline, peekNextMonth: s3.props.peekNextMonth, showMonthDropdown: s3.props.showMonthDropdown, showPreviousMonths: s3.props.showPreviousMonths, useShortMonthInDropdown: s3.props.useShortMonthInDropdown, showMonthYearDropdown: s3.props.showMonthYearDropdown, showWeekNumbers: s3.props.showWeekNumbers, showYearDropdown: s3.props.showYearDropdown, withPortal: s3.props.withPortal, forceShowMonthNavigation: s3.props.forceShowMonthNavigation, showDisabledMonthNavigation: s3.props.showDisabledMonthNavigation, scrollableYearDropdown: s3.props.scrollableYearDropdown, scrollableMonthYearDropdown: s3.props.scrollableMonthYearDropdown, todayButton: s3.props.todayButton, weekLabel: s3.props.weekLabel, outsideClickIgnoreClass: "react-datepicker-ignore-onclickoutside", fixedHeight: s3.props.fixedHeight, monthsShown: s3.props.monthsShown, monthSelectedIn: s3.state.monthSelectedIn, onDropdownFocus: s3.handleDropdownFocus, onMonthChange: s3.props.onMonthChange, onYearChange: s3.props.onYearChange, dayClassName: s3.props.dayClassName, weekDayClassName: s3.props.weekDayClassName, monthClassName: s3.props.monthClassName, timeClassName: s3.props.timeClassName, showTimeSelect: s3.props.showTimeSelect, showTimeSelectOnly: s3.props.showTimeSelectOnly, onTimeChange: s3.handleTimeChange, timeFormat: s3.props.timeFormat, timeIntervals: s3.props.timeIntervals, minTime: s3.props.minTime, maxTime: s3.props.maxTime, excludeTimes: s3.props.excludeTimes, timeCaption: s3.props.timeCaption, className: s3.props.calendarClassName, container: s3.props.calendarContainer, yearDropdownItemNumber: s3.props.yearDropdownItemNumber, previousMonthButtonLabel: s3.props.previousMonthButtonLabel, nextMonthButtonLabel: s3.props.nextMonthButtonLabel, previousYearButtonLabel: s3.props.previousYearButtonLabel, nextYearButtonLabel: s3.props.nextYearButtonLabel, timeInputLabel: s3.props.timeInputLabel, disabledKeyboardNavigation: s3.props.disabledKeyboardNavigation, renderCustomHeader: s3.props.renderCustomHeader, popperProps: s3.props.popperProps, renderDayContents: s3.props.renderDayContents, onDayMouseEnter: s3.props.onDayMouseEnter, onMonthMouseLeave: s3.props.onMonthMouseLeave, showTimeInput: s3.props.showTimeInput, showMonthYearPicker: s3.props.showMonthYearPicker, showFullMonthYearPicker: s3.props.showFullMonthYearPicker, showYearPicker: s3.props.showYearPicker, showQuarterYearPicker: s3.props.showQuarterYearPicker, showPopperArrow: s3.props.showPopperArrow, excludeScrollbar: s3.props.excludeScrollbar, handleOnKeyDown: s3.onDayKeyDown, isInputFocused: s3.state.focused, customTimeInput: s3.props.customTimeInput, setPreSelection: s3.setPreSelection }, s3.props.children) : null;
    }), pe(me(s3), "renderDateInput", function() {
      var r, n3, o2, a4, p, i2 = (0, import_classnames.default)(s3.props.className, pe({}, "react-datepicker-ignore-onclickoutside", s3.state.open)), c2 = s3.props.customInput || import_react2.default.createElement("input", { type: "text" }), l = s3.props.customInputRef || "ref", d3 = "string" == typeof s3.props.value ? s3.props.value : "string" == typeof s3.state.inputValue ? s3.state.inputValue : (n3 = s3.props.selected, o2 = s3.props, a4 = o2.dateFormat, p = o2.locale, n3 && _e(n3, Array.isArray(a4) ? a4[0] : a4, p) || "");
      return import_react2.default.cloneElement(c2, (pe(r = {}, l, function(e3) {
        s3.input = e3;
      }), pe(r, "value", d3), pe(r, "onBlur", s3.handleBlur), pe(r, "onChange", s3.handleChange), pe(r, "onClick", s3.onInputClick), pe(r, "onFocus", s3.handleFocus), pe(r, "onKeyDown", s3.onInputKeyDown), pe(r, "id", s3.props.id), pe(r, "name", s3.props.name), pe(r, "autoFocus", s3.props.autoFocus), pe(r, "placeholder", s3.props.placeholderText), pe(r, "disabled", s3.props.disabled), pe(r, "autoComplete", s3.props.autoComplete), pe(r, "className", (0, import_classnames.default)(c2.props.className, i2)), pe(r, "title", s3.props.title), pe(r, "readOnly", s3.props.readOnly), pe(r, "required", s3.props.required), pe(r, "tabIndex", s3.props.tabIndex), pe(r, "aria-labelledby", s3.props.ariaLabelledBy), r));
    }), pe(me(s3), "renderClearButton", function() {
      var t3 = s3.props, r = t3.isClearable, n3 = t3.selected, o2 = t3.clearButtonTitle, a4 = t3.ariaLabelClose, p = void 0 === a4 ? "Close" : a4;
      return r && null != n3 ? import_react2.default.createElement("button", { type: "button", className: "react-datepicker__close-icon", "aria-label": p, onClick: s3.onClearClick, title: o2, tabIndex: -1 }) : null;
    }), s3.state = s3.calcInitialState(), s3;
  }
  return se(a3, null, [{ key: "defaultProps", get: function() {
    return { allowSameDay: false, dateFormat: "MM/dd/yyyy", dateFormatCalendar: "LLLL yyyy", onChange: function() {
    }, disabled: false, disabledKeyboardNavigation: false, dropdownMode: "scroll", onFocus: function() {
    }, onBlur: function() {
    }, onKeyDown: function() {
    }, onInputClick: function() {
    }, onSelect: function() {
    }, onClickOutside: function() {
    }, onMonthChange: function() {
    }, onCalendarOpen: function() {
    }, onCalendarClose: function() {
    }, preventOpenOnFocus: false, onYearChange: function() {
    }, onInputError: function() {
    }, monthsShown: 1, readOnly: false, withPortal: false, shouldCloseOnSelect: true, showTimeSelect: false, showTimeInput: false, showPreviousMonths: false, showMonthYearPicker: false, showFullMonthYearPicker: false, showYearPicker: false, showQuarterYearPicker: false, strictParsing: false, timeIntervals: 30, timeCaption: "Time", previousMonthButtonLabel: "Previous Month", nextMonthButtonLabel: "Next Month", previousYearButtonLabel: "Previous Year", nextYearButtonLabel: "Next Year", timeInputLabel: "Time", enableTabLoop: true, renderDayContents: function(e3) {
      return e3;
    }, inlineFocusSelectedMonth: false, showPopperArrow: true, excludeScrollbar: true, customTimeInput: null };
  } }]), se(a3, [{ key: "componentDidUpdate", value: function(e3, t3) {
    var r, n2;
    e3.inline && (r = e3.selected, n2 = this.props.selected, r && n2 ? getMonth(r) !== getMonth(n2) || getYear(r) !== getYear(n2) : r !== n2) && this.setPreSelection(this.props.selected), void 0 !== this.state.monthSelectedIn && e3.monthsShown !== this.props.monthsShown && this.setState({ monthSelectedIn: 0 }), e3.highlightDates !== this.props.highlightDates && this.setState({ highlightDates: st(this.props.highlightDates) }), t3.focused || Fe(e3.selected, this.props.selected) || this.setState({ inputValue: null }), t3.open !== this.state.open && (false === t3.open && true === this.state.open && this.props.onCalendarOpen(), true === t3.open && false === this.state.open && this.props.onCalendarClose());
  } }, { key: "componentWillUnmount", value: function() {
    this.clearPreventFocusTimeout();
  } }, { key: "render", value: function() {
    var t3 = this.renderCalendar();
    return this.props.inline && !this.props.withPortal ? t3 : this.props.withPortal ? import_react2.default.createElement("div", null, this.props.inline ? null : import_react2.default.createElement("div", { className: "react-datepicker__input-container" }, this.renderDateInput(), this.renderClearButton()), this.state.open || this.props.inline ? import_react2.default.createElement("div", { className: "react-datepicker__portal" }, t3) : null) : import_react2.default.createElement(Nt, { className: this.props.popperClassName, wrapperClassName: this.props.wrapperClassName, hidePopper: !this.isCalendarOpen(), popperModifiers: this.props.popperModifiers, targetComponent: import_react2.default.createElement("div", { className: "react-datepicker__input-container" }, this.renderDateInput(), this.renderClearButton()), popperContainer: this.props.popperContainer, popperComponent: t3, popperPlacement: this.props.popperPlacement, popperProps: this.props.popperProps, popperOnKeyDown: this.onPopperKeyDown, enableTabLoop: this.props.enableTabLoop });
  } }]), a3;
}();
var Yt = "input";
var Tt = "navigate";
var es_default = xt;

// node_modules/shards-react/dist/shards-react.es.js
var import_shortid = __toESM(require_shortid());
var import_react_transition_group = __toESM(require_react_transition_group());
var import_react_dom2 = __toESM(require_react_dom());
var import_lodash3 = __toESM(require_lodash3());
var import_nouislider = __toESM(require_nouislider());
var import_react3 = __toESM(require_react());
var import_classnames2 = __toESM(require_classnames());
var import_lodash4 = __toESM(require_lodash4());
function _typeof2(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof2 = function(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof2 = function(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof2(obj);
}
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties2(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties2(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties2(Constructor, staticProps);
  return Constructor;
}
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends3() {
  _extends3 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
function _objectSpread(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? arguments[i2] : {};
    var ownKeys = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys.forEach(function(key) {
      _defineProperty2(target, key, source[key]);
    });
  }
  return target;
}
function _inherits2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf3(subClass, superClass);
}
function _getPrototypeOf2(o) {
  _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf3(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf2(o);
}
function _setPrototypeOf3(o, p) {
  _setPrototypeOf3 = Object.setPrototypeOf || function _setPrototypeOf4(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf3(o, p);
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose3(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _assertThisInitialized3(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _possibleConstructorReturn2(self2, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }
  return _assertThisInitialized3(self2);
}
function unwrapExports(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2.default : x2;
}
function createCommonjsModule(fn, module) {
  return module = { exports: {} }, fn(module, module.exports), module.exports;
}
function getCjsExportFromNamespace(n) {
  return n && n.default || n;
}
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
  if (val === null || val === void 0) {
    throw new TypeError("Object.assign cannot be called with null or undefined");
  }
  return Object(val);
}
function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    }
    var test1 = new String("abc");
    test1[5] = "de";
    if (Object.getOwnPropertyNames(test1)[0] === "5") {
      return false;
    }
    var test2 = {};
    for (var i2 = 0; i2 < 10; i2++) {
      test2["_" + String.fromCharCode(i2)] = i2;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
      return test2[n];
    });
    if (order2.join("") !== "0123456789") {
      return false;
    }
    var test3 = {};
    "abcdefghijklmnopqrst".split("").forEach(function(letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
var objectAssign = shouldUseNative() ? Object.assign : function(target, source) {
  var from;
  var to = toObject(target);
  var symbols;
  for (var s3 = 1; s3 < arguments.length; s3++) {
    from = Object(arguments[s3]);
    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }
    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);
      for (var i2 = 0; i2 < symbols.length; i2++) {
        if (propIsEnumerable.call(from, symbols[i2])) {
          to[symbols[i2]] = from[symbols[i2]];
        }
      }
    }
  }
  return to;
};
var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
var ReactPropTypesSecret_1 = ReactPropTypesSecret;
var printWarning = function printWarning2() {
};
if (true) {
  ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
  loggedTypeFailures = {};
  printWarning = function printWarning4(text) {
    var message = "Warning: " + text;
    if (typeof console !== "undefined") {
      console.error(message);
    }
    try {
      throw new Error(message);
    } catch (x2) {
    }
  };
}
var ReactPropTypesSecret$1;
var loggedTypeFailures;
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        try {
          if (typeof typeSpecs[typeSpecName] !== "function") {
            var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + _typeof2(typeSpecs[typeSpecName]) + "`.");
            err.name = "Invariant Violation";
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + _typeof2(error) + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).");
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;
          var stack = getStack ? getStack() : "";
          printWarning("Failed " + location + " type: " + error.message + (stack != null ? stack : ""));
        }
      }
    }
  }
}
var checkPropTypes_1 = checkPropTypes;
var printWarning$1 = function printWarning3() {
};
if (true) {
  printWarning$1 = function printWarning4(text) {
    var message = "Warning: " + text;
    if (typeof console !== "undefined") {
      console.error(message);
    }
    try {
      throw new Error(message);
    } catch (x2) {
    }
  };
}
function emptyFunctionThatReturnsNull() {
  return null;
}
var factoryWithTypeCheckers = function factoryWithTypeCheckers2(isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = "@@iterator";
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === "function") {
      return iteratorFn;
    }
  }
  var ANONYMOUS = "<<anonymous>>";
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker("array"),
    bool: createPrimitiveTypeChecker("boolean"),
    func: createPrimitiveTypeChecker("function"),
    number: createPrimitiveTypeChecker("number"),
    object: createPrimitiveTypeChecker("object"),
    string: createPrimitiveTypeChecker("string"),
    symbol: createPrimitiveTypeChecker("symbol"),
    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };
  function is(x2, y3) {
    if (x2 === y3) {
      return x2 !== 0 || 1 / x2 === 1 / y3;
    } else {
      return x2 !== x2 && y3 !== y3;
    }
  }
  function PropTypeError(message) {
    this.message = message;
    this.stack = "";
  }
  PropTypeError.prototype = Error.prototype;
  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;
      if (secret !== ReactPropTypesSecret_1) {
        if (throwOnDirectAccess) {
          var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
          err.name = "Invariant Violation";
          throw err;
        } else if (typeof console !== "undefined") {
          var cacheKey = componentName + ":" + propName;
          if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
          manualPropTypeWarningCount < 3) {
            printWarning$1("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.");
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
          }
          return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }
    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }
  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);
        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }
  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== "function") {
        return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
      }
      for (var i2 = 0; i2 < propValue.length; i2++) {
        var error = typeChecker(propValue, i2, componentName, location, propFullName + "[" + i2 + "]", ReactPropTypesSecret_1);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      true ? printWarning$1("Invalid argument supplied to oneOf, expected an instance of array.") : void 0;
      return emptyFunctionThatReturnsNull;
    }
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i2 = 0; i2 < expectedValues.length; i2++) {
        if (is(propValue, expectedValues[i2])) {
          return null;
        }
      }
      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + propValue + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
    }
    return createChainableTypeChecker(validate);
  }
  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== "function") {
        return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== "object") {
        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret_1);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      true ? printWarning$1("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
      return emptyFunctionThatReturnsNull;
    }
    for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
      var checker = arrayOfTypeCheckers[i2];
      if (typeof checker !== "function") {
        printWarning$1("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i2 + ".");
        return emptyFunctionThatReturnsNull;
      }
    }
    function validate(props, propName, componentName, location, propFullName) {
      for (var i3 = 0; i3 < arrayOfTypeCheckers.length; i3++) {
        var checker2 = arrayOfTypeCheckers[i3];
        if (checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {
          return null;
        }
      }
      return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`."));
    }
    return createChainableTypeChecker(validate);
  }
  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== "object") {
        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== "object") {
        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
      }
      var allKeys = objectAssign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
        }
        var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function isNode(propValue) {
    switch (_typeof2(propValue)) {
      case "number":
      case "string":
      case "undefined":
        return true;
      case "boolean":
        return !propValue;
      case "object":
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }
        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }
        return true;
      default:
        return false;
    }
  }
  function isSymbol(propType, propValue) {
    if (propType === "symbol") {
      return true;
    }
    if (propValue["@@toStringTag"] === "Symbol") {
      return true;
    }
    if (typeof Symbol === "function" && propValue instanceof Symbol) {
      return true;
    }
    return false;
  }
  function getPropType(propValue) {
    var propType = _typeof2(propValue);
    if (Array.isArray(propValue)) {
      return "array";
    }
    if (propValue instanceof RegExp) {
      return "object";
    }
    if (isSymbol(propType, propValue)) {
      return "symbol";
    }
    return propType;
  }
  function getPreciseType(propValue) {
    if (typeof propValue === "undefined" || propValue === null) {
      return "" + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === "object") {
      if (propValue instanceof Date) {
        return "date";
      } else if (propValue instanceof RegExp) {
        return "regexp";
      }
    }
    return propType;
  }
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case "array":
      case "object":
        return "an " + type;
      case "boolean":
      case "date":
      case "regexp":
        return "a " + type;
      default:
        return type;
    }
  }
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }
  ReactPropTypes.checkPropTypes = checkPropTypes_1;
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
var propTypes = createCommonjsModule(function(module) {
  if (true) {
    var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 60103;
    var isValidElement = function isValidElement2(object) {
      return _typeof2(object) === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    };
    var throwOnDirectAccess = true;
    module.exports = factoryWithTypeCheckers(isValidElement, throwOnDirectAccess);
  } else {
    module.exports = factoryWithThrowingShims();
  }
});
function componentWillMount2() {
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== void 0) {
    this.setState(state);
  }
}
function componentWillReceiveProps2(nextProps) {
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== void 0 ? state : null;
  }
  this.setState(updater.bind(this));
}
function componentWillUpdate2(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}
componentWillMount2.__suppressDeprecationWarning = true;
componentWillReceiveProps2.__suppressDeprecationWarning = true;
componentWillUpdate2.__suppressDeprecationWarning = true;
function polyfill2(Component5) {
  var prototype = Component5.prototype;
  if (!prototype || !prototype.isReactComponent) {
    throw new Error("Can only polyfill class components");
  }
  if (typeof Component5.getDerivedStateFromProps !== "function" && typeof prototype.getSnapshotBeforeUpdate !== "function") {
    return Component5;
  }
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === "function") {
    foundWillMountName = "componentWillMount";
  } else if (typeof prototype.UNSAFE_componentWillMount === "function") {
    foundWillMountName = "UNSAFE_componentWillMount";
  }
  if (typeof prototype.componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "componentWillReceiveProps";
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
  }
  if (typeof prototype.componentWillUpdate === "function") {
    foundWillUpdateName = "componentWillUpdate";
  } else if (typeof prototype.UNSAFE_componentWillUpdate === "function") {
    foundWillUpdateName = "UNSAFE_componentWillUpdate";
  }
  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
    var componentName = Component5.displayName || Component5.name;
    var newApiName = typeof Component5.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
    throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n" + componentName + " uses " + newApiName + " but also contains the following legacy lifecycles:" + (foundWillMountName !== null ? "\n  " + foundWillMountName : "") + (foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "") + (foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "") + "\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks");
  }
  if (typeof Component5.getDerivedStateFromProps === "function") {
    prototype.componentWillMount = componentWillMount2;
    prototype.componentWillReceiveProps = componentWillReceiveProps2;
  }
  if (typeof prototype.getSnapshotBeforeUpdate === "function") {
    if (typeof prototype.componentDidUpdate !== "function") {
      throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");
    }
    prototype.componentWillUpdate = componentWillUpdate2;
    var componentDidUpdate = prototype.componentDidUpdate;
    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;
      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }
  return Component5;
}
var reactLifecyclesCompat_es = Object.freeze({
  polyfill: polyfill2
});
var PropTypes = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.transitionTimeout = transitionTimeout;
  exports.classNamesShape = exports.timeoutsShape = void 0;
  var _propTypes = _interopRequireDefault(propTypes);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }
  function transitionTimeout(transitionType) {
    var timeoutPropName = "transition" + transitionType + "Timeout";
    var enabledPropName = "transition" + transitionType;
    return function(props) {
      if (props[enabledPropName]) {
        if (props[timeoutPropName] == null) {
          return new Error(timeoutPropName + " wasn't supplied to CSSTransitionGroup: this can cause unreliable animations and won't be supported in a future version of React. See https://fb.me/react-animation-transition-group-timeout for more information.");
        } else if (typeof props[timeoutPropName] !== "number") {
          return new Error(timeoutPropName + " must be a number (in milliseconds)");
        }
      }
      return null;
    };
  }
  var timeoutsShape = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
    enter: _propTypes.default.number,
    exit: _propTypes.default.number
  }).isRequired]);
  exports.timeoutsShape = timeoutsShape;
  var classNamesShape = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
    enter: _propTypes.default.string,
    exit: _propTypes.default.string,
    active: _propTypes.default.string
  }), _propTypes.default.shape({
    enter: _propTypes.default.string,
    enterDone: _propTypes.default.string,
    enterActive: _propTypes.default.string,
    exit: _propTypes.default.string,
    exitDone: _propTypes.default.string,
    exitActive: _propTypes.default.string
  })]);
  exports.classNamesShape = classNamesShape;
});
unwrapExports(PropTypes);
var PropTypes_1 = PropTypes.transitionTimeout;
var PropTypes_2 = PropTypes.classNamesShape;
var PropTypes_3 = PropTypes.timeoutsShape;
var _reactLifecyclesCompat = getCjsExportFromNamespace(reactLifecyclesCompat_es);
var Transition_1 = createCommonjsModule(function(module, exports) {
  exports.__esModule = true;
  exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;
  var PropTypes$$1 = _interopRequireWildcard(propTypes);
  var _react = _interopRequireDefault(import_react3.default);
  var _reactDom = _interopRequireDefault(import_react_dom2.default);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
            if (desc.get || desc.set) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _objectWithoutPropertiesLoose4(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i2;
    for (i2 = 0; i2 < sourceKeys.length; i2++) {
      key = sourceKeys[i2];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }
    return target;
  }
  function _inheritsLoose3(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  var UNMOUNTED = "unmounted";
  exports.UNMOUNTED = UNMOUNTED;
  var EXITED = "exited";
  exports.EXITED = EXITED;
  var ENTERING = "entering";
  exports.ENTERING = ENTERING;
  var ENTERED = "entered";
  exports.ENTERED = ENTERED;
  var EXITING = "exiting";
  exports.EXITING = EXITING;
  var Transition$$1 = function(_React$Component) {
    _inheritsLoose3(Transition$$12, _React$Component);
    function Transition$$12(props, context) {
      var _this;
      _this = _React$Component.call(this, props, context) || this;
      var parentGroup = context.transitionGroup;
      var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
      var initialStatus;
      _this.appearStatus = null;
      if (props.in) {
        if (appear) {
          initialStatus = EXITED;
          _this.appearStatus = ENTERING;
        } else {
          initialStatus = ENTERED;
        }
      } else {
        if (props.unmountOnExit || props.mountOnEnter) {
          initialStatus = UNMOUNTED;
        } else {
          initialStatus = EXITED;
        }
      }
      _this.state = {
        status: initialStatus
      };
      _this.nextCallback = null;
      return _this;
    }
    var _proto = Transition$$12.prototype;
    _proto.getChildContext = function getChildContext() {
      return {
        transitionGroup: null
        // allows for nested Transitions
      };
    };
    Transition$$12.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
      var nextIn = _ref.in;
      if (nextIn && prevState.status === UNMOUNTED) {
        return {
          status: EXITED
        };
      }
      return null;
    };
    _proto.componentDidMount = function componentDidMount() {
      this.updateStatus(true, this.appearStatus);
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
      var nextStatus = null;
      if (prevProps !== this.props) {
        var status = this.state.status;
        if (this.props.in) {
          if (status !== ENTERING && status !== ENTERED) {
            nextStatus = ENTERING;
          }
        } else {
          if (status === ENTERING || status === ENTERED) {
            nextStatus = EXITING;
          }
        }
      }
      this.updateStatus(false, nextStatus);
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      this.cancelNextCallback();
    };
    _proto.getTimeouts = function getTimeouts() {
      var timeout = this.props.timeout;
      var exit, enter, appear;
      exit = enter = appear = timeout;
      if (timeout != null && typeof timeout !== "number") {
        exit = timeout.exit;
        enter = timeout.enter;
        appear = timeout.appear;
      }
      return {
        exit,
        enter,
        appear
      };
    };
    _proto.updateStatus = function updateStatus(mounting, nextStatus) {
      if (mounting === void 0) {
        mounting = false;
      }
      if (nextStatus !== null) {
        this.cancelNextCallback();
        var node = _reactDom.default.findDOMNode(this);
        if (nextStatus === ENTERING) {
          this.performEnter(node, mounting);
        } else {
          this.performExit(node);
        }
      } else if (this.props.unmountOnExit && this.state.status === EXITED) {
        this.setState({
          status: UNMOUNTED
        });
      }
    };
    _proto.performEnter = function performEnter(node, mounting) {
      var _this2 = this;
      var enter = this.props.enter;
      var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
      var timeouts = this.getTimeouts();
      if (!mounting && !enter) {
        this.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(node);
        });
        return;
      }
      this.props.onEnter(node, appearing);
      this.safeSetState({
        status: ENTERING
      }, function() {
        _this2.props.onEntering(node, appearing);
        _this2.onTransitionEnd(node, timeouts.enter, function() {
          _this2.safeSetState({
            status: ENTERED
          }, function() {
            _this2.props.onEntered(node, appearing);
          });
        });
      });
    };
    _proto.performExit = function performExit(node) {
      var _this3 = this;
      var exit = this.props.exit;
      var timeouts = this.getTimeouts();
      if (!exit) {
        this.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(node);
        });
        return;
      }
      this.props.onExit(node);
      this.safeSetState({
        status: EXITING
      }, function() {
        _this3.props.onExiting(node);
        _this3.onTransitionEnd(node, timeouts.exit, function() {
          _this3.safeSetState({
            status: EXITED
          }, function() {
            _this3.props.onExited(node);
          });
        });
      });
    };
    _proto.cancelNextCallback = function cancelNextCallback() {
      if (this.nextCallback !== null) {
        this.nextCallback.cancel();
        this.nextCallback = null;
      }
    };
    _proto.safeSetState = function safeSetState(nextState, callback) {
      callback = this.setNextCallback(callback);
      this.setState(nextState, callback);
    };
    _proto.setNextCallback = function setNextCallback(callback) {
      var _this4 = this;
      var active = true;
      this.nextCallback = function(event) {
        if (active) {
          active = false;
          _this4.nextCallback = null;
          callback(event);
        }
      };
      this.nextCallback.cancel = function() {
        active = false;
      };
      return this.nextCallback;
    };
    _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
      this.setNextCallback(handler);
      if (node) {
        if (this.props.addEndListener) {
          this.props.addEndListener(node, this.nextCallback);
        }
        if (timeout != null) {
          setTimeout(this.nextCallback, timeout);
        }
      } else {
        setTimeout(this.nextCallback, 0);
      }
    };
    _proto.render = function render() {
      var status = this.state.status;
      if (status === UNMOUNTED) {
        return null;
      }
      var _this$props = this.props, children = _this$props.children, childProps = _objectWithoutPropertiesLoose4(_this$props, ["children"]);
      delete childProps.in;
      delete childProps.mountOnEnter;
      delete childProps.unmountOnExit;
      delete childProps.appear;
      delete childProps.enter;
      delete childProps.exit;
      delete childProps.timeout;
      delete childProps.addEndListener;
      delete childProps.onEnter;
      delete childProps.onEntering;
      delete childProps.onEntered;
      delete childProps.onExit;
      delete childProps.onExiting;
      delete childProps.onExited;
      if (typeof children === "function") {
        return children(status, childProps);
      }
      var child = _react.default.Children.only(children);
      return _react.default.cloneElement(child, childProps);
    };
    return Transition$$12;
  }(_react.default.Component);
  Transition$$1.contextTypes = {
    transitionGroup: PropTypes$$1.object
  };
  Transition$$1.childContextTypes = {
    transitionGroup: function transitionGroup() {
    }
  };
  Transition$$1.propTypes = true ? {
    /**
     * A `function` child can be used instead of a React element.
     * This function is called with the current transition status
     * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can be used
     * to apply context specific props to a component.
     *
     * ```jsx
     * <Transition timeout={150}>
     *   {(status) => (
     *     <MyComponent className={`fade fade-${status}`} />
     *   )}
     * </Transition>
     * ```
     */
    children: PropTypes$$1.oneOfType([PropTypes$$1.func.isRequired, PropTypes$$1.element.isRequired]).isRequired,
    /**
     * Show the component; triggers the enter or exit states
     */
    in: PropTypes$$1.bool,
    /**
     * By default the child component is mounted immediately along with
     * the parent `Transition` component. If you want to "lazy mount" the component on the
     * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
     * mounted, even on "exited", unless you also specify `unmountOnExit`.
     */
    mountOnEnter: PropTypes$$1.bool,
    /**
     * By default the child component stays mounted after it reaches the `'exited'` state.
     * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
     */
    unmountOnExit: PropTypes$$1.bool,
    /**
     * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
     * If you want to transition on the first mount set `appear` to `true`, and the
     * component will transition in as soon as the `<Transition>` mounts.
     *
     * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
     */
    appear: PropTypes$$1.bool,
    /**
     * Enable or disable enter transitions.
     */
    enter: PropTypes$$1.bool,
    /**
     * Enable or disable exit transitions.
     */
    exit: PropTypes$$1.bool,
    /**
     * The duration of the transition, in milliseconds.
     * Required unless `addEndListener` is provided
     *
     * You may specify a single timeout for all transitions like: `timeout={500}`,
     * or individually like:
     *
     * ```jsx
     * timeout={{
     *  enter: 300,
     *  exit: 500,
     * }}
     * ```
     *
     * @type {number | { enter?: number, exit?: number }}
     */
    timeout: function timeout(props) {
      var pt2 = true ? PropTypes.timeoutsShape : {};
      if (!props.addEndListener) pt2 = pt2.isRequired;
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      return pt2.apply(void 0, [props].concat(args));
    },
    /**
     * Add a custom transition end trigger. Called with the transitioning
     * DOM node and a `done` callback. Allows for more fine grained transition end
     * logic. **Note:** Timeouts are still used as a fallback if provided.
     *
     * ```jsx
     * addEndListener={(node, done) => {
     *   // use the css transitionend event to mark the finish of a transition
     *   node.addEventListener('transitionend', done, false);
     * }}
     * ```
     */
    addEndListener: PropTypes$$1.func,
    /**
     * Callback fired before the "entering" status is applied. An extra parameter
     * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
     *
     * @type Function(node: HtmlElement, isAppearing: bool) -> void
     */
    onEnter: PropTypes$$1.func,
    /**
     * Callback fired after the "entering" status is applied. An extra parameter
     * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
     *
     * @type Function(node: HtmlElement, isAppearing: bool)
     */
    onEntering: PropTypes$$1.func,
    /**
     * Callback fired after the "entered" status is applied. An extra parameter
     * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
     *
     * @type Function(node: HtmlElement, isAppearing: bool) -> void
     */
    onEntered: PropTypes$$1.func,
    /**
     * Callback fired before the "exiting" status is applied.
     *
     * @type Function(node: HtmlElement) -> void
     */
    onExit: PropTypes$$1.func,
    /**
     * Callback fired after the "exiting" status is applied.
     *
     * @type Function(node: HtmlElement) -> void
     */
    onExiting: PropTypes$$1.func,
    /**
     * Callback fired after the "exited" status is applied.
     *
     * @type Function(node: HtmlElement) -> void
     */
    onExited: PropTypes$$1.func
    // Name the function so it is clearer in the documentation
  } : {};
  function noop() {
  }
  Transition$$1.defaultProps = {
    in: false,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false,
    enter: true,
    exit: true,
    onEnter: noop,
    onEntering: noop,
    onEntered: noop,
    onExit: noop,
    onExiting: noop,
    onExited: noop
  };
  Transition$$1.UNMOUNTED = 0;
  Transition$$1.EXITED = 1;
  Transition$$1.ENTERING = 2;
  Transition$$1.ENTERED = 3;
  Transition$$1.EXITING = 4;
  var _default = (0, _reactLifecyclesCompat.polyfill)(Transition$$1);
  exports.default = _default;
});
var Transition$1 = unwrapExports(Transition_1);
var Transition_2 = Transition_1.EXITING;
var Transition_3 = Transition_1.ENTERED;
var Transition_4 = Transition_1.ENTERING;
var Transition_5 = Transition_1.EXITED;
var Transition_6 = Transition_1.UNMOUNTED;
var _TRANSITION_CLASS_MAP;
var TIMEOUT = {
  FADE: 150,
  COLLAPSE: 350,
  SHOW: 0,
  HIDE: 0
};
var EVENTS = {
  CLICK: ["click", "touchstart", "keyup"],
  MOUSE: ["mouseenter", "mouseleave"],
  FOCUS: ["focusin", "focusout"]
};
var KEYCODES = {
  ESC: 27,
  SPACE: 32,
  ENTER: 13,
  TAB: 9,
  UP: 38,
  DOWN: 40
};
var TRANSITION_KEYS = ["in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited"];
var TRANSITION_STATUS = {
  ENTERING: "entering",
  ENTERED: "entered",
  EXITING: "exiting",
  EXITED: "exited"
};
var TRANSITION_CLASS_MAP = (_TRANSITION_CLASS_MAP = {}, _defineProperty2(_TRANSITION_CLASS_MAP, TRANSITION_STATUS.ENTERING, "collapsing"), _defineProperty2(_TRANSITION_CLASS_MAP, TRANSITION_STATUS.ENTERED, "collapse show"), _defineProperty2(_TRANSITION_CLASS_MAP, TRANSITION_STATUS.EXITING, "collapsing"), _defineProperty2(_TRANSITION_CLASS_MAP, TRANSITION_STATUS.EXITED, "collapse"), _TRANSITION_CLASS_MAP);
var POPPER_PLACEMENTS = ["top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-end", "bottom", "bottom-start", "left-end", "left", "left-start", "auto-start", "auto", "auto-end"];
var DROPDOWN_POSITION_MAP = {
  UP: "top",
  LEFT: "left",
  RIGHT: "right",
  DOWN: "bottom"
};
var BREAKPOINTS = ["xs", "sm", "md", "lg", "xl"];
var INPUT_TYPES = ["text", "password", "email", "number", "tel", "url", "search", "range", "color", "date", "time", "datetime", "datetime-local", "month", "week", "file"];
var INPUT_GROUP_ADDON_TYPES = ["prepend", "append"];
var Fade = function Fade2(props) {
  var Tag = props.tag, baseClass = props.baseClass, baseClassActive = props.baseClassActive, className = props.className, children = props.children, innerRef = props.innerRef, attrs = _objectWithoutProperties(props, ["tag", "baseClass", "baseClassActive", "className", "children", "innerRef"]);
  var transitionProps = (0, import_lodash.default)(attrs, TRANSITION_KEYS);
  var childProps = (0, import_lodash4.default)(attrs, TRANSITION_KEYS);
  return import_react3.default.createElement(Transition$1, transitionProps, function(status) {
    var isActive = status === "entered";
    var classes = (0, import_classnames2.default)(className, baseClass, isActive && baseClassActive);
    return import_react3.default.createElement(Tag, _extends3({
      className: classes
    }, childProps, {
      ref: innerRef
    }), children);
  });
};
Fade.propTypes = _objectSpread({}, Transition$1.propTypes, {
  tag: propTypes.oneOfType([propTypes.string, propTypes.func]),
  baseClass: propTypes.string,
  baseClassActive: propTypes.string,
  className: propTypes.string,
  innerRef: propTypes.oneOfType([propTypes.object, propTypes.string, propTypes.func]),
  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node])
});
Fade.defaultProps = _objectSpread({}, Transition$1.defaultProps, {
  tag: "div",
  baseClass: "fade",
  baseClassActive: "show",
  timeout: TIMEOUT.FADE,
  appear: true,
  enter: true,
  exit: true,
  in: true
});
var Alert = function Alert2(props) {
  var className = props.className, closeClassName = props.closeClassName, closeAriaLabel = props.closeAriaLabel, Tag = props.tag, theme = props.theme, open = props.open, dismissible = props.dismissible, children = props.children, transition = props.transition, fade = props.fade, attrs = _objectWithoutProperties(props, ["className", "closeClassName", "closeAriaLabel", "tag", "theme", "open", "dismissible", "children", "transition", "fade"]);
  var classes = (0, import_classnames2.default)(className, "alert", "alert-".concat(theme), dismissible && "alert-dismissible");
  var closeClasses = (0, import_classnames2.default)("close", closeClassName);
  var alertTransition = _objectSpread({}, Fade.defaultProps, transition, {
    baseClass: fade ? transition.baseClass : "",
    timeout: fade ? transition.timeout : 0
  });
  return import_react3.default.createElement(Fade, _extends3({}, attrs, alertTransition, {
    tag: Tag,
    className: classes,
    in: open,
    role: "alert"
  }), dismissible ? import_react3.default.createElement("button", {
    type: "button",
    className: closeClasses,
    "aria-label": closeAriaLabel,
    onClick: dismissible
  }, import_react3.default.createElement("span", {
    "aria-hidden": "true"
  }, "×")) : null, children);
};
Alert.propTypes = {
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The close button's class name.
   */
  closeClassName: propTypes.string,
  /**
   * The close button's aria label.
   */
  closeAriaLabel: propTypes.string,
  /**
   * The theme color.
   */
  theme: propTypes.string,
  /**
   * Whether it should fade, or not.
   */
  fade: propTypes.bool,
  /**
   * Whether is open, or not.
   */
  open: propTypes.bool,
  /**
   * Whether is dismissible, or not.
   */
  dismissible: propTypes.func,
  /**
   * The transition config. See `Fade` component for more details.
   */
  transition: propTypes.shape(Fade.propTypes),
  /**
   * The component tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
Alert.defaultProps = {
  theme: "primary",
  open: true,
  tag: "div",
  closeAriaLabel: "Close",
  fade: true,
  transition: _objectSpread({}, Fade.defaultProps, {
    unmountOnExit: true
  })
};
var Badge = function Badge2(props) {
  var Tag = props.tag, className = props.className, theme = props.theme, pill = props.pill, outline = props.outline, attrs = _objectWithoutProperties(props, ["tag", "className", "theme", "pill", "outline"]);
  var classes = (0, import_classnames2.default)(className, "badge", theme && !outline && "badge-".concat(theme), outline && "badge-outline-".concat(theme), pill && "badge-pill");
  Tag = attrs.href && Tag === "span" ? "a" : Tag;
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
Badge.propTypes = {
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The theme color.
   */
  theme: propTypes.string,
  /**
   * Whether it should be outlined, or not.
   */
  outline: propTypes.bool,
  /**
   * Whether it should be a pill, or not.
   */
  pill: propTypes.bool,
  /**
   * The component tag.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
Badge.defaultProps = {
  theme: "primary",
  pill: false,
  outline: false,
  tag: "span"
};
var Breadcrumb = function Breadcrumb2(props) {
  var className = props.className, listClassName = props.listClassName, children = props.children, Tag = props.tag, ListTag = props.listTag, label = props["aria-label"], attrs = _objectWithoutProperties(props, ["className", "listClassName", "children", "tag", "listTag", "aria-label"]);
  var classes = (0, import_classnames2.default)(className);
  var listClasses = (0, import_classnames2.default)("breadcrumb", listClassName);
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes,
    "aria-label": label
  }), import_react3.default.createElement(ListTag, {
    className: listClasses
  }, children));
};
Breadcrumb.propTypes = {
  /**
   * The breadcrumb list class name.
   */
  listClassName: propTypes.string,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The aria label value.
   */
  "aria-label": propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * The component tag name.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string]),
  /**
   * The breadcrumb list tag.
   */
  listTag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
Breadcrumb.defaultProps = {
  "aria-label": "breadcrumb",
  tag: "nav",
  listTag: "ol"
};
var BreadcrumbItem = function BreadcrumbItem2(props) {
  var className = props.className, active = props.active, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "active", "tag"]);
  var classes = (0, import_classnames2.default)(className, active && "active", "breadcrumb-item");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes,
    "aria-current": active ? "page" : void 0
  }));
};
BreadcrumbItem.propTypes = {
  /**
   * Whether it is active, or not.
   */
  active: propTypes.bool,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component tag.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
BreadcrumbItem.defaultProps = {
  tag: "li"
};
var Button = function(_React$Component) {
  _inherits2(Button2, _React$Component);
  function Button2(props) {
    var _this;
    _classCallCheck2(this, Button2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(Button2).call(this, props));
    _this.onClick = _this.onClick.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    return _this;
  }
  _createClass2(Button2, [{
    key: "onClick",
    value: function onClick(e3) {
      if (this.props.disabled) {
        e3.preventDefault();
        return;
      }
      if (this.props.onClick) {
        this.props.onClick(e3);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props, className = _this$props.className, theme = _this$props.theme, size = _this$props.size, pill = _this$props.pill, outline = _this$props.outline, squared = _this$props.squared, active = _this$props.active, disabled = _this$props.disabled, innerRef = _this$props.innerRef, Tag = _this$props.tag, block = _this$props.block, attrs = _objectWithoutProperties(_this$props, ["className", "theme", "size", "pill", "outline", "squared", "active", "disabled", "innerRef", "tag", "block"]);
      var classes = (0, import_classnames2.default)(className, "btn", theme && "btn-".concat(outline ? "outline-" : "").concat(theme), size && "btn-".concat(size), pill && "btn-pill", squared && "btn-squared", block && "btn-block", active && "active");
      Tag = attrs.href && Tag === "button" ? "a" : Tag;
      var tagType = Tag === "button" && attrs.onClick ? "button" : void 0;
      return import_react3.default.createElement(Tag, _extends3({
        ref: innerRef,
        type: tagType
      }, attrs, {
        className: classes,
        disabled,
        onClick: this.onClick
      }));
    }
  }]);
  return Button2;
}(import_react3.default.Component);
Button.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * The theme color.
   */
  theme: propTypes.string,
  /**
   * The size.
   */
  size: propTypes.string,
  /**
   * Whether it is outline, or not.
   */
  outline: propTypes.bool,
  /**
   * Whether it is pill, or not.
   */
  pill: propTypes.bool,
  /**
   * Whether it is squared, or not.
   */
  squared: propTypes.bool,
  /**
   * Whether it is active, or not.
   */
  active: propTypes.bool,
  /**
   * Whether it should be displayed as a block (full-width), or not.
   */
  block: propTypes.bool,
  /**
   * Whether it is disabled, or not.
   */
  disabled: propTypes.bool,
  /**
   * The component tag.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string]),
  /**
   * The inner ref.
   * @type {[type]}
   */
  innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string])
};
Button.defaultProps = {
  theme: "primary",
  tag: "button"
};
var ButtonGroup = function ButtonGroup2(props) {
  var className = props.className, vertical = props.vertical, size = props.size, attrs = _objectWithoutProperties(props, ["className", "vertical", "size"]);
  var classes = (0, import_classnames2.default)(className, size && "btn-group-".concat(size), vertical ? "btn-group-vertical" : "btn-group");
  return import_react3.default.createElement("div", _extends3({
    className: classes
  }, attrs));
};
ButtonGroup.propTypes = {
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The size.
   */
  size: propTypes.string,
  /**
   * Whether it is vertical, or not.
   */
  vertical: propTypes.bool
};
var ButtonToolbar = function ButtonToolbar2(props) {
  var className = props.className, attrs = _objectWithoutProperties(props, ["className"]);
  var classes = (0, import_classnames2.default)(className, "btn-toolbar");
  return import_react3.default.createElement("div", _extends3({
    className: classes
  }, attrs));
};
ButtonToolbar.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node])
};
var Card = function Card2(props) {
  var className = props.className, innerRef = props.innerRef, Tag = props.tag, theme = props.theme, outline = props.outline, small = props.small, attrs = _objectWithoutProperties(props, ["className", "innerRef", "tag", "theme", "outline", "small"]);
  var classes = (0, import_classnames2.default)(className, "card", small && "card-small", theme && "".concat(outline ? "border" : "bg", "-").concat(theme));
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes,
    ref: innerRef
  }));
};
Card.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The theme color.
   */
  theme: propTypes.string,
  /**
   * Whether it is outline, or not.
   */
  outline: propTypes.bool,
  /**
   * The component tag.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string]),
  /**
   * Whether the card is small, or not.
   */
  small: propTypes.bool,
  /**
   * The inner ref.
   */
  innerRef: propTypes.oneOfType([propTypes.string, propTypes.object, propTypes.func])
};
Card.defaultProps = {
  tag: "div"
};
var CardBody = function CardBody2(props) {
  var className = props.className, Tag = props.tag, children = props.children, attrs = _objectWithoutProperties(props, ["className", "tag", "children"]);
  var classes = (0, import_classnames2.default)(className, "card-body");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }), children);
};
CardBody.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),
  /**
   * The component tag.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
CardBody.defaultProps = {
  tag: "div"
};
var CardColumns = function CardColumns2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "card-columns");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
CardColumns.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
CardColumns.defaultProps = {
  tag: "div"
};
var CardFooter = function CardFooter2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "card-footer");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
CardFooter.propTypes = {
  /**
   * The component tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string]),
  /**
   * The class name.
   */
  className: propTypes.string
};
CardFooter.defaultProps = {
  tag: "div"
};
var CardGroup = function CardGroup2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "card-group");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
CardGroup.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
CardGroup.defaultProps = {
  tag: "div"
};
var CardDeck = function CardDeck2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "card-deck");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
CardDeck.propTypes = {
  /**
   * The component tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string]),
  /**
   * The class name.
   */
  className: propTypes.string
};
CardDeck.defaultProps = {
  tag: "div"
};
var CardHeader = function CardHeader2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "card-header");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
CardHeader.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
CardHeader.defaultProps = {
  tag: "div"
};
var CardImg = function CardImg2(props) {
  var className = props.className, top = props.top, bottom = props.bottom, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "top", "bottom", "tag"]);
  var cardImgClass = "";
  if (top) {
    cardImgClass = "card-img-top";
  }
  if (bottom) {
    cardImgClass = "card-img-bottom";
  }
  cardImgClass = (0, import_classnames2.default)(className, cardImgClass);
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: cardImgClass
  }));
};
CardImg.propTypes = {
  /**
   * Whether the image is positioned at the top of the card, or not.
   */
  top: propTypes.bool,
  /**
   * Whether the image is positioned at the bottom of the card, or not.
   */
  bottom: propTypes.bool,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
CardImg.defaultProps = {
  tag: "img"
};
var CardImgOverlay = function CardImgOverlay2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "card-img-overlay");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
CardImgOverlay.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
CardImgOverlay.defaultProps = {
  tag: "div"
};
var CardLink = function CardLink2(props) {
  var className = props.className, Tag = props.tag, innerRef = props.innerRef, attrs = _objectWithoutProperties(props, ["className", "tag", "innerRef"]);
  var classes = (0, import_classnames2.default)(className, "card-link");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    ref: innerRef,
    className: classes
  }));
};
CardLink.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string]),
  /**
   * The inner ref.
   */
  innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string])
};
CardLink.defaultProps = {
  tag: "a"
};
var CardSubtitle = function CardSubtitle2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "card-subtitle", "text-muted");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
CardSubtitle.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
CardSubtitle.defaultProps = {
  tag: "h6"
};
var CardText = function CardText2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "card-text");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
CardText.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
CardText.defaultProps = {
  tag: "p"
};
var CardTitle = function CardTitle2(props) {
  var className = props.className, Tag = props.tag, attributes = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "card-title");
  return import_react3.default.createElement(Tag, _extends3({}, attributes, {
    className: classes
  }));
};
CardTitle.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
CardTitle.defaultProps = {
  tag: "h5"
};
var reflow = function reflow2(node) {
  void node.offsetHeight;
};
var getNodeHeight = function getNodeHeight2(node) {
  return node.scrollHeight;
};
var isBrowser2 = !!(typeof window !== "undefined" && window.document);
var isRef = function isRef2(target) {
  if (target && _typeof2(target) === "object") {
    return "current" in target;
  }
  return false;
};
var getDOMElements = function getDOMElements2(target) {
  if ((0, import_lodash2.default)(target)) {
    return target();
  }
  if (isRef(target)) {
    return target.current;
  }
  if (!isBrowser2 && typeof target !== "string") {
    return target;
  }
  var results = document.querySelectorAll(target);
  if (!results.length) {
    throw new Error("No DOM elements were found for ".concat(target, "."));
  }
  return results;
};
var getTarget = function getTarget2(target) {
  var results = getDOMElements(target);
  return results.length ? results[0] : results;
};
var CustomPropTypes = {
  target: propTypes.oneOfType([propTypes.string, propTypes.func, propTypes.element, propTypes.shape({
    current: propTypes.any
  })]),
  column: propTypes.oneOfType([propTypes.bool, propTypes.number, propTypes.string, propTypes.shape({
    offset: propTypes.oneOfType([propTypes.number, propTypes.string]),
    size: propTypes.oneOfType([propTypes.bool, propTypes.number, propTypes.string]),
    order: propTypes.oneOfType([propTypes.number, propTypes.string])
  })])
};
var Collapse = function(_React$Component) {
  _inherits2(Collapse2, _React$Component);
  function Collapse2(props) {
    var _this;
    _classCallCheck2(this, Collapse2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(Collapse2).call(this, props));
    _this.state = {
      height: null
    };
    return _this;
  }
  _createClass2(Collapse2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, Tag = _this$props.tag, open = _this$props.open, className = _this$props.className, navbar = _this$props.navbar, children = _this$props.children, innerRef = _this$props.innerRef, attrs = _objectWithoutProperties(_this$props, ["tag", "open", "className", "navbar", "children", "innerRef"]);
      var height = this.state.height;
      var transitionProps = (0, import_lodash.default)(attrs, TRANSITION_KEYS);
      var childProps = (0, import_lodash4.default)(attrs, TRANSITION_KEYS);
      return import_react3.default.createElement(Transition$1, _extends3({}, transitionProps, {
        in: open,
        onEntering: this.onEntering.bind(this),
        onEntered: this.onEntered.bind(this),
        onExit: this.onExit.bind(this),
        onExiting: this.onExiting.bind(this),
        onExited: this.onExited.bind(this)
      }), function(status) {
        var style = {
          height: height || null,
          display: status !== "exited" && "block"
        };
        var classes = (0, import_classnames2.default)(className, TRANSITION_CLASS_MAP[status] || "collapse", navbar && "navbar-collapse");
        return import_react3.default.createElement(Tag, _extends3({}, childProps, {
          style: _objectSpread({}, childProps.style, style),
          className: classes,
          ref: innerRef
        }), children);
      });
    }
  }, {
    key: "onEntering",
    value: function onEntering(node, isAppearing) {
      this.setState({
        height: getNodeHeight(node)
      });
      this.props.onEntering(node, isAppearing);
    }
  }, {
    key: "onEntered",
    value: function onEntered(node, isAppearing) {
      this.setState({
        height: null
      });
      this.props.onEntered(node, isAppearing);
    }
  }, {
    key: "onExit",
    value: function onExit(node) {
      this.setState({
        height: getNodeHeight(node)
      });
      this.props.onExit(node);
    }
  }, {
    key: "onExiting",
    value: function onExiting(node) {
      reflow(node);
      this.setState({
        height: 0
      });
      this.props.onExiting(node);
    }
  }, {
    key: "onExited",
    value: function onExited(node) {
      this.setState({
        height: null
      });
      this.props.onExited(node);
    }
  }]);
  return Collapse2;
}(import_react3.default.Component);
Collapse.propTypes = _objectSpread({}, Transition$1.propTypes, {
  /**
   * Whether it is open, or not.
   */
  open: propTypes.bool,
  /**
   * The children components.
   */
  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),
  /**
   * The element tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string]),
  /**
   * The class name.
   */
  className: propTypes.node,
  /**
   * Whether it is located inside a navbar, or not.
   */
  navbar: propTypes.bool,
  /**
   * The inner ref.
   */
  innerRef: propTypes.oneOfType([propTypes.func, propTypes.string, propTypes.object])
});
Collapse.defaultProps = _objectSpread({}, Transition$1.defaultProps, {
  open: false,
  appear: false,
  enter: true,
  exit: true,
  tag: "div",
  timeout: TIMEOUT.COLLAPSE
});
var Container = function Container2(props) {
  var className = props.className, fluid = props.fluid, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "fluid", "tag"]);
  var classes = (0, import_classnames2.default)(className, fluid ? "container-fluid" : "container");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
Container.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * Whether it is fluid, or not.
   */
  fluid: propTypes.bool,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
Container.defaultProps = {
  tag: "div"
};
var Row = function Row2(props) {
  var noGutters = props.noGutters, form = props.form, className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["noGutters", "form", "className", "tag"]);
  var classes = (0, import_classnames2.default)(className, noGutters ? "no-gutters" : null, form ? "form-row" : "row");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
Row.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * Whether it has gutters, or not.
   */
  noGutters: propTypes.bool,
  /**
   * Whether it is located inside a form, or not.
   */
  form: propTypes.bool,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
Row.defaultProps = {
  tag: "div"
};
var makeColumnClass = function makeColumnClass2(isXs, breakpoint, colSize) {
  if (colSize === true || colSize === "") {
    return isXs ? "col" : "col-".concat(breakpoint);
  } else if (colSize === "auto") {
    return isXs ? "col-auto" : "col-".concat(breakpoint, "-auto");
  }
  return isXs ? "col-".concat(colSize) : "col-".concat(breakpoint, "-").concat(colSize);
};
var Col = function Col2(props) {
  var className = props.className, breakpoints = props.breakpoints, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "breakpoints", "tag"]);
  var columnClasses = [];
  breakpoints.forEach(function(breakpoint, idx) {
    var _classNames;
    var columnProp = props[breakpoint];
    delete attrs[breakpoint];
    if (!columnProp && columnProp !== "") {
      return;
    }
    var isXs = idx === 0;
    if (_typeof2(columnProp) !== "object") {
      var _colClass = makeColumnClass(isXs, breakpoint, columnProp);
      columnClasses.push(_colClass);
      return;
    }
    var colSizeInterfix = isXs ? "-" : "-".concat(breakpoint, "-");
    var colClass = makeColumnClass(isXs, breakpoint, columnProp.size);
    columnClasses.push((0, import_classnames2.default)((_classNames = {}, _defineProperty2(_classNames, colClass, columnProp.size || columnProp.size === ""), _defineProperty2(_classNames, "order".concat(colSizeInterfix).concat(columnProp.order), columnProp.order || columnProp.order === 0), _defineProperty2(_classNames, "offset".concat(colSizeInterfix).concat(columnProp.offset), columnProp.offset || columnProp.offset === 0), _classNames)));
  });
  if (!columnClasses.length) {
    columnClasses.push("col");
  }
  var classes = (0, import_classnames2.default)(className, columnClasses);
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
Col.propTypes = {
  /**
   * Col number or config object for xs viewports.
   */
  xs: CustomPropTypes.column,
  /**
   * Col number or config object for sm viewports.
   */
  sm: CustomPropTypes.column,
  /**
   * Col number or config object for md viewports.
   */
  md: CustomPropTypes.column,
  /**
   * Col number or config object for lg viewports.
   */
  lg: CustomPropTypes.column,
  /**
   * Col number or config object for xl viewports.
   */
  xl: CustomPropTypes.column,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The available breakpoints.
   */
  breakpoints: propTypes.array,
  /**
   * The component tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
Col.defaultProps = {
  tag: "div",
  breakpoints: BREAKPOINTS
};
function styleInject(css2, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;
  if (!css2 || typeof document === "undefined") {
    return;
  }
  var head = document.head || document.getElementsByTagName("head")[0];
  var style = document.createElement("style");
  style.type = "text/css";
  if (insertAt === "top") {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }
  if (style.styleSheet) {
    style.styleSheet.cssText = css2;
  } else {
    style.appendChild(document.createTextNode(css2));
  }
}
var css = '.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle, .react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle, .react-datepicker__year-read-view--down-arrow,\n.react-datepicker__month-read-view--down-arrow,\n.react-datepicker__month-year-read-view--down-arrow {\n  margin-left: -8px;\n  position: absolute;\n}\n\n.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle, .react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle, .react-datepicker__year-read-view--down-arrow,\n.react-datepicker__month-read-view--down-arrow,\n.react-datepicker__month-year-read-view--down-arrow, .react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle::before, .react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle::before, .react-datepicker__year-read-view--down-arrow::before,\n.react-datepicker__month-read-view--down-arrow::before,\n.react-datepicker__month-year-read-view--down-arrow::before {\n  box-sizing: content-box;\n  position: absolute;\n  border: 8px solid transparent;\n  height: 0;\n  width: 1px;\n}\n\n.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle::before, .react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle::before, .react-datepicker__year-read-view--down-arrow::before,\n.react-datepicker__month-read-view--down-arrow::before,\n.react-datepicker__month-year-read-view--down-arrow::before {\n  content: "";\n  z-index: -1;\n  border-width: 8px;\n  left: -8px;\n  border-bottom-color: #aeaeae;\n}\n\n.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle {\n  top: 0;\n  margin-top: -8px;\n}\n\n.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle, .react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle::before {\n  border-top: none;\n  border-bottom-color: #f0f0f0;\n}\n\n.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle::before {\n  top: -1px;\n  border-bottom-color: #aeaeae;\n}\n\n.react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle, .react-datepicker__year-read-view--down-arrow,\n.react-datepicker__month-read-view--down-arrow,\n.react-datepicker__month-year-read-view--down-arrow {\n  bottom: 0;\n  margin-bottom: -8px;\n}\n\n.react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle, .react-datepicker__year-read-view--down-arrow,\n.react-datepicker__month-read-view--down-arrow,\n.react-datepicker__month-year-read-view--down-arrow, .react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle::before, .react-datepicker__year-read-view--down-arrow::before,\n.react-datepicker__month-read-view--down-arrow::before,\n.react-datepicker__month-year-read-view--down-arrow::before {\n  border-bottom: none;\n  border-top-color: #fff;\n}\n\n.react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle::before, .react-datepicker__year-read-view--down-arrow::before,\n.react-datepicker__month-read-view--down-arrow::before,\n.react-datepicker__month-year-read-view--down-arrow::before {\n  bottom: -1px;\n  border-top-color: #aeaeae;\n}\n\n.react-datepicker-wrapper {\n  display: inline-block;\n}\n\n.react-datepicker {\n  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;\n  font-size: 0.8rem;\n  background-color: #fff;\n  color: #000;\n  border: 1px solid #aeaeae;\n  border-radius: 0.3rem;\n  display: inline-block;\n  position: relative;\n}\n\n.react-datepicker--time-only .react-datepicker__triangle {\n  left: 35px;\n}\n\n.react-datepicker--time-only .react-datepicker__time-container {\n  border-left: 0;\n}\n\n.react-datepicker--time-only .react-datepicker__time {\n  border-radius: 0.3rem;\n}\n\n.react-datepicker--time-only .react-datepicker__time-box {\n  border-radius: 0.3rem;\n}\n\n.react-datepicker__triangle {\n  position: absolute;\n  left: 50px;\n}\n\n.react-datepicker-popper {\n  z-index: 1;\n}\n\n.react-datepicker-popper[data-placement^="bottom"] {\n  margin-top: 10px;\n}\n\n.react-datepicker-popper[data-placement^="top"] {\n  margin-bottom: 10px;\n}\n\n.react-datepicker-popper[data-placement^="right"] {\n  margin-left: 8px;\n}\n\n.react-datepicker-popper[data-placement^="right"] .react-datepicker__triangle {\n  left: auto;\n  right: 42px;\n}\n\n.react-datepicker-popper[data-placement^="left"] {\n  margin-right: 8px;\n}\n\n.react-datepicker-popper[data-placement^="left"] .react-datepicker__triangle {\n  left: 42px;\n  right: auto;\n}\n\n.react-datepicker__header {\n  text-align: center;\n  background-color: #f0f0f0;\n  border-bottom: 1px solid #aeaeae;\n  border-top-left-radius: 0.3rem;\n  border-top-right-radius: 0.3rem;\n  padding-top: 8px;\n  position: relative;\n}\n\n.react-datepicker__header--time {\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n.react-datepicker__year-dropdown-container--select,\n.react-datepicker__month-dropdown-container--select,\n.react-datepicker__month-year-dropdown-container--select,\n.react-datepicker__year-dropdown-container--scroll,\n.react-datepicker__month-dropdown-container--scroll,\n.react-datepicker__month-year-dropdown-container--scroll {\n  display: inline-block;\n  margin: 0 2px;\n}\n\n.react-datepicker__current-month,\n.react-datepicker-time__header {\n  margin-top: 0;\n  color: #000;\n  font-weight: bold;\n  font-size: 0.944rem;\n}\n\n.react-datepicker-time__header {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.react-datepicker__navigation {\n  background: none;\n  line-height: 1.7rem;\n  text-align: center;\n  cursor: pointer;\n  position: absolute;\n  top: 10px;\n  width: 0;\n  padding: 0;\n  border: 0.45rem solid transparent;\n  z-index: 1;\n  height: 10px;\n  width: 10px;\n  text-indent: -999em;\n  overflow: hidden;\n}\n\n.react-datepicker__navigation--previous {\n  left: 10px;\n  border-right-color: #ccc;\n}\n\n.react-datepicker__navigation--previous:hover {\n  border-right-color: #b3b3b3;\n}\n\n.react-datepicker__navigation--previous--disabled, .react-datepicker__navigation--previous--disabled:hover {\n  border-right-color: #e6e6e6;\n  cursor: default;\n}\n\n.react-datepicker__navigation--next {\n  right: 10px;\n  border-left-color: #ccc;\n}\n\n.react-datepicker__navigation--next--with-time:not(.react-datepicker__navigation--next--with-today-button) {\n  right: 80px;\n}\n\n.react-datepicker__navigation--next:hover {\n  border-left-color: #b3b3b3;\n}\n\n.react-datepicker__navigation--next--disabled, .react-datepicker__navigation--next--disabled:hover {\n  border-left-color: #e6e6e6;\n  cursor: default;\n}\n\n.react-datepicker__navigation--years {\n  position: relative;\n  top: 0;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.react-datepicker__navigation--years-previous {\n  top: 4px;\n  border-top-color: #ccc;\n}\n\n.react-datepicker__navigation--years-previous:hover {\n  border-top-color: #b3b3b3;\n}\n\n.react-datepicker__navigation--years-upcoming {\n  top: -4px;\n  border-bottom-color: #ccc;\n}\n\n.react-datepicker__navigation--years-upcoming:hover {\n  border-bottom-color: #b3b3b3;\n}\n\n.react-datepicker__month-container {\n  float: left;\n}\n\n.react-datepicker__month {\n  margin: 0.4rem;\n  text-align: center;\n}\n\n.react-datepicker__time-container {\n  float: right;\n  border-left: 1px solid #aeaeae;\n  width: 70px;\n}\n\n.react-datepicker__time-container--with-today-button {\n  display: inline;\n  border: 1px solid #aeaeae;\n  border-radius: 0.3rem;\n  position: absolute;\n  right: -72px;\n  top: 0;\n}\n\n.react-datepicker__time-container .react-datepicker__time {\n  position: relative;\n  background: white;\n}\n\n.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n  width: 70px;\n  overflow-x: hidden;\n  margin: 0 auto;\n  text-align: center;\n}\n\n.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list {\n  list-style: none;\n  margin: 0;\n  height: calc(195px + (1.7rem / 2));\n  overflow-y: scroll;\n  padding-right: 0px;\n  padding-left: 0px;\n  width: 100%;\n  box-sizing: content-box;\n}\n\n.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item {\n  height: 30px;\n  padding: 5px 10px;\n}\n\n.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item:hover {\n  cursor: pointer;\n  background-color: #f0f0f0;\n}\n\n.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected {\n  background-color: #216ba5;\n  color: white;\n  font-weight: bold;\n}\n\n.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected:hover {\n  background-color: #216ba5;\n}\n\n.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--disabled {\n  color: #ccc;\n}\n\n.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--disabled:hover {\n  cursor: default;\n  background-color: transparent;\n}\n\n.react-datepicker__week-number {\n  color: #ccc;\n  display: inline-block;\n  width: 1.7rem;\n  line-height: 1.7rem;\n  text-align: center;\n  margin: 0.166rem;\n}\n\n.react-datepicker__week-number.react-datepicker__week-number--clickable {\n  cursor: pointer;\n}\n\n.react-datepicker__week-number.react-datepicker__week-number--clickable:hover {\n  border-radius: 0.3rem;\n  background-color: #f0f0f0;\n}\n\n.react-datepicker__day-names,\n.react-datepicker__week {\n  white-space: nowrap;\n}\n\n.react-datepicker__day-name,\n.react-datepicker__day,\n.react-datepicker__time-name {\n  color: #000;\n  display: inline-block;\n  width: 1.7rem;\n  line-height: 1.7rem;\n  text-align: center;\n  margin: 0.166rem;\n}\n\n.react-datepicker__day {\n  cursor: pointer;\n}\n\n.react-datepicker__day:hover {\n  border-radius: 0.3rem;\n  background-color: #f0f0f0;\n}\n\n.react-datepicker__day--today {\n  font-weight: bold;\n}\n\n.react-datepicker__day--highlighted {\n  border-radius: 0.3rem;\n  background-color: #3dcc4a;\n  color: #fff;\n}\n\n.react-datepicker__day--highlighted:hover {\n  background-color: #32be3f;\n}\n\n.react-datepicker__day--highlighted-custom-1 {\n  color: magenta;\n}\n\n.react-datepicker__day--highlighted-custom-2 {\n  color: green;\n}\n\n.react-datepicker__day--selected, .react-datepicker__day--in-selecting-range, .react-datepicker__day--in-range {\n  border-radius: 0.3rem;\n  background-color: #216ba5;\n  color: #fff;\n}\n\n.react-datepicker__day--selected:hover, .react-datepicker__day--in-selecting-range:hover, .react-datepicker__day--in-range:hover {\n  background-color: #1d5d90;\n}\n\n.react-datepicker__day--keyboard-selected {\n  border-radius: 0.3rem;\n  background-color: #2a87d0;\n  color: #fff;\n}\n\n.react-datepicker__day--keyboard-selected:hover {\n  background-color: #1d5d90;\n}\n\n.react-datepicker__day--in-selecting-range:not(.react-datepicker__day--in-range) {\n  background-color: rgba(33, 107, 165, 0.5);\n}\n\n.react-datepicker__month--selecting-range .react-datepicker__day--in-range:not(.react-datepicker__day--in-selecting-range) {\n  background-color: #f0f0f0;\n  color: #000;\n}\n\n.react-datepicker__day--disabled {\n  cursor: default;\n  color: #ccc;\n}\n\n.react-datepicker__day--disabled:hover {\n  background-color: transparent;\n}\n\n.react-datepicker__input-container {\n  position: relative;\n  display: inline-block;\n}\n\n.react-datepicker__year-read-view,\n.react-datepicker__month-read-view,\n.react-datepicker__month-year-read-view {\n  border: 1px solid transparent;\n  border-radius: 0.3rem;\n}\n\n.react-datepicker__year-read-view:hover,\n.react-datepicker__month-read-view:hover,\n.react-datepicker__month-year-read-view:hover {\n  cursor: pointer;\n}\n\n.react-datepicker__year-read-view:hover .react-datepicker__year-read-view--down-arrow,\n.react-datepicker__year-read-view:hover .react-datepicker__month-read-view--down-arrow,\n.react-datepicker__month-read-view:hover .react-datepicker__year-read-view--down-arrow,\n.react-datepicker__month-read-view:hover .react-datepicker__month-read-view--down-arrow,\n.react-datepicker__month-year-read-view:hover .react-datepicker__year-read-view--down-arrow,\n.react-datepicker__month-year-read-view:hover .react-datepicker__month-read-view--down-arrow {\n  border-top-color: #b3b3b3;\n}\n\n.react-datepicker__year-read-view--down-arrow,\n.react-datepicker__month-read-view--down-arrow,\n.react-datepicker__month-year-read-view--down-arrow {\n  border-top-color: #ccc;\n  float: right;\n  margin-left: 20px;\n  top: 8px;\n  position: relative;\n  border-width: 0.45rem;\n}\n\n.react-datepicker__year-dropdown,\n.react-datepicker__month-dropdown,\n.react-datepicker__month-year-dropdown {\n  background-color: #f0f0f0;\n  position: absolute;\n  width: 50%;\n  left: 25%;\n  top: 30px;\n  z-index: 1;\n  text-align: center;\n  border-radius: 0.3rem;\n  border: 1px solid #aeaeae;\n}\n\n.react-datepicker__year-dropdown:hover,\n.react-datepicker__month-dropdown:hover,\n.react-datepicker__month-year-dropdown:hover {\n  cursor: pointer;\n}\n\n.react-datepicker__year-dropdown--scrollable,\n.react-datepicker__month-dropdown--scrollable,\n.react-datepicker__month-year-dropdown--scrollable {\n  height: 150px;\n  overflow-y: scroll;\n}\n\n.react-datepicker__year-option,\n.react-datepicker__month-option,\n.react-datepicker__month-year-option {\n  line-height: 20px;\n  width: 100%;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.react-datepicker__year-option:first-of-type,\n.react-datepicker__month-option:first-of-type,\n.react-datepicker__month-year-option:first-of-type {\n  border-top-left-radius: 0.3rem;\n  border-top-right-radius: 0.3rem;\n}\n\n.react-datepicker__year-option:last-of-type,\n.react-datepicker__month-option:last-of-type,\n.react-datepicker__month-year-option:last-of-type {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  border-bottom-left-radius: 0.3rem;\n  border-bottom-right-radius: 0.3rem;\n}\n\n.react-datepicker__year-option:hover,\n.react-datepicker__month-option:hover,\n.react-datepicker__month-year-option:hover {\n  background-color: #ccc;\n}\n\n.react-datepicker__year-option:hover .react-datepicker__navigation--years-upcoming,\n.react-datepicker__month-option:hover .react-datepicker__navigation--years-upcoming,\n.react-datepicker__month-year-option:hover .react-datepicker__navigation--years-upcoming {\n  border-bottom-color: #b3b3b3;\n}\n\n.react-datepicker__year-option:hover .react-datepicker__navigation--years-previous,\n.react-datepicker__month-option:hover .react-datepicker__navigation--years-previous,\n.react-datepicker__month-year-option:hover .react-datepicker__navigation--years-previous {\n  border-top-color: #b3b3b3;\n}\n\n.react-datepicker__year-option--selected,\n.react-datepicker__month-option--selected,\n.react-datepicker__month-year-option--selected {\n  position: absolute;\n  left: 15px;\n}\n\n.react-datepicker__close-icon {\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  outline: 0;\n  padding: 0;\n  vertical-align: middle;\n  position: absolute;\n  height: 16px;\n  width: 16px;\n  top: 25%;\n  right: 7px;\n}\n\n.react-datepicker__close-icon::after {\n  background-color: #216ba5;\n  border-radius: 50%;\n  bottom: 0;\n  box-sizing: border-box;\n  color: #fff;\n  content: "\\00d7";\n  cursor: pointer;\n  font-size: 12px;\n  height: 16px;\n  width: 16px;\n  line-height: 1;\n  margin: -8px auto 0;\n  padding: 2px;\n  position: absolute;\n  right: 0px;\n  text-align: center;\n}\n\n.react-datepicker__today-button {\n  background: #f0f0f0;\n  border-top: 1px solid #aeaeae;\n  cursor: pointer;\n  text-align: center;\n  font-weight: bold;\n  padding: 5px 0;\n  clear: left;\n}\n\n.react-datepicker__portal {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.8);\n  left: 0;\n  top: 0;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  z-index: 2147483647;\n}\n\n.react-datepicker__portal .react-datepicker__day-name,\n.react-datepicker__portal .react-datepicker__day,\n.react-datepicker__portal .react-datepicker__time-name {\n  width: 3rem;\n  line-height: 3rem;\n}\n\n@media (max-width: 400px), (max-height: 550px) {\n  .react-datepicker__portal .react-datepicker__day-name,\n  .react-datepicker__portal .react-datepicker__day,\n  .react-datepicker__portal .react-datepicker__time-name {\n    width: 2rem;\n    line-height: 2rem;\n  }\n}\n\n.react-datepicker__portal .react-datepicker__current-month,\n.react-datepicker__portal .react-datepicker-time__header {\n  font-size: 1.44rem;\n}\n\n.react-datepicker__portal .react-datepicker__navigation {\n  border: 0.81rem solid transparent;\n}\n\n.react-datepicker__portal .react-datepicker__navigation--previous {\n  border-right-color: #ccc;\n}\n\n.react-datepicker__portal .react-datepicker__navigation--previous:hover {\n  border-right-color: #b3b3b3;\n}\n\n.react-datepicker__portal .react-datepicker__navigation--previous--disabled, .react-datepicker__portal .react-datepicker__navigation--previous--disabled:hover {\n  border-right-color: #e6e6e6;\n  cursor: default;\n}\n\n.react-datepicker__portal .react-datepicker__navigation--next {\n  border-left-color: #ccc;\n}\n\n.react-datepicker__portal .react-datepicker__navigation--next:hover {\n  border-left-color: #b3b3b3;\n}\n\n.react-datepicker__portal .react-datepicker__navigation--next--disabled, .react-datepicker__portal .react-datepicker__navigation--next--disabled:hover {\n  border-left-color: #e6e6e6;\n  cursor: default;\n}\n';
styleInject(css);
var css$1 = "/**\n * Datepicker Styles\n */\n\n.react-datepicker {\n  border: none;\n}\n\n.react-datepicker-popper,\n.react-datepicker {\n  z-index: 1000;\n}\n\n.react-datepicker__month-container {\n  border: none;\n  box-shadow: 0 0.5rem 4rem rgba(0, 0, 0, 0.11), 0 10px 20px rgba(0, 0, 0, 0.05),\n    0 2px 3px rgba(0, 0, 0, 0.06);\n}\n\n.react-datepicker__header {\n  border: none;\n  background: #fff;\n  padding-top: 20px;\n}\n\n.react-datepicker__day-name,\n.react-datepicker__day,\n.react-datepicker__time-name,\n.react-datepicker__current-month {\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\n    Helvetica Neue, Arial, sans-serif;\n  color: #5a6169;\n}\n\n.react-datepicker__day--disabled {\n  color: #ddd;\n}\n\n.react-datepicker__day--disabled:hover {\n  background: transparent !important;\n}\n\n.react-datepicker__day {\n  transition: all 0.25s cubic-bezier(0.27, 0.01, 0.38, 1.06);\n}\n\n.react-datepicker__day:hover {\n  background-color: #eceeef;\n}\n\n.react-datepicker__current-month {\n  font-weight: 600;\n}\n\n.react-datepicker__day,\n.react-datepicker__day:hover,\n.react-datepicker__day--keyboard-selected {\n  border-radius: 50%;\n}\n\n.react-datepicker__day--highlighted {\n  background: #e6f2ff;\n}\n\n.react-datepicker__day--keyboard-selected,\n.react-datepicker__day--selected {\n  color: #fff;\n  background: #007bff;\n}\n\n.react-datepicker__day--keyboard-selected:hover,\n.react-datepicker__day--selected:hover {\n  background: #006fe6;\n}\n\n.react-datepicker__header,\n.react-datepicker__month-container {\n  border-bottom-left-radius: 0.375rem;\n  border-bottom-right-radius: 0.375rem;\n}\n\n.react-datepicker__header {\n  border-top-left-radius: 0.375rem;\n  border-top-right-radius: 0.375rem;\n}\n\n.react-datepicker {\n  border-radius: 0.375rem;\n}\n\n.react-datepicker__navigation {\n  top: 25px;\n}\n\n.react-datepicker__triangle:before {\n  border-bottom-color: #e3e3e3 !important;\n}\n\n.react-datepicker__month {\n  padding: 10px 15px;\n}\n\n/* Datepicker & Input Groups */\n\n.input-group > .react-datepicker-wrapper .form-control {\n  position: relative;\n}\n\n.input-group > .react-datepicker-wrapper:not(:first-child) .form-control {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.input-group > .react-datepicker-wrapper:not(:last-child) .form-control {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.input-group > .react-datepicker-wrapper ~ .react-datepicker-wrapper input {\n  margin-left: -1px;\n}\n\n.input-group\n  > .react-datepicker-wrapper\n  ~ .react-datepicker-wrapper\n  ~ .input-group-append {\n  margin-left: -2px;\n}\n\n.input-group > .react-datepicker-wrapper .form-control:focus {\n  z-index: 3;\n}\n";
styleInject(css$1);
var DatePicker = function DatePicker2(props) {
  var className = props.className, size = props.size, attrs = _objectWithoutProperties(props, ["className", "size"]);
  var classes = (0, import_classnames2.default)(className, "form-control", size && "form-control-".concat(size));
  if (!attrs.dropdownMode) {
    attrs.dropdownMode = "select";
  }
  return import_react3.default.createElement(es_default, _extends3({}, props, {
    className: classes
  }));
};
DatePicker.propTypes = _objectSpread({}, es_default.propTypes, {
  size: propTypes.string
});
var DropdownContext = import_react3.default.createContext({
  toggle: function toggle() {
  },
  open: false,
  direction: "down",
  nav: false
});
var Dropdown = function(_React$Component) {
  _inherits2(Dropdown2, _React$Component);
  function Dropdown2(props) {
    var _this;
    _classCallCheck2(this, Dropdown2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(Dropdown2).call(this, props));
    _this.handleListeners = _this.handleListeners.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.addListeners = _this.addListeners.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.removeListeners = _this.removeListeners.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.getContainer = _this.getContainer.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.toggle = _this.toggle.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    return _this;
  }
  _createClass2(Dropdown2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.handleListeners();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.removeListeners();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.props.open !== prevProps.open) {
        this.handleListeners();
      }
    }
  }, {
    key: "handleListeners",
    value: function handleListeners() {
      if (this.props.open) {
        this.addListeners();
        return;
      }
      this.removeListeners();
    }
  }, {
    key: "addListeners",
    value: function addListeners() {
      var _this2 = this;
      EVENTS.CLICK.forEach(function(e3) {
        return document.addEventListener(e3, _this2.handleDocumentClick, true);
      });
    }
  }, {
    key: "removeListeners",
    value: function removeListeners() {
      var _this3 = this;
      EVENTS.CLICK.forEach(function(e3) {
        return document.removeEventListener(e3, _this3.handleDocumentClick, true);
      });
    }
  }, {
    key: "getContainer",
    value: function getContainer() {
      return import_react_dom2.default.findDOMNode(this);
    }
  }, {
    key: "handleDocumentClick",
    value: function handleDocumentClick(e3) {
      if (e3 && (e3.which === 3 || e3.type === "keyup" && e3.which !== KEYCODES.TAB)) return;
      var container = this.getContainer();
      if (container.contains(e3.target) && container !== e3.target && (e3.type !== "keyup" || e3.which === KEYCODES.TAB)) {
        return;
      }
      this.toggle(e3);
    }
  }, {
    key: "toggle",
    value: function toggle4(e3) {
      if (this.props.disabled) {
        return e3 && e3.preventDefault();
      }
      return this.props.toggle(e3);
    }
  }, {
    key: "render",
    value: function render() {
      var props = (0, import_lodash4.default)(this.props, ["toggle", "disabled", "inNavbar", "direction"]);
      var className = props.className, children = props.children, dropup = props.dropup, open = props.open, group = props.group, size = props.size, nav = props.nav, setActiveFromChild = props.setActiveFromChild, active = props.active, addonType = props.addonType, attrs = _objectWithoutProperties(props, ["className", "children", "dropup", "open", "group", "size", "nav", "setActiveFromChild", "active", "addonType"]);
      var direction = this.props.direction === "down" && dropup ? "up" : this.props.direction;
      attrs.tag = attrs.tag || (nav ? "li" : "div");
      var subItemIsActive = false;
      if (setActiveFromChild) {
        import_react3.default.Children.map(this.props.children[1].props.children, function(dropdownItem) {
          if (dropdownItem && dropdownItem.props.active) subItemIsActive = true;
        });
      }
      var classes = (0, import_classnames2.default)(className, direction !== "down" && "drop".concat(direction), nav && active && "active", setActiveFromChild && subItemIsActive && "active", addonType && "input-group-".concat(addonType), group && "btn-group", !!size && "btn-group-".concat(size), !group && !addonType && "dropdown", open && "show", nav && "nav-item");
      var toggle4 = this.toggle;
      return import_react3.default.createElement(DropdownContext.Provider, {
        value: {
          toggle: toggle4,
          open,
          direction,
          nav
        }
      }, import_react3.default.createElement(Manager, attrs, import_react3.default.createElement(DropdownContext.Consumer, null, function() {
        return import_react3.default.createElement("div", {
          className: classes
        }, children);
      })));
    }
  }]);
  return Dropdown2;
}(import_react3.default.Component);
Dropdown.propTypes = {
  /**
   * Whether it is open, or not.
   */
  open: propTypes.bool,
  /**
   * Whether it is disabled, or not.
   */
  disabled: propTypes.bool,
  /**
   * The toggle function.
   */
  toggle: propTypes.func,
  /**
   * Whether it is located inside a navbar, or not.
   */
  inNavbar: propTypes.bool,
  /**
   * Whether it is a drop-up, or not.
   */
  dropup: propTypes.bool,
  /**
   * The component's tag type.
   */
  tag: propTypes.string,
  /**
   * Whether it is located inside a Nav, or not.
   */
  nav: propTypes.bool,
  /**
   * The direction.
   */
  direction: propTypes.oneOf(["up", "down", "left", "right"])
};
Dropdown.defaultProps = {
  open: false,
  direction: "down",
  nav: false
};
var DropdownToggle = function(_React$Component) {
  _inherits2(DropdownToggle2, _React$Component);
  function DropdownToggle2(props) {
    var _this;
    _classCallCheck2(this, DropdownToggle2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(DropdownToggle2).call(this, props));
    _this.onClick = _this.onClick.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    return _this;
  }
  _createClass2(DropdownToggle2, [{
    key: "onClick",
    value: function onClick(e3) {
      if (this.props.disabled) {
        e3.preventDefault();
        return;
      }
      if (this.props.nav && !this.props.tag) {
        e3.preventDefault();
      }
      if (this.props.onClick) {
        this.props.onClick(e3);
      }
      this.context.toggle(e3);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props = this.props, className = _this$props.className, theme = _this$props.theme, caret = _this$props.caret, split = _this$props.split, nav = _this$props.nav, tag = _this$props.tag, attrs = _objectWithoutProperties(_this$props, ["className", "theme", "caret", "split", "nav", "tag"]);
      var ariaLabel = attrs["aria-label"] || "Toggle Dropdown";
      var classes = (0, import_classnames2.default)(className, (caret || split) && "dropdown-toggle", split && "dropdown-toggle-split", nav && "nav-link");
      var children = attrs.children || import_react3.default.createElement("span", {
        className: "sr-only"
      }, ariaLabel);
      var Tag;
      if (nav && !tag) {
        Tag = "a";
        attrs.href = "#";
      } else if (!tag) {
        Tag = Button;
        attrs.theme = theme;
      } else {
        Tag = tag;
      }
      if (this.context.inNavbar) {
        return import_react3.default.createElement(Reference, null, function() {
          return import_react3.default.createElement(Tag, _extends3({}, attrs, {
            className: classes,
            onClick: _this2.onClick,
            "aria-expanded": _this2.context.isOpen
          }), children);
        });
      }
      return import_react3.default.createElement(Reference, null, function() {
        return import_react3.default.createElement(Tag, _extends3({}, attrs, {
          className: classes,
          onClick: _this2.onClick,
          "aria-expanded": _this2.context.isOpen
        }), children);
      });
    }
  }]);
  return DropdownToggle2;
}(import_react3.default.Component);
DropdownToggle.propTypes = {
  /**
   * Whether it should display a caret, or not.
   */
  caret: propTypes.bool,
  /**
   * The theme color.
   */
  theme: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * Whether it is disabled, or not.
   */
  disabled: propTypes.bool,
  /**
   * The function that should be triggered on click.
   */
  onClick: propTypes.func,
  /**
   * The aria-haspopup attribute.
   */
  "aria-haspopup": propTypes.bool,
  /**
   * Whether it is split, or not.
   */
  split: propTypes.bool,
  /**
   * Whether it is located inside a nav, or not.
   */
  nav: propTypes.bool,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
DropdownToggle.defaultProps = {
  "aria-haspopup": true,
  theme: "primary"
};
DropdownToggle.contextType = DropdownContext;
var DropdownMenu = function(_React$Component) {
  _inherits2(DropdownMenu2, _React$Component);
  function DropdownMenu2() {
    _classCallCheck2(this, DropdownMenu2);
    return _possibleConstructorReturn2(this, _getPrototypeOf2(DropdownMenu2).apply(this, arguments));
  }
  _createClass2(DropdownMenu2, [{
    key: "render",
    value: function render() {
      var _this = this;
      var _this$props = this.props, className = _this$props.className, children = _this$props.children, right = _this$props.right, Tag = _this$props.tag, flip2 = _this$props.flip, small = _this$props.small, modifiers2 = _this$props.modifiers, persist = _this$props.persist, attrs = _objectWithoutProperties(_this$props, ["className", "children", "right", "tag", "flip", "small", "modifiers", "persist"]);
      var classes = (0, import_classnames2.default)(className, "dropdown-menu", small && "dropdown-menu-small", right && "dropdown-menu-right", this.context.open && "show");
      if (persist || this.context.open && !this.context.inNavbar) {
        var pos1 = DROPDOWN_POSITION_MAP[this.context.direction.toUpperCase()] || "bottom";
        var pos2 = right ? "end" : "start";
        attrs.placement = "".concat(pos1, "-").concat(pos2);
        attrs.component = Tag;
        attrs.modifiers = !flip2 ? _objectSpread({}, modifiers2, {
          flip: {
            enabled: false
          }
        }) : modifiers2;
        return import_react3.default.createElement(Popper2, attrs, function(_ref) {
          var ref = _ref.ref, placement = _ref.placement;
          return import_react3.default.createElement("div", {
            ref,
            className: classes,
            "x-placement": placement,
            "aria-hidden": !_this.context.open,
            tabIndex: "-1",
            role: "menu"
          }, children);
        });
      }
      return import_react3.default.createElement(Tag, _extends3({
        tabIndex: "-1",
        role: "menu"
      }, attrs, {
        className: classes
      }), children);
    }
  }]);
  return DropdownMenu2;
}(import_react3.default.Component);
DropdownMenu.propTypes = {
  /**
   * The component tag.
   */
  tag: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.node.isRequired,
  /**
   * Whether it is positioned on the right side, or not.
   */
  right: propTypes.bool,
  /**
   * Whether it should flip, or not.
   */
  flip: propTypes.bool,
  /**
   * Whether the dropdown is small, or not.
   */
  small: propTypes.bool,
  /**
   * The modifiers config object.
   */
  modifiers: propTypes.object,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * Whether it should persist, or not.
   */
  persist: propTypes.bool
};
DropdownMenu.defaultProps = {
  tag: "div",
  flip: true
};
DropdownMenu.contextType = DropdownContext;
var DropdownItem = function(_React$Component) {
  _inherits2(DropdownItem2, _React$Component);
  function DropdownItem2(props) {
    var _this;
    _classCallCheck2(this, DropdownItem2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(DropdownItem2).call(this, props));
    _this.onClick = _this.onClick.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.getTabIndex = _this.getTabIndex.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    return _this;
  }
  _createClass2(DropdownItem2, [{
    key: "onClick",
    value: function onClick(e3) {
      if (this.props.disabled || this.props.header || this.props.divider) {
        e3.preventDefault();
        return;
      }
      if (this.props.onClick) {
        this.props.onClick(e3);
      }
      if (this.props.toggle) {
        this.context.toggle(e3);
      }
    }
  }, {
    key: "getTabIndex",
    value: function getTabIndex() {
      if (this.props.disabled || this.props.header || this.props.divider) {
        return "-1";
      }
      return "0";
    }
  }, {
    key: "render",
    value: function render() {
      var _omit = (0, import_lodash4.default)(this.props, ["toggle"]), className = _omit.className, divider = _omit.divider, Tag = _omit.tag, header = _omit.header, active = _omit.active, attrs = _objectWithoutProperties(_omit, ["className", "divider", "tag", "header", "active"]);
      var tabIndex = this.getTabIndex();
      var classes = (0, import_classnames2.default)(className, attrs.disabled && "disabled", !divider && !header && "dropdown-item", header && "dropdown-header", divider && "dropdown-divider", active && "active");
      if (Tag === "button") {
        if (header) {
          Tag = "h6";
        } else if (divider) {
          Tag = "div";
        } else if (attrs.href) {
          Tag = "a";
        }
      }
      return import_react3.default.createElement(Tag, _extends3({
        type: Tag === "button" && (attrs.onClick || attrs.toggle) ? "button" : void 0
      }, attrs, {
        tabIndex,
        className: classes,
        onClick: this.onClick
      }));
    }
  }]);
  return DropdownItem2;
}(import_react3.default.Component);
DropdownItem.propTypes = {
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * Whether it is active, or not.
   */
  active: propTypes.bool,
  /**
   * Whether it is disabled, or not.
   */
  disabled: propTypes.bool,
  /**
   * Whether it is a divider, or not.
   */
  divider: propTypes.bool,
  /**
   * Whether it is a dropdown header item, or not.
   */
  header: propTypes.bool,
  /**
   * The function that should be triggered on click.
   */
  onClick: propTypes.func,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * Whether it should toggle the dropdown, or not.
   */
  toggle: propTypes.bool,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
DropdownItem.defaultProps = {
  tag: "button",
  toggle: true
};
DropdownItem.contextType = DropdownContext;
var Form = function(_React$Component) {
  _inherits2(Form2, _React$Component);
  function Form2(props) {
    var _this;
    _classCallCheck2(this, Form2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(Form2).call(this, props));
    _this.getRef = _this.getRef.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.submit = _this.submit.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    return _this;
  }
  _createClass2(Form2, [{
    key: "getRef",
    value: function getRef(ref) {
      if (this.props.innerRef) {
        this.props.innerRef(ref);
      }
      this.ref = ref;
    }
  }, {
    key: "submit",
    value: function submit() {
      if (this.ref) {
        this.ref.submit();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props, className = _this$props.className, Tag = _this$props.tag, inline = _this$props.inline, innerRef = _this$props.innerRef, attrs = _objectWithoutProperties(_this$props, ["className", "tag", "inline", "innerRef"]);
      var classes = (0, import_classnames2.default)(className, inline && "form-inline");
      return import_react3.default.createElement(Tag, _extends3({}, attrs, {
        ref: innerRef,
        className: classes
      }));
    }
  }]);
  return Form2;
}(import_react3.default.Component);
Form.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * Whether it is inline, or not.
   */
  inline: propTypes.bool,
  /**
   * The children nodes.
   */
  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),
  /**
   * The inner ref.
   */
  innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string]),
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
Form.defaultProps = {
  tag: "form"
};
var FormFeedback = function FormFeedback2(props) {
  var className = props.className, valid = props.valid, tooltip = props.tooltip, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "valid", "tooltip", "tag"]);
  var validMode = tooltip ? "tooltip" : "feedback";
  var classes = (0, import_classnames2.default)(className, valid ? "valid-".concat(validMode) : "invalid-".concat(validMode));
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
FormFeedback.propTypes = {
  /**
   * The children.
   */
  children: propTypes.node,
  /**
   * The tag type.
   */
  tag: propTypes.string,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * Whether the feedback is valid, or not.
   */
  valid: propTypes.bool,
  /**
   * Whether the feedback should be displayed as tooltip.
   */
  tooltip: propTypes.bool
};
FormFeedback.defaultProps = {
  tag: "div",
  valid: void 0
};
var FormCheckbox = function(_React$Component) {
  _inherits2(FormCheckbox2, _React$Component);
  function FormCheckbox2(props) {
    var _this;
    _classCallCheck2(this, FormCheckbox2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(FormCheckbox2).call(this, props));
    _this.getRef = _this.getRef.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    return _this;
  }
  _createClass2(FormCheckbox2, [{
    key: "getRef",
    value: function getRef(ref) {
      if (this.props.innerRef) {
        this.props.innerRef(ref);
      }
      this.ref = ref;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props, className = _this$props.className, children = _this$props.children, inline = _this$props.inline, valid = _this$props.valid, invalid = _this$props.invalid, innerRef = _this$props.innerRef, toggle4 = _this$props.toggle, small = _this$props.small, _id = _this$props.id, attrs = _objectWithoutProperties(_this$props, ["className", "children", "inline", "valid", "invalid", "innerRef", "toggle", "small", "id"]);
      var labelClasses = (0, import_classnames2.default)(className, "custom-control", !toggle4 ? "custom-checkbox" : "custom-toggle", toggle4 && small && "custom-toggle-sm", inline && "custom-control-inline", valid && "is-valid", invalid && "is-invalid");
      var inputClasses = (0, import_classnames2.default)("custom-control-input", valid && "is-valid", invalid && "is-invalid");
      var id = _id || "dr-checkbox-".concat(import_shortid.default.generate());
      return import_react3.default.createElement("label", {
        className: labelClasses
      }, import_react3.default.createElement("input", _extends3({}, attrs, {
        ref: innerRef,
        id,
        type: "checkbox",
        className: inputClasses
      })), import_react3.default.createElement("label", {
        id,
        className: "custom-control-label",
        "aria-hidden": "true",
        onClick: this.props.onChange
      }), import_react3.default.createElement("span", {
        className: "custom-control-description"
      }, children));
    }
  }]);
  return FormCheckbox2;
}(import_react3.default.Component);
FormCheckbox.defaultProps = {
  onChange: function onChange() {
  }
};
FormCheckbox.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * Whether it is inline, or not.
   */
  inline: propTypes.bool,
  /**
   * Whether it is valid, or not.
   */
  valid: propTypes.bool,
  /**
   * Whether it is invalid, or not.
   */
  invalid: propTypes.bool,
  /**
   * Whether it is a toggle button, or not.
   */
  toggle: propTypes.bool,
  /**
   * Whether it is small (toggle), or not.
   */
  small: propTypes.bool,
  /**
   * The onChange handler.
   */
  onChange: propTypes.func,
  /**
   * The inner ref.
   */
  innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string])
};
var FormGroup = function FormGroup2(props) {
  var className = props.className, row = props.row, disabled = props.disabled, check = props.check, inline = props.inline, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "row", "disabled", "check", "inline", "tag"]);
  var classes = (0, import_classnames2.default)(className, row && "row", check ? "form-check" : "form-group", check && inline && "form-check-inline", check && disabled && "disabled");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
FormGroup.propTypes = {
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * Whether it is a row, or not.
   */
  row: propTypes.bool,
  /**
   * Whether it is a form check, or not.
   */
  check: propTypes.bool,
  /**
   * Whether it is displayed inline (form check) or not.
   */
  inline: propTypes.bool,
  /**
   * Whether it is disabled, or not.
   */
  disabled: propTypes.bool,
  /**
   * The components' tag type.
   */
  tag: propTypes.string,
  /**
   * The class name.
   */
  className: propTypes.string
};
FormGroup.defaultProps = {
  tag: "div"
};
var FormInput = function(_React$Component) {
  _inherits2(FormInput2, _React$Component);
  function FormInput2(props) {
    var _this;
    _classCallCheck2(this, FormInput2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(FormInput2).call(this, props));
    _this.ref = null;
    _this.getRef = _this.getRef.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.focus = _this.focus.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    return _this;
  }
  _createClass2(FormInput2, [{
    key: "getRef",
    value: function getRef(ref) {
      if (this.props.innerRef) {
        this.props.innerRef(ref);
      }
      this.ref = ref;
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.ref) {
        this.ref.focus();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props, className = _this$props.className, plaintext = _this$props.plaintext, size = _this$props.size, invalid = _this$props.invalid, valid = _this$props.valid, innerRef = _this$props.innerRef, attrs = _objectWithoutProperties(_this$props, ["className", "plaintext", "size", "invalid", "valid", "innerRef"]);
      var classes = (0, import_classnames2.default)(className, plaintext ? "form-control-plaintext" : "form-control", plaintext && "w-100", size && "form-control-".concat(size), valid && "is-valid", invalid && "is-invalid");
      return import_react3.default.createElement("input", _extends3({}, attrs, {
        ref: innerRef,
        className: classes
      }));
    }
  }]);
  return FormInput2;
}(import_react3.default.Component);
FormInput.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * Whether it is inline, or not.
   */
  inline: propTypes.bool,
  /**
   * The input type.
   */
  type: propTypes.oneOf(INPUT_TYPES),
  /**
   * Whether it is plaintext, or not.
   */
  plaintext: propTypes.bool,
  /**
   * The input's size.
   */
  size: propTypes.string,
  /**
   * Whether it is valid, or not.
   */
  valid: propTypes.bool,
  /**
   * Whether it is invalid, or not.
   */
  invalid: propTypes.bool,
  /**
   * The inner ref.
   */
  innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string])
};
var FormRadio = function(_React$Component) {
  _inherits2(FormRadio2, _React$Component);
  function FormRadio2(props) {
    var _this;
    _classCallCheck2(this, FormRadio2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(FormRadio2).call(this, props));
    _this.getRef = _this.getRef.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    return _this;
  }
  _createClass2(FormRadio2, [{
    key: "getRef",
    value: function getRef(ref) {
      if (this.props.innerRef) {
        this.props.innerRef(ref);
      }
      this.ref = ref;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props, className = _this$props.className, children = _this$props.children, inline = _this$props.inline, valid = _this$props.valid, invalid = _this$props.invalid, innerRef = _this$props.innerRef, onChange3 = _this$props.onChange, _id = _this$props.id, attrs = _objectWithoutProperties(_this$props, ["className", "children", "inline", "valid", "invalid", "innerRef", "onChange", "id"]);
      var labelClasses = (0, import_classnames2.default)("custom-control", "custom-radio", inline && "custom-control-inline", valid && "is-valid", invalid && "is-invalid");
      var inputClasses = (0, import_classnames2.default)(className, "custom-control-input", valid && "is-valid", invalid && "is-invalid");
      var id = _id || "dr-radio-".concat(import_shortid.default.generate());
      return import_react3.default.createElement("label", {
        className: labelClasses
      }, import_react3.default.createElement("input", _extends3({}, attrs, {
        ref: innerRef,
        id,
        type: "radio",
        className: inputClasses,
        onChange: onChange3
      })), import_react3.default.createElement("label", {
        id,
        className: "custom-control-label",
        "aria-hidden": "true",
        onClick: onChange3
      }), import_react3.default.createElement("span", {
        className: "custom-control-description"
      }, children));
    }
  }]);
  return FormRadio2;
}(import_react3.default.Component);
FormRadio.defaultProps = {
  onChange: function onChange2() {
  }
};
FormRadio.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The children.
   */
  children: propTypes.node,
  /**
   * Whether it is inline, or not.
   */
  inline: propTypes.bool,
  /**
   * Whether it is valid, or not.
   */
  valid: propTypes.bool,
  /**
   * The function that should run on change.
   */
  onChange: propTypes.func,
  /**
   * Whether it is invalid, or not.
   */
  invalid: propTypes.bool,
  /**
   * The inner ref.
   */
  innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string])
};
var FormSelect = function(_React$Component) {
  _inherits2(FormSelect2, _React$Component);
  function FormSelect2(props) {
    var _this;
    _classCallCheck2(this, FormSelect2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(FormSelect2).call(this, props));
    _this.getRef = _this.getRef.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    return _this;
  }
  _createClass2(FormSelect2, [{
    key: "getRef",
    value: function getRef(ref) {
      if (this.props.innerRef) {
        this.props.innerRef(ref);
      }
      this.ref = ref;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props, className = _this$props.className, children = _this$props.children, size = _this$props.size, valid = _this$props.valid, invalid = _this$props.invalid, innerRef = _this$props.innerRef, attrs = _objectWithoutProperties(_this$props, ["className", "children", "size", "valid", "invalid", "innerRef"]);
      var classes = (0, import_classnames2.default)(className, "form-control", "custom-select", valid && "is-valid", invalid && "is-invalid", size && "form-control-".concat(size), size && "custom-select-".concat(size));
      return import_react3.default.createElement("select", _extends3({}, attrs, {
        className: classes,
        ref: innerRef
      }), children);
    }
  }]);
  return FormSelect2;
}(import_react3.default.Component);
FormSelect.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * The size.
   */
  size: propTypes.string,
  /**
   * Whether it is valid, or not.
   */
  valid: propTypes.bool,
  /**
   * Whether it is invalid, or not.
   */
  invalid: propTypes.bool,
  /**
   * The inner ref.
   */
  innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string])
};
var FormTextarea = function(_React$Component) {
  _inherits2(FormTextarea2, _React$Component);
  function FormTextarea2(props) {
    var _this;
    _classCallCheck2(this, FormTextarea2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(FormTextarea2).call(this, props));
    _this.getRef = _this.getRef.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    return _this;
  }
  _createClass2(FormTextarea2, [{
    key: "getRef",
    value: function getRef(ref) {
      if (this.props.innerRef) {
        this.props.innerRef(ref);
      }
      this.ref = ref;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props, className = _this$props.className, children = _this$props.children, innerRef = _this$props.innerRef, plaintext = _this$props.plaintext, size = _this$props.size, valid = _this$props.valid, invalid = _this$props.invalid, attrs = _objectWithoutProperties(_this$props, ["className", "children", "innerRef", "plaintext", "size", "valid", "invalid"]);
      var classes = (0, import_classnames2.default)(className, children, plaintext ? "form-control-plaintext" : "form-control", plaintext && "w-100", size && "form-control-".concat(size), valid && "is-valid", invalid && "is-invalid");
      return import_react3.default.createElement("textarea", _extends3({}, attrs, {
        className: classes,
        ref: innerRef
      }));
    }
  }]);
  return FormTextarea2;
}(import_react3.default.Component);
FormTextarea.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * The size.
   */
  size: propTypes.string,
  /**
   * Whether it should be displayed as plain text, or not.
   */
  plaintext: propTypes.bool,
  /**
   * Whether it is valid, or not.
   */
  valid: propTypes.bool,
  /**
   * Whether it is invalid, or not.
   */
  invalid: propTypes.bool,
  /**
   * The inner ref.
   */
  innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string])
};
var InputGroup = function InputGroup2(props) {
  var className = props.className, Tag = props.tag, size = props.size, seamless = props.seamless, attrs = _objectWithoutProperties(props, ["className", "tag", "size", "seamless"]);
  var classes = (0, import_classnames2.default)(className, "input-group", seamless && "input-group-seamless", size && "input-group-".concat(size));
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
InputGroup.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * The size.
   */
  size: propTypes.string,
  /**
   * Whether it is seamless, or not.
   */
  seamless: propTypes.bool,
  /**
   * The tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
InputGroup.defaultProps = {
  tag: "div"
};
var InputGroupText = function InputGroupText2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "input-group-text");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
InputGroupText.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
InputGroupText.defaultProps = {
  tag: "span"
};
var InputGroupAddon = function InputGroupAddon2(props) {
  var className = props.className, children = props.children, Tag = props.tag, type = props.type, attrs = _objectWithoutProperties(props, ["className", "children", "tag", "type"]);
  var classes = (0, import_classnames2.default)(className, "input-group-".concat(type));
  if (typeof children === "string") {
    return import_react3.default.createElement(Tag, _extends3({}, attrs, {
      className: classes
    }), import_react3.default.createElement(InputGroupText, null, children));
  }
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }), children);
};
InputGroupAddon.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * The addon type.
   */
  type: propTypes.oneOf(INPUT_GROUP_ADDON_TYPES).isRequired,
  /**
   * The component's tag type.
   */
  tag: propTypes.string
};
InputGroupAddon.defaultProps = {
  tag: "div"
};
var ListGroup = function ListGroup2(props) {
  var className = props.className, Tag = props.tag, flush = props.flush, small = props.small, attrs = _objectWithoutProperties(props, ["className", "tag", "flush", "small"]);
  var classes = (0, import_classnames2.default)(className, "list-group", small && "list-group-sm", flush && "list-group-flush");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
ListGroup.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * Whether the list group should be flushed, or not.
   */
  flush: propTypes.bool,
  /**
   * Whether the list group is small, or not.
   */
  small: propTypes.bool,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
ListGroup.defaultProps = {
  tag: "ul"
};
var ListGroupItem = function ListGroupItem2(props) {
  var className = props.className, Tag = props.tag, active = props.active, action = props.action, disabled = props.disabled, theme = props.theme, attrs = _objectWithoutProperties(props, ["className", "tag", "active", "action", "disabled", "theme"]);
  var classes = (0, import_classnames2.default)(className, active && "active", disabled && "disabled", action && "list-group-item-action", theme && "list-group-item-".concat(theme), "list-group-item");
  if (disabled) {
    attrs.onClick = function(e3) {
      e3.preventDefault();
    };
  }
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
ListGroupItem.propTypes = {
  /**
   * Whether it is active, or not.
   */
  active: propTypes.bool,
  /**
   * Whether it is disabled, or not.
   */
  disabled: propTypes.bool,
  /**
   * The theme color.
   */
  theme: propTypes.string,
  /**
   * Whether it is an action item, or not.
   */
  action: propTypes.bool,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
ListGroupItem.defaultProps = {
  tag: "li"
};
var ListGroupItemHeading = function ListGroupItemHeading2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "list-group-item-heading");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
ListGroupItemHeading.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.any,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
ListGroupItemHeading.defaultProps = {
  tag: "h5"
};
var ListGroupItemText = function ListGroupItemText2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "list-group-item-text");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
ListGroupItemText.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
ListGroupItemText.defaultProps = {
  tag: "p"
};
var Modal = function(_React$Component) {
  _inherits2(Modal2, _React$Component);
  function Modal2(props) {
    var _this;
    _classCallCheck2(this, Modal2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(Modal2).call(this, props));
    _this.state = {
      open: _this.props.open || false
    };
    _this.handleOnEntered = _this.handleOnEntered.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.handleOnExit = _this.handleOnExit.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.handleOnExited = _this.handleOnExited.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.handleBackdropClick = _this.handleBackdropClick.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.modalContent = null;
    return _this;
  }
  _createClass2(Modal2, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (prevState.open !== this.props.open) {
        this.setState({
          open: this.props.open
        });
      }
    }
  }, {
    key: "handleOnEntered",
    value: function handleOnEntered(type, node) {
      var _this$props = this.props, fade = _this$props.fade, showModal = _this$props.showModal;
      if (type === "backdrop" && fade === false) {
        return;
      }
      node.classList.add("show");
      if (type === "modal") {
        showModal && showModal();
      }
    }
  }, {
    key: "handleOnExit",
    value: function handleOnExit(type, node) {
      var _this$props2 = this.props, fade = _this$props2.fade, hideModal = _this$props2.hideModal;
      if (type === "backdrop" && fade === false) {
        return;
      }
      node.classList.remove("show");
      if (type === "modal") {
        hideModal && hideModal();
      }
    }
  }, {
    key: "handleOnExited",
    value: function handleOnExited() {
      this.props.hiddenModal && this.props.hiddenModal();
    }
  }, {
    key: "handleBackdropClick",
    value: function handleBackdropClick(e3) {
      if (!this.modalContent.contains(e3.target)) {
        this.props.toggle();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      if (!this.state.open) {
        return null;
      }
      var _this$props3 = this.props, id = _this$props3.id, backdrop = _this$props3.backdrop, fade = _this$props3.fade, tabIndex = _this$props3.tabIndex, backdropClassName = _this$props3.backdropClassName, modalClassName = _this$props3.modalClassName, animation = _this$props3.animation, modalContentClassName = _this$props3.modalContentClassName, position = _this$props3.position, role = _this$props3.role, size = _this$props3.size, children = _this$props3.children, centered = _this$props3.centered, className = _this$props3.className;
      var backdropClasses = (0, import_classnames2.default)("modal-backdrop", fade ? "fade" : "show", backdropClassName);
      var modalClasses = (0, import_classnames2.default)("modal", fade && "fade", modalClassName, fade && (animation || position && position.split("-").slice(-1)[0] || "top"));
      var modalAttrs = {
        "aria-hidden": true,
        id: id || void 0,
        tabIndex,
        role,
        style: {
          display: "block"
        }
      };
      var modalDialogClasses = (0, import_classnames2.default)("modal-dialog", className, size && "modal-".concat(size), centered && "modal-dialog-centered", position && "modal-".concat(position));
      var contentClasses = (0, import_classnames2.default)("modal-content", modalContentClassName);
      return import_react3.default.createElement(import_react3.Fragment, null, backdrop && import_react3.default.createElement(import_react_transition_group.Transition, {
        timeout: fade ? TIMEOUT.FADE : 0,
        in: this.state.open,
        appear: this.state.open,
        mountOnEnter: true,
        unmountOnExit: true,
        onEntered: function onEntered(node) {
          return _this2.handleOnEntered("backdrop", node);
        },
        onExit: function onExit(node) {
          return _this2.handleOnExit("backdrop", node);
        },
        onExited: this.handleOnExited
      }, import_react3.default.createElement("div", {
        className: backdropClasses
      })), import_react3.default.createElement(import_react_transition_group.Transition, {
        timeout: fade ? TIMEOUT.FADE : 0,
        in: this.state.open,
        appear: this.state.open,
        mountOnEnter: true,
        unmountOnExit: true,
        onClick: this.handleBackdropClick,
        onEntered: function onEntered(node) {
          return _this2.handleOnEntered("modal", node);
        },
        onExit: function onExit(node) {
          return _this2.handleOnExit("modal", node);
        }
      }, import_react3.default.createElement("div", _extends3({
        className: modalClasses
      }, modalAttrs), import_react3.default.createElement("div", {
        className: modalDialogClasses,
        role: "document"
      }, import_react3.default.createElement("div", {
        ref: function ref(el) {
          return _this2.modalContent = el;
        },
        className: contentClasses
      }, children)))));
    }
  }]);
  return Modal2;
}(import_react3.default.Component);
Modal.propTypes = {
  /**
   * The id.
   */
  id: propTypes.string,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * Whether it is open, or not.
   */
  open: propTypes.bool,
  /**
   * Whether it should fade, or not.
   */
  fade: propTypes.bool,
  /**
   * Whether it should display a backdrop, or not.
   */
  backdrop: propTypes.bool,
  /**
   * The function that should be triggered when the modal is shown.
   */
  showModal: propTypes.func,
  /**
   * The function that should be triggered when the modal is set to hide.
   */
  hideModal: propTypes.func,
  /**
   * The function that should be triggered when the modal is finally hidden.
   */
  hiddenModal: propTypes.func,
  /**
   * Whether it should be centered, or not.
   */
  centered: propTypes.bool,
  /**
   * The class name for the backdrop element.
   */
  backdropClassName: propTypes.string,
  /**
   * The toggle function.
   */
  toggle: propTypes.func,
  /**
   * The class name for the modal.
   */
  modalClassName: propTypes.string,
  /**
   *
   */
  animation: propTypes.bool,
  /**
   * The position.
   */
  position: propTypes.string,
  /**
   * The size.
   */
  size: propTypes.string,
  /**
   * The tab index.
   */
  tabIndex: propTypes.string,
  /**
   * The class name for the modal content.
   */
  modalContentClassName: propTypes.string,
  /**
   * The role attribute for the modal.
   */
  role: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node])
};
Modal.defaultProps = {
  open: false,
  fade: true,
  backdrop: true,
  role: "dialog"
};
var ModalBody = function ModalBody2(props) {
  var className = props.className, children = props.children, attrs = _objectWithoutProperties(props, ["className", "children"]);
  var classes = (0, import_classnames2.default)("modal-body", className);
  return import_react3.default.createElement("div", _extends3({
    className: classes
  }, attrs), children);
};
ModalBody.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node])
};
var ModalHeader = function ModalHeader2(props) {
  var className = props.className, children = props.children, toggle4 = props.toggle, Tag = props.tag, closeAriaLabel = props.closeAriaLabel, titleClass = props.titleClass, attrs = _objectWithoutProperties(props, ["className", "children", "toggle", "tag", "closeAriaLabel", "titleClass"]);
  var classes = (0, import_classnames2.default)("modal-header", className);
  var titleClasses = (0, import_classnames2.default)("modal-title", titleClass);
  var closeButton = null;
  if (toggle4) {
    closeButton = import_react3.default.createElement("button", {
      type: "button",
      onClick: toggle4,
      className: "close",
      "aria-label": closeAriaLabel
    }, import_react3.default.createElement("span", {
      "aria-hidden": "true"
    }, String.fromCharCode(215)));
  }
  return import_react3.default.createElement("div", _extends3({
    className: classes
  }, attrs), import_react3.default.createElement(Tag, {
    className: titleClasses
  }, children), closeButton);
};
ModalHeader.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The toggle function.
   */
  toggle: propTypes.func,
  /**
   * The component's tag type.
   */
  tag: propTypes.string,
  /**
   * The close button's aria label.
   */
  closeAriaLabel: propTypes.string,
  /**
   * The class for the modal title.
   */
  titleClass: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node])
};
ModalHeader.defaultProps = {
  tag: "h5",
  closeAriaLabel: "Close"
};
var ModalFooter = function ModalFooter2(props) {
  var className = props.className, children = props.children, attrs = _objectWithoutProperties(props, ["className", "children"]);
  var classes = (0, import_classnames2.default)("modal-footer", className);
  return import_react3.default.createElement("div", _extends3({
    className: classes
  }, attrs), children);
};
ModalFooter.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node])
};
var Nav = function Nav2(props) {
  var className = props.className, navbar = props.navbar, horizontal = props.horizontal, vertical = props.vertical, tabs = props.tabs, card = props.card, pills = props.pills, justified = props.justified, fill = props.fill, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "navbar", "horizontal", "vertical", "tabs", "card", "pills", "justified", "fill", "tag"]);
  var verticalClass;
  if (vertical === true || vertical === "xs") {
    verticalClass = "flex-column";
  } else if (vertical === false) {
    verticalClass = false;
  } else if (typeof vertical === "string") {
    verticalClass = "flex-".concat(vertical, "-column");
  }
  var classes = (0, import_classnames2.default)(className, navbar ? "navbar-nav" : "nav", horizontal && "justify-content-".concat(horizontal), verticalClass, tabs && "nav-tabs", card && tabs && "card-header-tabs", pills && "nav-pills", card && pills && "card-header-pills", justified && "nav-justified", fill && "nav-fill");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
Nav.defaultProps = {
  tag: "ul",
  vertical: false
};
Nav.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * Whether it is located inside a Navbar, or not.
   */
  navbar: propTypes.bool,
  /**
   * Justify content horizontally.
   */
  horizontal: propTypes.string,
  /**
   * Whether it should be displayed as tabs, or not.
   */
  tabs: propTypes.bool,
  /**
   * Whether it is located inside a card, or not.
   */
  card: propTypes.bool,
  /**
   * Whether it should be displayed as pills, or not.
   */
  pills: propTypes.bool,
  /**
   * Whether it is justified, or not.
   */
  justified: propTypes.bool,
  /**
   * Whether it should fill the entire space, or not.
   */
  fill: propTypes.bool,
  /**
   * Whether it is vertical, or not.
   */
  vertical: propTypes.oneOfType([propTypes.bool, propTypes.string]),
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
var NavItem = function NavItem2(props) {
  var className = props.className, active = props.active, disabled = props.disabled, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "active", "disabled", "tag"]);
  var classes = (0, import_classnames2.default)(className, "nav-item", active && "active", disabled && "disabled");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
NavItem.propTypes = {
  /**
   * Whether it is active, or not.
   */
  active: propTypes.bool,
  /**
   * Whether it is disabled, or not.
   */
  disabled: propTypes.bool,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
NavItem.defaultProps = {
  tag: "li"
};
var NavLink = function(_React$Component) {
  _inherits2(NavLink2, _React$Component);
  function NavLink2(props) {
    var _this;
    _classCallCheck2(this, NavLink2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(NavLink2).call(this, props));
    _this.handleOnClick = _this.handleOnClick.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    return _this;
  }
  _createClass2(NavLink2, [{
    key: "handleOnClick",
    value: function handleOnClick(e3) {
      if (this.props.disabled) {
        e3.preventDefault();
        return;
      }
      if (this.props.href === "#") {
        e3.preventDefault();
      }
      if (this.props.onClick) {
        this.props.onClick(e3);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props, className = _this$props.className, active = _this$props.active, disabled = _this$props.disabled, Tag = _this$props.tag, innerRef = _this$props.innerRef, attrs = _objectWithoutProperties(_this$props, ["className", "active", "disabled", "tag", "innerRef"]);
      var classes = (0, import_classnames2.default)(className, "nav-link", disabled && "disabled", active && "active");
      return import_react3.default.createElement(Tag, _extends3({}, attrs, {
        ref: innerRef,
        onClick: this.handleOnClick,
        className: classes
      }));
    }
  }]);
  return NavLink2;
}(import_react3.default.Component);
NavLink.propTypes = {
  /**
   * Whether it is disabled, or not.
   */
  disabled: propTypes.bool,
  /**
   * Whether it is active, or not.
   */
  active: propTypes.bool,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The function that should be triggered on click.
   */
  onClick: propTypes.func,
  /**
   * The href attribute value.
   */
  href: propTypes.any,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string]),
  /**
   * The inner ref.
   */
  innerRef: propTypes.oneOfType([propTypes.object, propTypes.func, propTypes.string])
};
NavLink.defaultProps = {
  tag: "a"
};
var Navbar = function Navbar2(props) {
  var className = props.className, expand = props.expand, fixed = props.fixed, sticky = props.sticky, theme = props.theme, type = props.type, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "expand", "fixed", "sticky", "theme", "type", "tag"]);
  var expandClass;
  if (expand === false) {
    expandClass = false;
  } else if (expand === true || expand === "xs") {
    expandClass = "navbar-expand";
  } else if (typeof expand === "string") {
    expandClass = "navbar-expand-".concat(expand);
  }
  var classes = (0, import_classnames2.default)(className, "navbar", expandClass, type === "light" && "navbar-light", type === "dark" && "navbar-dark", theme && "bg-".concat(theme), fixed && "fixed-".concat(fixed), sticky && "sticky-".concat(sticky));
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
Navbar.propTypes = {
  /**
   * Whether it is full, or not.
   */
  full: propTypes.bool,
  /**
   * Whether it is fixed, or not.
   */
  fixed: propTypes.string,
  /**
   * Whether it is sticky, or not.
   */
  sticky: propTypes.string,
  /**
   * The theme color.
   */
  theme: propTypes.string,
  /**
   * The role attribute.
   */
  role: propTypes.string,
  /**
   * The class name attribute.
   */
  className: propTypes.string,
  /**
   * The navbar type.
   */
  type: propTypes.oneOf(["dark", "light"]),
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string]),
  /**
   * Whether it should expand, or not.
   */
  expand: propTypes.oneOfType([propTypes.bool, propTypes.string])
};
Navbar.defaultProps = {
  tag: "nav",
  expand: false
};
var NavbarBrand = function NavbarBrand2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "navbar-brand");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
NavbarBrand.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
NavbarBrand.defaultProps = {
  tag: "a"
};
var NavbarToggler = function NavbarToggler2(props) {
  var className = props.className, children = props.children, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "children", "tag"]);
  var classes = (0, import_classnames2.default)(className, "navbar-toggler");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }), children || import_react3.default.createElement("span", {
    className: "navbar-toggler-icon"
  }));
};
NavbarToggler.propTypes = {
  /**
   * The component's tag type.
   */
  type: propTypes.string,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * The tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
NavbarToggler.defaultProps = {
  tag: "button",
  type: "button"
};
var PopperManager = function(_React$Component) {
  _inherits2(PopperManager2, _React$Component);
  function PopperManager2(props) {
    var _this;
    _classCallCheck2(this, PopperManager2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(PopperManager2).call(this, props));
    _this.handlePlacementChange = _this.handlePlacementChange.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.setTargetNode = _this.setTargetNode.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.getReferenceElement = _this.getReferenceElement.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this._element = null;
    _this.state = {
      placement: null
    };
    return _this;
  }
  _createClass2(PopperManager2, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this._element && this._element.childNodes && this._element.childNodes[0] && this._element.childNodes[0].focus) {
        this._element.childNodes[0].focus();
      }
    }
  }, {
    key: "setTargetNode",
    value: function setTargetNode(node) {
      this.targetNode = node;
    }
  }, {
    key: "getReferenceElement",
    value: function getReferenceElement() {
      return this.targetNode;
    }
  }, {
    key: "getContainerNode",
    value: function getContainerNode() {
      return getTarget(this.props.container);
    }
  }, {
    key: "handlePlacementChange",
    value: function handlePlacementChange(data) {
      if (this.state.placement !== data.placement) {
        this.setState({
          placement: data.placement
        });
      }
      return data;
    }
  }, {
    key: "renderChildren",
    value: function renderChildren() {
      var _this$props = this.props, children = _this$props.children, open = _this$props.open, target = _this$props.target, offset2 = _this$props.offset, placementPrefix = _this$props.placementPrefix, noArrow = _this$props.noArrow, arrowClassName = _this$props.arrowClassName, className = _this$props.className, container = _this$props.container, modifiers2 = _this$props.modifiers, boundariesElement = _this$props.boundariesElement, flip2 = _this$props.flip, fallbackPlacement = _this$props.fallbackPlacement, tag = _this$props.tag, attrs = _objectWithoutProperties(_this$props, ["children", "open", "target", "offset", "placementPrefix", "noArrow", "arrowClassName", "className", "container", "modifiers", "boundariesElement", "flip", "fallbackPlacement", "tag"]);
      var _placement = this.state.placement || attrs.placement;
      var _className = (0, import_classnames2.default)(className, placementPrefix ? "".concat(placementPrefix, "-").concat(_placement) : _placement);
      var _arrowClassName = (0, import_classnames2.default)("arrow", arrowClassName);
      var _modifiers = _objectSpread({
        offset: {
          offset: offset2
        },
        flip: {
          enabled: flip2,
          behavior: fallbackPlacement
        },
        preventOverflow: {
          boundariesElement
        },
        update: {
          enabled: true,
          order: 950,
          fn: this.handlePlacementChange
        }
      }, modifiers2);
      return import_react3.default.createElement(Popper2, _extends3({
        referenceElement: this.getReferenceElement(),
        modifiers: _modifiers,
        placement: _placement
      }, attrs), function(_ref) {
        var ref = _ref.ref, style = _ref.style, placement = _ref.placement, arrowProps = _ref.arrowProps;
        return import_react3.default.createElement("div", {
          ref,
          className: _className,
          style,
          "data-placement": placement
        }, children, !noArrow && import_react3.default.createElement("div", {
          ref: arrowProps.ref,
          style: arrowProps.style,
          className: _arrowClassName
        }));
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props, target = _this$props2.target, open = _this$props2.open, container = _this$props2.container;
      this.setTargetNode(getTarget(target));
      if (!open) {
        return null;
      }
      if (container === "inline") {
        return this.renderChildren();
      }
      var containerNode = this.getContainerNode();
      return import_react_dom2.default.createPortal(import_react3.default.createElement("div", null, this.renderChildren()), containerNode);
    }
  }]);
  return PopperManager2;
}(import_react3.default.Component);
PopperManager.propTypes = {
  /**
   * The target.
   */
  target: CustomPropTypes.target.isRequired,
  /**
   * The container.
   */
  container: CustomPropTypes.target,
  /**
   * The children.
   */
  children: propTypes.node.isRequired,
  /**
   * Whether the Popper is open, or not.
   */
  open: propTypes.bool,
  /**
   * Whether the Popper should flip, or not.
   */
  flip: propTypes.bool,
  /**
   * The Popper offset.
   */
  offset: propTypes.oneOfType([propTypes.string, propTypes.number]),
  /**
   * The Popper fallback placement.
   */
  fallbackPlacement: propTypes.oneOfType([propTypes.string, propTypes.array]),
  /**
   * The Popper placement prefix.
   */
  placementPrefix: propTypes.string,
  /**
   * The Popper's arrow className.
   */
  arrowClassName: propTypes.string,
  /**
   * Whether to hide the arrow, or not.
   */
  noArrow: propTypes.bool,
  /**
   * The Popper class name.
   */
  className: propTypes.string,
  /**
   * The component tag.
   */
  tag: propTypes.string,
  /**
   * The modifiers object.
   */
  modifiers: propTypes.object,
  /**
   * The boundaries element for the Popper instance.
   */
  boundariesElement: propTypes.oneOfType([propTypes.string, propTypes.element])
};
PopperManager.defaultProps = {
  boundariesElement: "scrollParent",
  placement: "auto",
  arrow: true,
  open: false,
  offset: 0,
  fallbackPlacement: "flip",
  flip: true,
  container: "body",
  modifiers: /* @__PURE__ */ Object.create(null)
};
var Popover = function(_React$Component) {
  _inherits2(Popover2, _React$Component);
  function Popover2(props) {
    var _this;
    _classCallCheck2(this, Popover2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(Popover2).call(this, props));
    _this.show = _this.show.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.hide = _this.hide.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.maybeShow = _this.maybeShow.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.toggle = _this.toggle.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.addListeners = _this.addListeners.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.removeListeners = _this.removeListeners.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.handleClick = _this.handleClick.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.getDelay = _this.getDelay.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this._target = null;
    _this._hideTimeout = null;
    _this._showTimeout = null;
    return _this;
  }
  _createClass2(Popover2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this._target = getTarget(this.props.target);
      this.maybeShow();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.maybeShow();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearTimeout(this._showTimeout);
      clearTimeout(this._hideTimeout);
      this.removeListeners();
    }
  }, {
    key: "show",
    value: function show() {
      clearTimeout(this._hideTimeout);
      this.addListeners();
      if (!this.props.open) {
        clearTimeout(this._showTimeout);
        this._showTimeout = setTimeout(this.toggle, this.getDelay("show"));
      }
    }
  }, {
    key: "hide",
    value: function hide2() {
      clearTimeout(this._showTimeout);
      this.removeListeners();
      if (this.props.open) {
        clearTimeout(this._hideTimeout);
        this._hideTimeout = setTimeout(this.toggle, this.getDelay("hide"));
      }
    }
  }, {
    key: "maybeShow",
    value: function maybeShow() {
      if (this.props.open) {
        this.show();
        return;
      }
      this.hide();
    }
  }, {
    key: "toggle",
    value: function toggle4(event) {
      if (this.props.disabled) {
        event.preventDefault();
        return;
      }
      return this.props.toggle(event);
    }
  }, {
    key: "addListeners",
    value: function addListeners() {
      var _this2 = this;
      EVENTS.CLICK.forEach(function(event) {
        return document.addEventListener(event, _this2.handleClick, true);
      });
    }
  }, {
    key: "removeListeners",
    value: function removeListeners() {
      var _this3 = this;
      EVENTS.CLICK.forEach(function(event) {
        document.removeEventListener(event, _this3.handleClick, true);
      });
    }
  }, {
    key: "handleClick",
    value: function handleClick(event) {
      if (!this._target) {
        return;
      }
      if (event.target !== this._target && !this._target.contains(event.target) && event.target !== this._popover && !(this._popover && this._popover.contains(event.target))) {
        if (this._hideTimeout) {
          clearTimeout(this._hideTimeout);
        }
        if (this.props.open) {
          this.toggle(event);
        }
      }
    }
  }, {
    key: "getDelay",
    value: function getDelay(key) {
      key = key.toUpperCase();
      if (_typeof2(this.props.delay) === "object") {
        return isNaN(this.props.delay[key]) ? TIMEOUT[key] : this.props.delay[key];
      }
      return this.props.delay;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props, className = _this$props.className, target = _this$props.target, container = _this$props.container, modifiers2 = _this$props.modifiers, open = _this$props.open, innerClassName = _this$props.innerClassName, noArrow = _this$props.noArrow, arrowClassName = _this$props.arrowClassName, placement = _this$props.placement, placementPrefix = _this$props.placementPrefix, boundariesElement = _this$props.boundariesElement, offset2 = _this$props.offset, attrs = _objectWithoutProperties(_this$props, ["className", "target", "container", "modifiers", "open", "innerClassName", "noArrow", "arrowClassName", "placement", "placementPrefix", "boundariesElement", "offset"]);
      if (!open) {
        return null;
      }
      var classes = (0, import_classnames2.default)("popover-inner", innerClassName);
      var popperClasses = (0, import_classnames2.default)("popover", "show", className);
      return import_react3.default.createElement(PopperManager, {
        className: popperClasses,
        target,
        container,
        modifiers: modifiers2,
        offset: offset2,
        open,
        noArrow,
        arrowClassName,
        placement,
        placementPrefix,
        boundariesElement
      }, import_react3.default.createElement("div", _extends3({}, attrs, {
        className: classes
      })));
    }
  }]);
  return Popover2;
}(import_react3.default.Component);
Popover.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The target element.
   */
  target: CustomPropTypes.target.isRequired,
  /**
   * The popover container.
   */
  container: CustomPropTypes.target,
  /**
   * Popper modifiers object.
   */
  modifiers: propTypes.object,
  /**
   * Whether the popover is open, or not.
   */
  open: propTypes.bool,
  /**
   * The inner class name.
   */
  innerClassName: propTypes.string,
  /**
   * Whether the popover is disabled, or not.
   */
  disabled: propTypes.bool,
  /**
   * Whether to hide the arrow, or not.
   */
  noArrow: propTypes.bool,
  /**
   * The arrow class name.
   */
  arrowClassName: propTypes.string,
  /**
   * The boundaries element for the Popover instance.
   */
  boundariesElement: propTypes.oneOfType([propTypes.string, propTypes.element]),
  /**
   * The popover placement.
   */
  placement: propTypes.string,
  /**
   * The placement prefix.
   */
  placementPrefix: propTypes.string,
  /**
   * The popover offset.
   */
  offset: propTypes.oneOfType([propTypes.string, propTypes.number]),
  /**
   * The toggle function.
   */
  toggle: propTypes.func.isRequired,
  /**
   * The show/hide delay in ms.
   */
  delay: propTypes.oneOfType([propTypes.number, propTypes.shape({
    show: propTypes.number,
    hide: propTypes.number
  })])
};
Popover.defaultProps = {
  open: false,
  noArrow: false,
  placement: "top",
  placementPrefix: "bs-popover",
  delay: {
    show: 0,
    hide: 0
  },
  toggle: function toggle2() {
  }
};
var PopoverBody = function PopoverBody2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "popover-body");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
PopoverBody.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The component's tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
PopoverBody.defaultProps = {
  tag: "div"
};
var PopoverHeader = function PopoverHeader2(props) {
  var className = props.className, Tag = props.tag, attrs = _objectWithoutProperties(props, ["className", "tag"]);
  var classes = (0, import_classnames2.default)(className, "popover-header");
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: classes
  }));
};
PopoverHeader.propTypes = {
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The tag type.
   */
  tag: propTypes.oneOfType([propTypes.func, propTypes.string])
};
PopoverHeader.defaultProps = {
  tag: "h3"
};
var Progress = function Progress2(props) {
  var children = props.children, className = props.className, barClassName = props.barClassName, value = props.value, max2 = props.max, animated = props.animated, striped = props.striped, theme = props.theme, bar = props.bar, multi = props.multi, Tag = props.tag, attrs = _objectWithoutProperties(props, ["children", "className", "barClassName", "value", "max", "animated", "striped", "theme", "bar", "multi", "tag"]);
  var percent = (0, import_lodash3.default)(value) / (0, import_lodash3.default)(max2) * 100;
  var progressClasses = (0, import_classnames2.default)(className, "progress");
  var progressBarClasses = (0, import_classnames2.default)("progress-bar", bar ? className || barClassName : barClassName, animated && "progress-bar-animated", theme && "bg-".concat(theme), (striped || animated) && "progress-bar-striped");
  var ProgressBar = multi ? children : import_react3.default.createElement("div", {
    className: progressBarClasses,
    style: {
      width: "".concat(percent, "%")
    },
    role: "progressbar",
    "aria-valuenow": value,
    "aria-valuemin": "0",
    "aria-valuemax": max2
  }, children);
  if (bar) {
    return ProgressBar;
  }
  return import_react3.default.createElement(Tag, _extends3({}, attrs, {
    className: progressClasses
  }), ProgressBar);
};
Progress.propTypes = {
  /**
   * The children nodes.
   */
  children: propTypes.node,
  /**
   * Whether it is a bar, or not.
   */
  bar: propTypes.bool,
  /**
   * Whether there are multiple progress bars nested, or not.
   */
  multi: propTypes.bool,
  /**
   * The component's tag type.
   */
  tag: propTypes.string,
  /**
   * Whether it is animated, or not.
   */
  animated: propTypes.bool,
  /**
   * Whether it is striped, or not.
   */
  striped: propTypes.bool,
  /**
   * The theme color.
   */
  theme: propTypes.string,
  /**
   * The class name.
   */
  className: propTypes.string,
  /**
   * The class name for the bar element.
   */
  barClassName: propTypes.string,
  /**
   * The value.
   */
  value: propTypes.oneOfType([propTypes.string, propTypes.number]),
  /**
   * The max value.
   */
  max: propTypes.oneOfType([propTypes.string, propTypes.number])
};
Progress.defaultProps = {
  tag: "div",
  value: 0,
  max: 100,
  theme: "primary"
};
var Slider = function(_React$Component) {
  _inherits2(Slider2, _React$Component);
  function Slider2() {
    _classCallCheck2(this, Slider2);
    return _possibleConstructorReturn2(this, _getPrototypeOf2(Slider2).apply(this, arguments));
  }
  _createClass2(Slider2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.disabled) {
        this.sliderContainer.setAttribute("disabled", true);
      } else {
        this.sliderContainer.removeAttribute("disabled");
      }
      this.createSlider();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.props.disabled) {
        this.sliderContainer.setAttribute("disabled", true);
      } else {
        this.sliderContainer.removeAttribute("disabled");
      }
      this.slider.destroy();
      this.createSlider();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.slider.destroy();
    }
  }, {
    key: "createSlider",
    value: function createSlider() {
      var slider = this.slider = import_nouislider.default.create(this.sliderContainer, _objectSpread({}, this.props));
      if (this.props.onUpdate) {
        slider.on("update", this.props.onUpdate);
      }
      if (this.props.onChange) {
        slider.on("change", this.props.onChange);
      }
      if (this.props.onSlide) {
        slider.on("slide", this.props.onSlide);
      }
      if (this.props.onStart) {
        slider.on("start", this.props.onStart);
      }
      if (this.props.onEnd) {
        slider.on("end", this.props.onEnd);
      }
      if (this.props.onSet) {
        slider.on("set", this.props.onSet);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;
      var _this$props = this.props, className = _this$props.className, theme = _this$props.theme;
      var classes = (0, import_classnames2.default)(className, theme && "slider-".concat(theme));
      return import_react3.default.createElement("div", {
        className: classes,
        ref: function ref(slider) {
          _this.sliderContainer = slider;
        }
      });
    }
  }]);
  return Slider2;
}(import_react3.default.Component);
Slider.propTypes = {
  className: propTypes.string,
  theme: propTypes.string,
  animate: propTypes.bool,
  behaviour: propTypes.string,
  cssPrefix: propTypes.string,
  disabled: propTypes.bool,
  limit: propTypes.number,
  margin: propTypes.number,
  onChange: propTypes.func,
  onEnd: propTypes.func,
  onSet: propTypes.func,
  onSlide: propTypes.func,
  onStart: propTypes.func,
  onUpdate: propTypes.func,
  pips: propTypes.object,
  range: propTypes.object.isRequired,
  start: propTypes.arrayOf(propTypes.number).isRequired,
  step: propTypes.number,
  direction: propTypes.oneOf(["ltr", "rtl"]),
  orientation: propTypes.oneOf(["horizontal", "vertical"]),
  connect: propTypes.oneOfType([propTypes.arrayOf(propTypes.bool), propTypes.bool]),
  tooltips: propTypes.oneOfType([propTypes.bool, propTypes.arrayOf(propTypes.shape({
    to: propTypes.func
  }))])
};
var Tooltip = function(_React$Component) {
  _inherits2(Tooltip2, _React$Component);
  function Tooltip2(props) {
    var _this;
    _classCallCheck2(this, Tooltip2);
    _this = _possibleConstructorReturn2(this, _getPrototypeOf2(Tooltip2).call(this, props));
    _this.addListeners = _this.addListeners.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.removeListeners = _this.removeListeners.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.handleClick = _this.handleClick.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.handleMouseEnter = _this.handleMouseEnter.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.handleMouseLeave = _this.handleMouseLeave.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.handleMouseOverContent = _this.handleMouseOverContent.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.handleMouseLeaveContent = _this.handleMouseLeaveContent.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.show = _this.show.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.hide = _this.hide.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this.toggle = _this.toggle.bind(_assertThisInitialized3(_assertThisInitialized3(_this)));
    _this._target = null;
    _this._hideTimeout = null;
    _this._showTimeout = null;
    return _this;
  }
  _createClass2(Tooltip2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this._target = getTarget(this.props.target);
      this.addListeners();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearTimeout(this._hideTimeout);
      clearTimeout(this._showTimeout);
      this.removeListeners();
    }
  }, {
    key: "addListeners",
    value: function addListeners() {
      var _this2 = this;
      var triggers = this.props.trigger.trim().split(/\s+/);
      triggers.forEach(function(trigger) {
        switch (trigger) {
          case "click":
            EVENTS.CLICK.forEach(function(e3) {
              return document.addEventListener(e3, _this2);
            });
            break;
          case "hover":
            EVENTS.MOUSE.forEach(function(e3) {
              return _this2._target.addEventListener(e3, _this2);
            });
            break;
          case "focus":
            EVENTS.FOCUS.forEach(function(e3) {
              return _this2._target.addEventListener(e3, _this2);
            });
            break;
          default:
            break;
        }
      }, this);
    }
  }, {
    key: "removeListeners",
    value: function removeListeners() {
      var _this3 = this;
      EVENTS.CLICK.forEach(function(e3) {
        return document.removeEventListener(e3, _this3);
      }, this);
      EVENTS.MOUSE.concat(EVENTS.FOCUS).forEach(function(e3) {
        return _this3._target.removeEventListener(e3, _this3);
      }, this);
    }
  }, {
    key: "handleEvent",
    value: function handleEvent(e3) {
      if (this.props.disabled || this._target === null) {
        return;
      }
      switch (e3.type) {
        case "click":
        case "touchstart":
          this.handleClick(e3);
          break;
        case "mouseenter":
          this.handleMouseEnter(e3);
          break;
        case "mouseleave":
          this.handleMouseLeave(e3);
          break;
        case "focusin":
          this.show(e3);
          break;
        case "focusout":
          this.hide(e3);
          break;
        default:
          break;
      }
    }
  }, {
    key: "handleClick",
    value: function handleClick(e3) {
      if (this._target !== null && (e3.target === this._target || this._target.contains(e3.target))) {
        if (this._hideTimeout) {
          clearTimeout(this._hideTimeout);
        }
        if (!this.props.open) {
          this.toggle(e3);
        }
        return;
      }
      if (this.props.open && e3.target.getAttribute("role") !== "tooltip") {
        if (this._showTimeout) {
          clearTimeout(this._showTimeout);
        }
        this._hideTimeout = setTimeout(this.hide.bind(this, e3), this.getDelay("hide"));
      }
    }
  }, {
    key: "handleMouseEnter",
    value: function handleMouseEnter(e3) {
      if (this._hideTimeout) {
        clearTimeout(this._hideTimeout);
      }
      this._showTimeout = setTimeout(this.show.bind(this, e3), this.getDelay("show"));
    }
  }, {
    key: "handleMouseLeave",
    value: function handleMouseLeave(e3) {
      if (this._showTimeout) {
        clearTimeout(this._showTimeout);
      }
      this._hideTimeout = setTimeout(this.hide.bind(this, e3), this.getDelay("hide"));
    }
  }, {
    key: "handleMouseOverContent",
    value: function handleMouseOverContent() {
      if (this.props.autohide) {
        return;
      }
      if (this._hideTimeout) {
        clearTimeout(this._hideTimeout);
      }
    }
  }, {
    key: "handleMouseLeaveContent",
    value: function handleMouseLeaveContent(e3) {
      if (this.props.autohide) {
        return;
      }
      if (this._showTimeout) {
        clearTimeout(this._showTimeout);
      }
      e3.persist();
      this._hideTimeout = setTimeout(this.hide.bind(this, e3), this.getDelay("hide"));
    }
  }, {
    key: "getDelay",
    value: function getDelay(key) {
      key = key.toUpperCase();
      if (_typeof2(this.props.delay) === "object") {
        return isNaN(this.props.delay[key]) ? TIMEOUT[key] : this.props.delay[key];
      }
      return this.props.delay;
    }
  }, {
    key: "show",
    value: function show(e3) {
      if (!this.props.open) {
        clearTimeout(this._showTimeout);
        this.toggle(e3);
      }
    }
  }, {
    key: "hide",
    value: function hide2(e3) {
      if (this.props.open) {
        clearTimeout(this._hideTimeout);
        this.toggle(e3);
      }
    }
  }, {
    key: "toggle",
    value: function toggle4(e3) {
      if (this.props.disabled) {
        return e3 && e3.preventDefault();
      }
      return this.props.toggle(e3);
    }
  }, {
    key: "render",
    value: function render() {
      var _props = (0, import_lodash4.default)(this.props, ["trigger", "disabled", "delay", "toggle", "autohide"]);
      var target = _props.target, container = _props.container, open = _props.open, className = _props.className, arrowClassName = _props.arrowClassName, innerClassName = _props.innerClassName, boundariesElement = _props.boundariesElement, placement = _props.placement, placementPrefix = _props.placementPrefix, modifiers2 = _props.modifiers, offset2 = _props.offset, noArrow = _props.noArrow, attrs = _objectWithoutProperties(_props, ["target", "container", "open", "className", "arrowClassName", "innerClassName", "boundariesElement", "placement", "placementPrefix", "modifiers", "offset", "noArrow"]);
      if (!open) {
        return null;
      }
      var classes = (0, import_classnames2.default)("tooltip-inner", innerClassName);
      var popperClasses = (0, import_classnames2.default)("tooltip", "show", className);
      return import_react3.default.createElement(PopperManager, {
        container,
        className: popperClasses,
        arrowClassName,
        target,
        open,
        noArrow,
        boundariesElement,
        placement,
        placementPrefix,
        modifiers: modifiers2,
        offset: offset2
      }, import_react3.default.createElement("div", _extends3({}, attrs, {
        className: classes,
        role: "tooltip",
        "aria-hidden": open,
        onMouseOver: this.handleMouseOverContent,
        onMouseLeave: this.handleMouseLeaveContent
      })));
    }
  }]);
  return Tooltip2;
}(import_react3.default.Component);
Tooltip.propTypes = {
  /**
   * The target element.
   */
  target: CustomPropTypes.target.isRequired,
  /**
   * The tooltip container.
   */
  container: CustomPropTypes.target,
  /**
   * The trigger(s) (click, hover, focus).
   */
  trigger: propTypes.string,
  /**
   * Whether the tooltip is open, or not.
   */
  open: propTypes.bool,
  /**
   * Whether the tooltip is disabled, or not.
   */
  disabled: propTypes.bool,
  /**
   * The tooltip class name.
   */
  className: propTypes.string,
  /**
   * The arrow class name.
   */
  arrowClassName: propTypes.string,
  /**
   * The tooltip inner class name.
   */
  innerClassName: propTypes.string,
  /**
   * The tooltip offset.
   */
  offset: propTypes.oneOfType([propTypes.string, propTypes.number]),
  /**
   * The show/hide delay in ms.
   */
  delay: propTypes.oneOfType([propTypes.number, propTypes.shape({
    show: propTypes.number,
    hide: propTypes.number
  })]),
  /**
   * The boundaries element for the tooltip instance.
   */
  boundariesElement: propTypes.oneOfType([propTypes.string, propTypes.element]),
  /**
   * The tooltip placement.
   */
  placement: propTypes.oneOf(POPPER_PLACEMENTS),
  /**
   * The placement prefix.
   */
  placementPrefix: propTypes.string,
  /**
   * Whether to hide the arrow, or not.
   */
  noArrow: propTypes.bool,
  /**
   * The toggle function.
   */
  toggle: propTypes.func.isRequired,
  /**
   * Popper modifiers object.
   */
  modifiers: propTypes.object,
  /**
   * Whether the tooltip should auto-hide, or not.
   */
  autohide: propTypes.bool
};
Tooltip.defaultProps = {
  trigger: "hover",
  open: false,
  disabled: false,
  noArrow: false,
  placement: "top",
  placementPrefix: "bs-tooltip",
  autohide: true,
  delay: {
    show: 0,
    hide: 0
  },
  toggle: function toggle3() {
  }
};
export {
  Alert,
  Badge,
  Breadcrumb,
  BreadcrumbItem,
  Button,
  ButtonGroup,
  ButtonToolbar,
  Card,
  CardBody,
  CardColumns,
  CardDeck,
  CardFooter,
  CardGroup,
  CardHeader,
  CardImg,
  CardImgOverlay,
  CardLink,
  CardSubtitle,
  CardText,
  CardTitle,
  Col,
  Collapse,
  Container,
  DatePicker,
  Dropdown,
  DropdownItem,
  DropdownMenu,
  DropdownToggle,
  Fade,
  Form,
  FormCheckbox,
  FormFeedback,
  FormGroup,
  FormInput,
  FormRadio,
  FormSelect,
  FormTextarea,
  InputGroup,
  InputGroupAddon,
  InputGroupText,
  ListGroup,
  ListGroupItem,
  ListGroupItemHeading,
  ListGroupItemText,
  Modal,
  ModalBody,
  ModalFooter,
  ModalHeader,
  Nav,
  NavItem,
  NavLink,
  Navbar,
  NavbarBrand,
  NavbarToggler,
  Popover,
  PopoverBody,
  PopoverHeader,
  Progress,
  Row,
  Slider,
  Tooltip
};
/*! Bundled license information:

classnames/index.js:
  (*!
  	Copyright (c) 2018 Jed Watson.
  	Licensed under the MIT License (MIT), see
  	http://jedwatson.github.io/classnames
  *)

nouislider/distribute/nouislider.js:
  (*! nouislider - 12.1.0 - 10/25/2018 *)

popper.js/dist/esm/popper.js:
  (**!
   * @fileOverview Kickass library to create and place poppers near their reference elements.
   * @version 1.16.1
   * @license
   * Copyright (c) 2016 Federico Zivolo and contributors
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in all
   * copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   * SOFTWARE.
   *)

shards-react/dist/shards-react.es.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)
*/
//# sourceMappingURL=shards-react.js.map
